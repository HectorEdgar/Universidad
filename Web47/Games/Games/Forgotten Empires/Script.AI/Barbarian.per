; Barbarian by II2N/TheMax
; Plays most of maps with any civ
; Version 2.13 (beta)

; No longer plays 1.0c - compatible only with UserPatch

; Pop 200+ should work fine
; Able to take advantage from UserPatch and also from some features in MegaRandom and other custom maps such as extra town centers
; Having all techs on will probably cause stupid behavior so better play without them
; Won't resign with unsupported settings but performance may be broken
; AoC and AoFE

; Game type: Any
; Map: Any map that is playable for AIs (for example forest nothing is highly limited for AIs by game engine)
; Civilization: Any
; Difficulty: Any (optimized to hard)
; Resources: Any
; Population: Any (200-250 preferred)
; Starting age: Any
; Victory: Any (optimized to conquest); MP MANUAL VILLAGER EXPLORING


; Have fun trying Barbarian

; Feedback is always welcome!

; A big thank to the whole AI Scripters Community, Barbie would never have developed to this level without you guys!

; ============== GOALS

(defconst gl-current-age 1)
(defconst TSA 2)
(defconst MILITARY 3); 0 = no superiority, 1 = superiority, 2 = water superiority (no land attacking)
(defconst gl-strategy 4); Controls the opening strategy; will always eventually return to default; basic-class flushes use default
(defconst gl-fixed-eco-balancing 5); NO = allow calculating gatherer percentages, YES = use set gatherer percentages
(defconst control-goal 6); Shared with Horde to enable slinging
(defconst TC 7); 1 = adds extra TCs requested by special-class strategies
(defconst D-TSA 8); YES = increase TS to drop a certain building
(defconst gl-strategy-control 9); Used with some strategies to specify the strategy
(defconst gl-normal-milling 10); 0 = lumber camp first, 1 = mill first
(defconst gl-town-under-attack 11); Used by Horde, UnfairSteel
(defconst gl-drush-stance 12); Used when no proper drush target is found, although there isn't much use any more at that point
(defconst gl-DRUSH 13); Whether drush is used or not
(defconst gl-DRUSH-CONTROL 14); Controls the drush progress
(defconst gl-target-player 15)
(defconst gl-SCRUSH-CONTROL 16); Controls the scrush progress
(defconst gl-my-soldier-count 17)
(defconst gl-target-soldier-count 18)
(defconst SLING 19); 1-3 = shot, 4-6 = sling
(defconst gl-MICRO-CONTROL 20); Allows some attack groups and retreat rules with a few strategies
(defconst gl-offensive-villager-count 21)
(defconst target-system 22); Determines which target priority set is used
(defconst target-system-rewriting 23); Controls whether the target system should be overwritten with a new priority set (to not loop and allow up-jump-ruling when unused)
(defconst gl-increased-aggressiveness 24); To know if attack requirements and lowered by taunt 31
(defconst gl-team-attack-request 25); Controls the use of taunt 31
(defconst winning-player 26)
(defconst victory-type 27)
(defconst victory-time 28)
(defconst saved-threat-level 29); Saves the threat level if it gets overwritten while trying to join an ally's attack
(defconst gl-assisting-ally 30); Tells are we assisting an ally in attack
(defconst gl-max-farm-count 31)
(defconst gl-my-villager-count 32)
(defconst gl-enemy-assist-military 33); If in a fight with multiple enemies, this will check who has more army, the real target or another enemy (who is being fought)
(defconst gl-fixed-target-player 34); Usually the target is the closest player and will be constantly checked, this controls if the target is locked
(defconst gl-x-vs-one-challenge 35)
(defconst gl-anti-cysion 36); One AI should flush on 1v3+ on team arena, also enables pocket flushing
(defconst gl-start-with-castle 37)
(defconst gl-strategy-aggressiveness-level 38); Determines the aggressiveness level of the chosen strategy
(defconst gl-petard-wall-break-status 39); Controls the progress of breaking enemy wall with petards
(defconst gl-boar-eaten 40)
(defconst gl-stored-boar-id 41)
(defconst gl-saved-focus-player 42)
(defconst gl-saved-focus-player2 43)
(defconst temporary-goal3 44)
(defconst gl-forward-buildings 45)
(defconst POSITION 46); Shared with Horde, 1 = flank, 2 = pocket
(defconst gl-heavy-resources 47)
(defconst gl-eternal-drush 48); Tells whether a massive drush is used or not
(defconst gl-alternative-rush 48); Re-use
(defconst threat-time 49)
(defconst threat-player 50)
(defconst threat-source 51)
(defconst threat-target 52)
(defconst gl-my-food-gp 53)
(defconst gl-castle-placed 54)
(defconst gl-town-center-placed 55)
(defconst gl-barracks-placed 56)
(defconst gl-range-placed 57)
(defconst gl-stable-placed 58)
(defconst gl-siege-workshop-placed 59)
(defconst gl-market-placed 60)
(defconst gl-university-placed 61)
(defconst gl-monastery-placed 62)
(defconst gl-max-farm-distance 63)
(defconst gl-villagers-to-start-boar-hunt 64); The number of villagers to allow boar hunting
(defconst gl-my-farm-count 65)
(defconst gl-trade-sling 66)
(defconst gl-sheep-counter-low 67); Marathon's sheep counter
(defconst gl-aofe-detected 68)
(defconst gl-sheep-delta 69)
(defconst gl-rush-suitability-on-map 70); Determines the rush suitibility on map. If it's low, more passive strategies are preferred
(defconst gl-enemy-strategy 71); Used to the determine only a few enemy strategy types
(defconst gl-GRUSH-CONTROL 72); Controls the grush progress
(defconst gl-controlled-forward-castle 73); Controls forward castle drop used by castle push or fast imp monk rush
(defconst CASTLE 74); Controls the creating of unique units and a few unique unit+normal unit-combinations
(defconst gl-strategy-type 75); Basic-class (allows certain counter units etc.) or special-class
(defconst gl-food-gp-points 76); These goals control the number of resource gatherer percentage points to calculate the gathere percentages we want to use
(defconst gl-wood-gp-points 77)
(defconst gl-gold-gp-points 78)
(defconst gl-gp-points-total 79); The sum of the gatherer percentage points
(defconst gl-peace-in-town 80); Checks if we are in peace or not, used to allow some gp-point rules
(defconst gl-distance-to-enemy 81)
(defconst gl-enemy-attacker 82)
(defconst gl-my-town-size 83)
(defconst timer-enabler2 84)
(defconst FFA 85); Is it a free-for-all or not
(defconst gl-disable-market-placing 86); Disables placing more than 1 market independently, turned on if a human ally wants to control Barbarian's market placement
(defconst gl-refused-from-sling 87)
(defconst gl-my-maximum-town-size 88)
(defconst gl-town-size-increasing-time 89)
(defconst gl-units-required-to-spreading 90)
(defconst gl-boats-required-to-spreading 91)
(defconst gl-game-time-required 92)
(defconst gl-ENEMY-DISTANCE 93)
(defconst gl-feudal-trash 94)
(defconst DOCK 95)
(defconst gl-advanced-trash 96)
(defconst gl-unit-spreading 97)
(defconst gl-unit-spreading-count 98)
(defconst gl-toughest-fought-enemy-military 99)
(defconst gl-saved-point-x 100)
(defconst gl-saved-point-y 101)
(defconst gl-interfered-scout 102)
(defconst gl-feudal-infantry 103)
(defconst gl-feudal-archery 104)
(defconst gl-advanced-infantry 105)
(defconst gl-advanced-archery 106)
(defconst gl-required-eagle-upgrades 106)
(defconst gl-advanced-cavalry 107)
(defconst gl-eagles 108)
(defconst gl-starting-scout-count 109)
(defconst gl-eew-strategy-type 110)
(defconst substitute-timer1 111)
(defconst substitute-timer2 112)
(defconst substitute-timer3 113)
(defconst gl-disable-eternal-drush 114)
(defconst gl-my-player-number 115)
(defconst reset-unit-targeting 116)
(defconst gl-FC-type 117)
(defconst gl-increased-town-size-level 118)
(defconst gl-slung-knights 119)
(defconst gl-chat-sent 120)
(defconst RAM 121)
(defconst castle-dropped-timer 122)
(defconst TC-dropped-timer 123)
(defconst barracks-dropped-timer 124)
(defconst range-dropped-timer 125)
(defconst stable-dropped-timer 126)
(defconst siege-workshop-dropped-timer 127)
(defconst market-dropped-timer 128)
(defconst university-dropped-timer 129)
(defconst monastery-dropped-timer 130)
(defconst gl-strategy-class 131)
(defconst ROLLING 132)
(defconst SCOUTS 133)
(defconst strategy-selection-control 134)
(defconst civ-comparison 135)
(defconst temporary-goal 136)
(defconst gl-my-wood-gp 137)
(defconst gl-my-gold-gp 138)
(defconst gl-saved-food-gp 139)
(defconst gl-saved-wood-gp 140)
(defconst gl-saved-gold-gp 141)
(defconst gl-modified-eco-balancing 142)
(defconst group-enabler 143)
(defconst gl-my-warboat-count 144)
(defconst RETREAT 145)
(defconst gl-arena-forward 146)
(defconst gl-ally-player 147)
(defconst timer-enabler 148)
(defconst gl-gathered-relics 149)
(defconst gl-attacking-villagers 150)
(defconst mill-dropped-timer 151)
(defconst gl-mill-placed 152)
(defconst gl-required-current-age-time 153)
(defconst gl-enemy-human-rating 154)
(defconst gl-wonder-build-attempt 155)
(defconst gl-TC-lost 156)
(defconst gl-boar-hunting-stage 157)
(defconst gl-enemy-flush-vills 158)
(defconst gl-safe-to-assist-ally 159)
(defconst gl-fixed-wood-gathering 160)
(defconst gl-trash-war-vill-limiting 161)
(defconst gl-trash-war-vill-limit-pop 162)
(defconst gl-castle-control 163)
(defconst gl-enemy-sling 164)
(defconst gl-castle-sling-order 165)
(defconst gl-enemy-wall-count-total 166)
(defconst gl-enemy-gate-count 167)
(defconst gl-wonder-repair-time 168)
(defconst gl-islands-style 169)
(defconst gl-gathering-inside 170)
(defconst gl-original-target-weak 171)
(defconst gl-enemy-mill-count 172)
(defconst gl-enemy-camp-count 173)
(defconst gl-enemy-dropsite-count-total 174)
(defconst gl-ally-player2 175)
(defconst saved-threat-level2 176)
(defconst gl-point-x 177)
(defconst gl-point-y 178)
(defconst gl-heavy-water-map 179)
(defconst gl-water-retreating 180)
(defconst split-rule-goal 181)
(defconst gl-dm-barracks-number 182)
(defconst gl-dm-range-number 183)
(defconst gl-dm-stable-number 184)
(defconst gl-dm-workshop-number 185)
(defconst gl-my-builder-count 186)
(defconst gl-dm-food-to-sell 187)
(defconst gl-dm-wood-to-sell 188)
(defconst gl-dm-stone-to-sell 189)
(defconst gl-my-house-count 190)
(defconst gl-dm-allow-counter-halbs 191)
(defconst gl-dm-allow-counter-skirms 192)
(defconst gl-dm-main-unit 193)
(defconst gl-my-food-stockpile 194)
(defconst gl-my-wood-stockpile 195)
(defconst gl-my-gold-stockpile 196)
(defconst gl-my-total-stockpile 197)
(defconst gl-dm-allow-UU-training 198)
(defconst gl-defensive-castle-placed 199)
(defconst gl-wonder-build-attempt-stage 200)
(defconst gl-wonder-outpost 201); Yay
(defconst gl-anti-drush-micro 202)
(defconst gl-anti-trush 203)
(defconst gl-anti-castle-drop 204)
(defconst gl-feudal-upgrade-order 205)
(defconst gl-projectile-target 206)
(defconst gl-allow-retreating-to-treb 207)
(defconst gl-attack-stance-switcher 208)
(defconst gl-original-enemy-distance 209)
(defconst gl-retreat-notice 210)
(defconst gl-traitor 211)
(defconst gl-uncommon-settings 212)
(defconst gl-wonder-assault 213)
(defconst gl-dtw-blind-attack-time 214)
(defconst gl-dm-water-strategy 215)
(defconst gl-nothing-style-map 216)
(defconst gl-nothing-flush-control 217)
(defconst gl-nothing-crush-control 218)
(defconst gl-nothing-boom-style 219)
(defconst gl-nothing-caravan-status 220)
(defconst gl-nothing-villager-goal-number 221)
(defconst gl-nothing-cart-goal-number 222)
(defconst gl-nothing-selling-started 223)
(defconst gl-sling-horde 224)
(defconst gl-fast-eagle-note 225)
(defconst gl-retargeting 226)
(defconst gl-ally-threat-player 227)
(defconst gl-michi-boom-villagers 228)
(defconst gl-disable-mining-upgrades 229)
(defconst gl-handicap 230)
(defconst gl-loomless-boar-hunting 231)
(defconst gl-hit-and-run-search-distance 232)
(defconst gl-camp-raid 233)
(defconst gl-garrison-rule-fired 234)
(defconst gl-sling-towers 235)
(defconst gl-sling-lumber-camps 236)
(defconst gl-sling-mining-camps 237)
(defconst gl-sling-camp-total 238)
(defconst gl-sling-towers-on-lumber-camps 239)
(defconst gl-sling-towers-on-mining-camps 240)
(defconst gl-close-deer 241)
(defconst gl-close-build 242)
(defconst gl-close-build-stage 243)
(defconst gl-saved-town-size 244)
(defconst gl-panic-xbow-counter 245)
(defconst gl-required-food 246)
(defconst gl-wonder-placement-at-back 247)
(defconst gl-allow-wonders 248)
(defconst gl-available-food-amount 249)
(defconst gl-available-wood-amount 250)
(defconst gl-available-stone-amount 251)
(defconst gl-available-gold-amount 252)
(defconst gl-scattered-islets-style 253)
(defconst gl-local-total 254)
(defconst gl-local-last 255)
(defconst gl-remote-total 256)
(defconst gl-remote-last 257)
(defconst gl-migration-progress 258)
(defconst gl-outward-bound-style 259)
(defconst gl-transport-time 260)
(defconst gl-point-distance 261)
(defconst gl-turtling-control 262)
(defconst temporary-goal2 263)
(defconst gl-camp-raid-time 264)
(defconst gl-home-point-x 265)
(defconst gl-home-point-y 266)
(defconst gl-hit-and-run-distance 267)
(defconst gl-hit-and-run-unit 268)
(defconst gl-object-point-x 269)
(defconst gl-object-point-y 270)
(defconst gl-group-hit-and-run 271)
(defconst gl-hit-and-run-unit-class 272)
(defconst gl-boar-stealing 273)
(defconst gl-point-distance2 274)
(defconst gl-starting-island-x 275)
(defconst gl-starting-island-y 276)
(defconst gl-main-island-x 277)
(defconst gl-main-island-y 278)
(defconst gl-dodging-TC 279)
(defconst gl-TC-garrisoning 280)
(defconst gl-real-focus-player 281)
(defconst gl-max-scout-hp 282)
(defconst gl-boar-unit 283)
(defconst gl-temporary-point-x 284)
(defconst gl-temporary-point-y 285)
(defconst gl-drush-reaction 286)
(defconst gl-candidate1-point-x 287)
(defconst gl-candidate1-point-y 288)
(defconst gl-candidate2-point-x 289)
(defconst gl-candidate2-point-y 290)
(defconst gl-drush-target-object 291)
(defconst gl-drush-waypoint 292)
(defconst gl-rescouting-time 293)
(defconst gl-drush-waypoint-required 294)
(defconst gl-drush-retreat-point-required 295)
(defconst gl-start-with-scout 296)
(defconst gl-wood-to-be-seen 297)
(defconst gl-villager-laming 298)
(defconst house-dropped-timer 299)
(defconst gl-house-placed 300)
(defconst gl-my-villager-count-total 301)
(defconst gl-lag-reducer 302)

(defconst gl-attack-in-progress 392); 0 = no, 1 = yes. This allows a Barbarian sharing same target to become more eager to attack - this goal can be added to any AI to improve coordination with Barbarian
(defconst gl-safe-in-town 436)
(defconst gl-number-sheep 437)
(defconst gl-position-self-x 478)
(defconst gl-position-self-y 479)
(defconst gl-identity 487)

; gl-current-age
(defconst gv-dark 1)
(defconst gv-dark-up 2)
(defconst gv-feudal 3)
(defconst gv-feudal-up 4)
(defconst gv-castle 5)
(defconst gv-castle-up 6)
(defconst gv-imperial 7)

; gl-strategy-control
(defconst HUSKS 1)
(defconst FULL-HUSKS 2)
(defconst HUSKS-PIKS 3)
(defconst HUSKS-CHAMPS 4)
(defconst CHAMPS 5)
(defconst PICK-A-STRATEGY 6)

(defconst SCRUSH 7)
(defconst MEN-AT-ARMS 8)
(defconst ARCHER-SKIRM 9)
(defconst AGE-UP-CASTLE 10)

(defconst UNUSUAL-SWITCH 11)

(defconst FLUSH-SKIRMS 12)
(defconst FLUSH-ARCHERS 13)
(defconst CRUSH 14)
(defconst CASTLE-ARCHERY 15)
(defconst CASTLE-TRASH 16)

; turtling-control
(defconst defences-needed 1)
(defconst open-the-wall 2)

; gl-nothing-flush-control
(defconst flush-skirm-spear 1)
(defconst flush-scout-skirm 2)
(defconst flush-defensive-maa 4)

; gl-nothing-crush-control
(defconst crush-skirm-spear 1)
(defconst crush-scout-skirm 2)
(defconst crush-pure-scout 3)
(defconst crush-sword-skirm 4)

; gl-nothing-boom-style
(defconst 1TC-4MARKET 1); Most nothing map features are currently unused, they will be possibly added in the future
(defconst 2TC-1MARKET 2)
(defconst 2TC-2MARKET 3)
(defconst 2TC-3MARKET 4)
(defconst 2TC-4MARKET 5)
(defconst 3TC-1MARKET 6)
(defconst 2TC 7)

; gl-nothing-caravan-status
(defconst take-fast 1)
(defconst take-late 2)
(defconst taken 3)

; gl-nothing-villager/cart-goal-number
(defconst gv-minimum 0)
(defconst gv-average 1)
(defconst gv-high 2)
(defconst gv-maximum 3)

; gl-enemy-strategy
(defconst EAGLERUSH-NOTE 1)
(defconst EAGLERUSH 2)
(defconst NOT-EAGLERUSH 3)
(defconst MAA-FLUSH 4)
(defconst FLUSH 5)

; gl-ENEMY-DISTANCE
(defconst UNKNOWN -1)
(defconst CHECKING 0)
(defconst NEAR 1)
(defconst FAR 2)

; gl-petard-wall-break-status
(defconst MAYBE 0)
(defconst IN-PROGRESS 1)
(defconst DONE 2)

; gl-DRUSH-CONTROL
(defconst GOLD-NEEDED-FOR-MILITIAS 0)
(defconst GOLD-MINED 1)
(defconst MILITIAS-DONE 2)
(defconst DRUSH-OVER 3)

; POSITION
(defconst UNKNOWN -1)
(defconst CHECK-POSITION 0)
(defconst FLANK 1)
(defconst POCKET 2)

; gl-SCRUSH-CONTROL
(defconst SCOUTS-DONE 1)
(defconst WAIT-FOR-ARCHERS 2)
(defconst ARCHERS-ADDED 3)

; gl-increased-aggressiveness
(defconst HELPING-ATTEMPT 1)
(defconst DECREASED 2)

; gl-assisting-ally
(defconst RESET 1)

; target-system
(defconst normal 1)
(defconst rush 2)
(defconst raid 3)
(defconst aggressive-raid 4)
(defconst siege 5)

; gl-GRUSH-CONTROL
(defconst GRUSHING 1)
(defconst GET-AGE-UP 2)

; gl-*-placed
(defconst placed-forward 1)
(defconst placed-to-ally 30)
(defconst safe-TC 31)

; gl-controlled-forward-castle
(defconst scout-sent 2)

; gl-wonder-build-attempt-stage
(defconst saving-resources 1)
(defconst placed 2)
(defconst lost 3)

; gl-FC-type
(defconst gv-wheelbarrow 1)
(defconst gv-2-villagers 2)

; gl-strategy-type
(defconst default 0)
(defconst basic-flush 0)
(defconst controlled-flush 1)
(defconst FC 2)
(defconst FC2 3)

; gl-feudal-infantry
(defconst men-at-arms 1)
(defconst heavy-men-at-arms 2)

; gl-feudal-archery
(defconst archers 1)
(defconst archer-skirm 2)

; gl-advanced-infantry
(defconst heavy-swordsmen 3)

; gl-advanced-archery
(defconst slingers 2)
(defconst heavy-archers 3)
(defconst full-upgrades 4)
(defconst heavy-cannoneers 5)
(defconst light-cannoneers 6)
(defconst CAs 7)
(defconst backup-xbows 8)
(defconst scorpions 9)
(defconst archer-to-gun-transfer 10); Use archers until cannoneers are available

; gl-advanced-cavalry
(defconst indian-camels 2)
(defconst heavy-knights 2)
(defconst knight-CA 3)
(defconst knight-LC 5)
(defconst LC 11)

; gl-eagles
(defconst flush-counter-eagles 1)
(defconst heavy-eagles 2)
(defconst extra-eagles 3)

; gl-eew-strategy-type
(defconst fast-imp 3)

; gl-rush-suitability-on-map
(defconst VERY-LOW 1)
(defconst LOW 2)
(defconst AVERAGE 3)
(defconst GOOD 4)

; gl-strategy-aggressiveness-level
(defconst HIGH 4)

; gl-enemy-human-rating
(defconst DETERMINING 1)

; gl-strategy
(defconst default 0)
(defconst flush 0)
(defconst knight-archer 1)
(defconst knight-skirm 1); Spanish
(defconst camel-archer 1); Indians
(defconst eew-strategy 2)
(defconst heavy-krush 3)
(defconst wonder-race-blocked-vills 3)
(defconst CA-boom 4)
(defconst UU-boom 5)
(defconst korean-boom 6)
(defconst xbow-rush 7)
(defconst turkish-fast-imp 9)
(defconst boom 10)
(defconst watermap-fc 10)
(defconst wonder-race-fi 10)
(defconst castle-drop 11)
(defconst xbow-boom 12)
(defconst scorpion-rush 13)
(defconst flush-overwrite 14)
(defconst CA-rush 15)
(defconst eagle-rush 16); Mayan/Incan
(defconst eagle-monk-rush 16); Aztec
(defconst monk-scorpion-boom 17)
(defconst fi-archer-flush 18)
(defconst monk-scorpion-rush 19)
(defconst scout-skirm-flush 20)
(defconst missionary-boom 20)
(defconst super-scouts 21)
(defconst mayan-fi-counter 22)
(defconst gothic-boom 23)
(defconst scrush 24)
(defconst spanish-vill-rush 25)
(defconst wall-boom 26)
(defconst fi-monk-rush 27)
(defconst grush 28)
(defconst landing 29)
(defconst krush 30)
(defconst crush 30)
(defconst sling 31)
(defconst eternal-drush 32)
(defconst michi-boom 33)
(defconst monk-boom 34)
(defconst castle-push 35)
(defconst heavy-ranged-flush 36)
(defconst skirm-boom 37)
(defconst castle-sling 38)
(defconst fast-eagles 39)
(defconst knight-boom 40)
(defconst camel-boom 40)
(defconst mongol-boom 41)
(defconst monk-mango-push 42)
(defconst knight-rush 43)
(defconst camel-rush 43)
(defconst turtle-rush 44)
(defconst jaguar-boom 45)
(defconst nothing-FC-boom 46); Nothing-strategies aren't yet properly separated from each others
(defconst nothing-feudal-boom 47)
(defconst nothing-flush 47)
(defconst nothing-FC-rush 48)
(defconst nothing-market-flush 49)
(defconst war-galley-rush 50)
(defconst fire-ship-rush 51)
(defconst turkish-bombardment 52)
(defconst archery-boom 53)

; post-imp DM
(defconst dm-eagles 101)
(defconst dm-champs 102)
(defconst dm-arbalests 103)
(defconst dm-palas 104)
(defconst dm-cannoneers 105)
(defconst dm-camels 106)
(defconst dm-turtling 107)
(defconst dm-CA 108)
(defconst dm-husks 109)
(defconst dm-halb-arbalest 110)
(defconst dm-halb-husk 111)
(defconst dm-halb-champ 112)
(defconst dm-husk-champ 113)
(defconst dm-eagle-halb 114)
(defconst dm-eagle-champ 115)
(defconst dm-eagle-arbalest 116)
(defconst dm-halb-cannoneer 117)
(defconst dm-pala-CA 118)
(defconst dm-pala-arbalest 119)
(defconst dm-pala-cannoneer 120)
(defconst dm-UU 121)
(defconst dm-camel-cannoneer 122)
(defconst dm-champ-cannoneer 123)
(defconst dm-pala-turtle 124)
(defconst dm-UU-halb 125)
(defconst dm-UU-halb-cannoneer 126)
(defconst dm-champ-turtle 127)
(defconst dm-UU-champ 128)
(defconst dm-halb-scorpion 129)

(defconst dm-galleons 1)
(defconst dm-fireships 2)
(defconst dm-fire-galley 3)
(defconst dm-light-galleons 4)
(defconst dm-light-fireships 5)
(defconst dm-light-fire-galley 6)

; dm-UU-type
(defconst useless-type 0)
(defconst anti-infantry-type 1)
(defconst anti-archer-type 2)
(defconst anti-cavalry-type 3)
(defconst infantry-type 4)
(defconst archer-type 5)
(defconst cavalry-type 6)
(defconst durable-type 7)
(defconst gunpowder-type 8)
(defconst anti-UU-type 9)
(defconst trash-unit-type 10)

; gl-strategy-class
(defconst basic-class 1)
(defconst special-class 2)

; ============ MORE

(defconst livestock-class 958)
(defconst sheep 958)
(defconst ri-herbal-medicine 441)
(defconst ri-anarchy 16)
(defconst ri-perfusion 457)
(defconst huskarl2 759)
(defconst elite-huskarl2 761)
(defconst hunting-wolf 700)
(defconst unpacked-trebuchet 42)
(defconst dead-miner1 221)
(defconst dead-miner2 229)
(defconst dead-builder1 213)
(defconst dead-builder2 225)
(defconst dead-cart1 178)
(defconst dead-cart2 205)
(defconst cobra-car 748)
(defconst saboteur 706)
(defconst monkey-boy 860)
(defconst koth-monument 826)
(defconst flare 274)

(defconst forage-bush 59)
(defconst deep-fish 905)
(defconst shore-fish 933)

(defconst gold-mine 66)
(defconst stone-mine 102)
(defconst relic 285)

(defconst deer 65)
(defconst wild-boar 48)
(defconst javelina 822)
(defconst wolf 126)
(defconst jaguar 812)
(defconst tree 915)

(defconst sn-allow-resource-spending 39); < 0 = block to get a certain technology, >= 0 technologies can be taken depending on their importance, > 5 free spending
(defconst sn-threat-level 45); The smaller the number, the less units are required for an attack. Varies between -5 and 2. -2 means atleast same number as opponent has is required, 2 requires ~5 times bigger numbers
(defconst sn-allow-new-build-order 49); 1 = land map, 2 = water map, rest for special dark age styles
(defconst sn-add-rams-in-attack 53)
(defconst sn-unit-spreading2 64)
(defconst sn-build-towers-at-home 65)
(defconst sn-age-up-castle 71); To know when to up while doing a basic-class flush
(defconst sn-enemy-flush-notice 71); Re-use same number
(defconst sn-skip-first-mining-camp 94)
(defconst sn-retreating 169)
(defconst sn-boars-on-map 170)
(defconst sn-hitting-pop-cap 170)
(defconst sn-sheep-count 171)

(defconst sn-town-center-start 174)
(defconst sn-lumber-camp-escrow 178)
(defconst sn-nomad-style-start 180)
(defconst sn-heresy-escrow 181)
(defconst sn-hit-and-run 182)
(defconst sn-castle-build-notice 183)
(defconst sn-sling-control 190)
(defconst sn-siege-workshop-escrow 190)
(defconst sn-low-eco-push 190)
(defconst sn-fast-imp-switch 190)
(defconst sn-upgrade-eagles 191)
(defconst sn-start-with-forage 193)
(defconst sn-lumber-camp-security 206)
(defconst sn-unit-spreading 209)
(defconst sn-monk-trained 223)
(defconst sn-militia-count 223)

(defconst sn-food-modifier-percentage 156)
(defconst sn-wood-modifier-percentage 157)
(defconst sn-stone-modifier-percentage 158)
(defconst sn-gold-modifier-percentage 159)

(defconst sn-special-attack-influence2 107)

(defconst enemy-ranged-attack 112)

(defconst unbuilt-town-center 621)

(defconst forage-food 907)
(defconst deer-food 909)
(defconst boar-food 910)
(defconst fish-food 933)
(defconst farm-food 949)
(defconst sheep-food 958) 
(defconst YES 12)
(defconst NO 13)
(defconst NONE 14)
(defconst SOME 15)
(defconst MOST 16)
(defconst ALL 17)
(defconst LAND-ARMY 18)
(defconst EVEN-CASTLE 19)

(defconst monk-set 970)
(defconst trebuchet-set 971)

(defconst game-time 0)
(defconst population-cap 1)
(defconst population-headroom 2)
(defconst housing-headroom 3)
(defconst idle-farm-count 4)
(defconst food-amount 5)
(defconst wood-amount 6)
(defconst stone-amount 7)
(defconst gold-amount 8)
(defconst escrow-amount 9)
(defconst commodity-buying-price 10)
(defconst commodity-selling-price 11)
(defconst dropsite-min-distance 12)
(defconst soldier-count 13)
(defconst attack-soldier-count 14)
(defconst defend-soldier-count 15)
(defconst warboat-count 16)
(defconst attack-warboat-count 17)
(defconst defend-warboat-count 18)
(defconst current-age 19)
(defconst current-score 20)
(defconst civilization 21)
(defconst player-number 22)
(defconst player-in-game 23)
(defconst unit-count 24)
(defconst unit-type-count 25)
(defconst unit-type-count-total 26)
(defconst building-count 27)
(defconst building-type-count 28)
(defconst building-type-count-total 29)
(defconst population 30)
(defconst military-population 31)
(defconst civilian-population 32)
(defconst random-number 33)
(defconst resource-amount 34)
(defconst player-distance 35)
(defconst allied-goal 36)
(defconst allied-sn 37)
(defconst resource-percent 38)
(defconst enemy-buildings-in-town 39)
(defconst enemy-units-in-town 40)
(defconst enemy-villagers-in-town 41)
(defconst players-in-game 42)
(defconst defender-count 43)
(defconst building-type-in-town 44)
(defconst unit-type-in-town 45)
(defconst villager-type-in-town 46)
(defconst gaia-type-count 47)
(defconst gaia-type-count-total 48)

(defconst scout-cavalry-class 947)
(defconst villager-class 904)
(defconst building-class 903)
(defconst tower-class 952)
(defconst wall-class 927)
(defconst gate-class 939)
(defconst infantry-class 906)
(defconst archery-class 900)
(defconst archery-cannon-class 944)
(defconst cavalry-class 912)
(defconst cavalry-archer-class 936)
(defconst cavalry-cannon-class 923)
(defconst monastery-class 918)
(defconst siege-weapon-class 913)
(defconst scorpion-class 955)
(defconst packed-trebuchet-class 951)
(defconst unpacked-trebuchet-class 954)
(defconst petard-class 935)
(defconst warship-class 922)
(defconst all-units-class -1)
(defconst wolf-class 910)
(defconst transport-ship-class 920)

(defconst research-unavailable 0)
(defconst research-available 1)
(defconst research-pending 2)
(defconst research-complete 3)

(defconst aggressive 0)
(defconst defensive 1)
(defconst stand-ground 2)
(defconst no-attack 3)

(defconst amount-food 0)
(defconst amount-wood 1)
(defconst amount-stone 2)
(defconst amount-gold 3)
(defconst amount-population-cap 4)
(defconst amount-religion 5)
(defconst amount-current-age 6)
(defconst amount-relics 7)
(defconst amount-trade-bonus 8)
(defconst amount-trade-goods 9)
(defconst amount-trade-production 10)
(defconst amount-population 11)
(defconst amount-decay 12)
(defconst amount-discovery 13)
(defconst amount-ruins 14)
(defconst amount-meat 15)
(defconst amount-berries 16)
(defconst amount-fish 17)
(defconst amount-kills 20)
(defconst amount-research-count 21)
(defconst amount-exploration 22)
(defconst amount-convert-priest 27)
(defconst amount-convert-building 28)
(defconst amount-building-limit 30)
(defconst amount-food-limit 31)
(defconst amount-unit-limit 32)
(defconst amount-maintenance 33)
(defconst amount-faith 34)
(defconst amount-faith-recharge-rate 35)
(defconst amount-farm-food 36)
(defconst amount-civilian-population 37)
(defconst amount-all-techs-achieved 39)
(defconst amount-military-population 40)
(defconst amount-conversions 41)
(defconst amount-wonder 42)
(defconst amount-razings 43)
(defconst amount-kill-ratio 44)
(defconst amount-player-killed 45)
(defconst amount-tribute-inefficiency 46)
(defconst amount-gold-bonus 47)
(defconst amount-town-center-unavailable 48)
(defconst amount-gold-counter 49)
(defconst amount-writing 50)
(defconst amount-monasteries 52)
(defconst amount-tribute 53)
(defconst amount-hold-ruins 54)
(defconst amount-hold-relics 55)
(defconst amount-ore 56)
(defconst amount-captured-unit 57)
(defconst amount-trade-good-quality 59)
(defconst amount-trade-market-level 60)
(defconst amount-formations 61)
(defconst amount-building-housing-rate 62)
(defconst amount-gather-tax-rate 63)
(defconst amount-gather-accumulator 64)
(defconst amount-salvage-decay-rate 65)
(defconst amount-allow-formations 66)
(defconst amount-can-convert 67)
(defconst amount-player1-kills 69)
(defconst amount-player2-kills 70)
(defconst amount-player3-kills 71)
(defconst amount-player4-kills 72)
(defconst amount-player5-kills 73)
(defconst amount-player6-kills 74)
(defconst amount-player7-kills 75)
(defconst amount-player8-kills 76)
(defconst amount-convert-resistance 77)
(defconst amount-trade-vig-rate 78)
(defconst amount-stone-bonus 79)
(defconst amount-queued-count 80)
(defconst amount-training-count 81)
(defconst amount-raider 82)
(defconst amount-boarding-recharge-rate 83)
(defconst amount-starting-villagers 84)
(defconst amount-research-cost-mod 85)
(defconst amount-research-time-mod 86)
(defconst amount-convert-boats 87)
(defconst amount-fish-trap-food 88)
(defconst amount-heal-rate-modifier 89)
(defconst amount-heal-range 90)
(defconst amount-starting-food 91)
(defconst amount-starting-wood 92)
(defconst amount-starting-stone 93)
(defconst amount-starting-gold 94)
(defconst amount-raider-ability 95)
(defconst amount-berserker-heal-timer 96)
(defconst amount-dominant-sheep-control 97)
(defconst amount-object-cost-summation 98)
(defconst amount-research-cost-summation 99)
(defconst amount-relic-income-summation 100)
(defconst amount-trade-income-summation 101)
(defconst amount-player1-tribute 102)
(defconst amount-player2-tribute 103)
(defconst amount-player3-tribute 104)
(defconst amount-player4-tribute 105)
(defconst amount-player5-tribute 106)
(defconst amount-player6-tribute 107)
(defconst amount-player7-tribute 108)
(defconst amount-player8-tribute 109)
(defconst amount-player1-kill-value 110)
(defconst amount-player2-kill-value 111)
(defconst amount-player3-kill-value 112)
(defconst amount-player4-kill-value 113)
(defconst amount-player5-kill-value 114)
(defconst amount-player6-kill-value 115)
(defconst amount-player7-kill-value 116)
(defconst amount-player8-kill-value 117)
(defconst amount-player1-razings 118)
(defconst amount-player2-razings 119)
(defconst amount-player3-razings 120)
(defconst amount-player4-razings 121)
(defconst amount-player5-razings 122)
(defconst amount-player6-razings 123)
(defconst amount-player7-razings 124)
(defconst amount-player8-razings 125)
(defconst amount-player1-razing-value 126)
(defconst amount-player2-razing-value 127)
(defconst amount-player3-razing-value 128)
(defconst amount-player4-razing-value 129)
(defconst amount-player5-razing-value 130)
(defconst amount-player6-razing-value 131)
(defconst amount-player7-razing-value 132)
(defconst amount-player8-razing-value 133)
(defconst amount-castle 134)
(defconst amount-kills-by-player1 136)
(defconst amount-kills-by-player2 137)
(defconst amount-kills-by-player3 138)
(defconst amount-kills-by-player4 139)
(defconst amount-kills-by-player5 140)
(defconst amount-kills-by-player6 141)
(defconst amount-kills-by-player7 142)
(defconst amount-kills-by-player8 143)
(defconst amount-razings-by-player1 144)
(defconst amount-razings-by-player2 145)
(defconst amount-razings-by-player3 146)
(defconst amount-razings-by-player4 147)
(defconst amount-razings-by-player5 148)
(defconst amount-razings-by-player6 149)
(defconst amount-razings-by-player7 150)
(defconst amount-razings-by-player8 151)
(defconst amount-value-killed-by-others 152)
(defconst amount-value-razed-by-others 153)
(defconst amount-killed-by-others 154)
(defconst amount-razed-by-others 155)
(defconst amount-tribute-from-player1 156)
(defconst amount-tribute-from-player2 157)
(defconst amount-tribute-from-player3 158)
(defconst amount-tribute-from-player4 159)
(defconst amount-tribute-from-player5 160)
(defconst amount-tribute-from-player6 161)
(defconst amount-tribute-from-player7 162)
(defconst amount-tribute-from-player8 163)
(defconst amount-value-current-units 164)
(defconst amount-value-current-buildings 165)
(defconst amount-food-total 166)
(defconst amount-wood-total 167)
(defconst amount-stone-total 168)
(defconst amount-gold-total 169)
(defconst amount-total-value-of-kills 170)
(defconst amount-total-tribute-received 171)
(defconst amount-total-value-of-razings 172)
(defconst amount-total-castles-built 173)
(defconst amount-total-wonders-built 174)
(defconst amount-tribute-score 175)
(defconst amount-convert-min-adj 176)
(defconst amount-convert-max-adj 177)
(defconst amount-convert-resist-min-adj 178)
(defconst amount-convert-resist-max-adj 179)
(defconst amount-convert-building-min 180)
(defconst amount-convert-building-max 181)
(defconst amount-convert-building-chance 182)
(defconst amount-spies 183)
(defconst amount-value-wonders-castles 184)
(defconst amount-food-score 185)
(defconst amount-wood-score 186)
(defconst amount-stone-score 187)
(defconst amount-gold-score 188)
(defconst amount-wood-bonus 189)
(defconst amount-food-bonus 190)
(defconst amount-relic-rate 191)
(defconst amount-heresy 192)
(defconst amount-theocracy 193)
(defconst amount-crenellations 194)
(defconst amount-construction-rate-mod 195)
(defconst amount-hun-wonder-bonus 196)
(defconst amount-spies-discount 197)

(defconst amount-houses 51)
(defconst amount-hit-points-killed 68)
(defconst amount-hit-points-razings 135)

(defconst projectile-town-center 0)
(defconst projectile-castle 1)
(defconst projectile-watch-tower 2)
(defconst projectile-bombard-tower 3)
(defconst projectile-ship 4)
(defconst projectile-siege 5)
(defconst projectile-fortification 6)
(defconst projectile-any 7)

(defconst with-escrow 0)
(defconst without-escrow 1)

(defconst place-normal 0)
(defconst place-forward 1)
(defconst place-control 2)
(defconst place-point 3)

(defconst priority-offense 0)
(defconst priority-defense 1)

(defconst find-attacker 0)
(defconst find-random 1)
(defconst find-closest 2)
(defconst find-ordered 3)

(defconst ally 0)
(defconst neutral 1)
(defconst enemy 3)
(defconst any 2)

(defconst hunting 4)
(defconst boar-hunting 5)
(defconst deer-hunting 6)

(defconst monk-set 970)
(defconst trebuchet-set 971)
(defconst huskarl-set 972)
(defconst villager-shepherd 973)
(defconst villager-forager 974)
(defconst villager-farmer 975)
(defconst villager-hunter 976)
(defconst villager-fisherman 977)
(defconst villager-food 978)
(defconst villager-wood 979)
(defconst villager-stone 980)
(defconst villager-gold 981)
(defconst villager-builder 982)
(defconst villager-repairer 983)
(defconst villager-base 984)

(defconst sn-special-attack-influence3 111)

(defconst sn-enable-new-building-system 242)
(defconst sn-percent-building-cancellation 243)
(defconst sn-enable-boar-hunting 244)
(defconst sn-minimum-number-hunters 245)
(defconst sn-object-repair-level 246)
(defconst sn-enable-patrol-attack 247)
(defconst sn-dropsite-separation-distance 248)
(defconst sn-target-player-number 249)
(defconst sn-safe-town-size 250)
(defconst sn-focus-player-number 251)
(defconst sn-minimum-boar-lure-group-size 252)
(defconst sn-preferred-mill-placement 253)
(defconst sn-enable-offensive-priority 254)
(defconst sn-building-targeting-mode 255)
(defconst sn-home-exploration-time 256)
(defconst sn-number-civilian-militia 257)
(defconst sn-allow-civilian-offense 258)
(defconst sn-preferred-trade-distance 259)
(defconst sn-lumber-camp-max-distance 260)
(defconst sn-mining-camp-max-distance 261)
(defconst sn-wall-targeting-mode 262)
(defconst sn-livestock-to-town-center 263)
(defconst sn-enable-training-queue 264)
(defconst sn-ignore-tower-elevation 265)
(defconst sn-town-center-placement 266)
(defconst sn-disable-tower-priority 267)
(defconst sn-placement-zone-size 268)
(defconst sn-placement-fail-delta 269)
(defconst sn-placement-to-center 270)
(defconst sn-disable-attack-groups 271)
(defconst sn-allow-adjacent-dropsites 272)
(defconst sn-defer-dropsite-update 273)
(defconst sn-maximum-garrison-fill 274)
(defconst sn-number-garrison-units 275)
(defconst sn-filter-under-attack 276)
(defconst sn-disable-defend-groups 277)
(defconst sn-dock-placement-mode 278)
(defconst sn-dock-proximity-factor 279)
(defconst sn-dock-avoidance-factor 280)
(defconst sn-dock-training-filter 281)
(defconst sn-free-siege-targeting 282)
(defconst sn-warship-targeting-mode 283)
(defconst sn-disable-sighted-response-cap 284)
(defconst sn-disable-builder-assistance 285)
(defconst sn-local-targeting-mode 286)

(defconst timer-disabled 0)
(defconst timer-triggered 1)
(defconst timer-running 2)

(defconst group-type-land-attack 100)
(defconst group-type-land-explore 101)
(defconst group-type-land-trade 109)
(defconst group-type-water-attack 102)
(defconst group-type-water-explore 103)
(defconst group-type-water-trade 106)
(defconst group-type-transport-ship 104)
(defconst group-type-fishing-ship 105)
(defconst group-type-forward-builder 107)
(defconst group-type-monk 108)

(defconst idle-type-villager 0)
(defconst idle-type-trade-cart 1)
(defconst idle-type-fishing-ship 2)
(defconst idle-type-trade-cog 3)

(defconst scout-center 0)
(defconst scout-opposite 1)
(defconst scout-corner 2)
(defconst scout-enemy 3)
(defconst scout-border 4)
(defconst scout-mirror 5)
(defconst scout-flank 6)

(defconst position-center 0)
(defconst position-opposite 1)
(defconst position-corner 2)
(defconst position-enemy 3)
(defconst position-border 4)
(defconst position-mirror 5)
(defconst position-flank 6)
(defconst position-zero 7)
(defconst position-map-size 8)
(defconst position-self 9)
(defconst position-target 10)
(defconst position-focus 11)
(defconst position-object 12)
(defconst position-point 13)

(defconst search-local 1)
(defconst search-remote 2)

(defconst action-default 0)
(defconst action-move 1)
(defconst action-patrol 2)
(defconst action-guard 3)
(defconst action-follow 4)
(defconst action-stop 5)

(defconst formation-line 2)
(defconst formation-box 4)
(defconst formation-stagger 7)
(defconst formation-flank 8)

(defconst cmdid-flag 0)
(defconst cmdid-livestock-gaia 1)
(defconst cmdid-civilian-building 2)
(defconst cmdid-villager 3)
(defconst cmdid-military 4)
(defconst cmdid-trade 5)
(defconst cmdid-monk 6)
(defconst cmdid-transport 7)
(defconst cmdid-relic 8)	;includes monk-with-relic
(defconst cmdid-unknown 9)
(defconst cmdid-military-building 10)

(defconst actionid-attack 600)
(defconst actionid-defend 601)
(defconst actionid-build 602)
(defconst actionid-heal 603)
(defconst actionid-convert 604)
(defconst actionid-explore 605)
(defconst actionid-stop 606)
(defconst actionid-runaway 607)
(defconst actionid-retreat 608)
(defconst actionid-gather 609)
(defconst actionid-move 610)
(defconst actionid-patrol 611)
(defconst actionid-follow 612)
(defconst actionid-hunt 613)
(defconst actionid-transport 614)
(defconst actionid-trade 615)
(defconst actionid-evade 616)
(defconst actionid-enter 617)
(defconst actionid-repair 618)
(defconst actionid-train 619)
(defconst actionid-research 620)
(defconst actionid-unload 621)

(defconst orderid-attack 700)
(defconst orderid-defend 701)
(defconst orderid-build 702)
(defconst orderid-heal 703)
(defconst orderid-convert 704)
(defconst orderid-explore 705)
(defconst orderid-stop 706)
(defconst orderid-runaway 707)
(defconst orderid-retreat 708)
(defconst orderid-gather 709)
(defconst orderid-move 710)
(defconst orderid-patrol 711)
(defconst orderid-follow 712)
(defconst orderid-hunt 713)
(defconst orderid-transport 714)
(defconst orderid-trade 715)
(defconst orderid-evade 716)
(defconst orderid-enter 717)
(defconst orderid-repair 718)
(defconst orderid-train 719)
(defconst orderid-research 720)
(defconst orderid-unload 721)

(defconst off-mainland 0)
(defconst on-mainland 1)

(defconst object-data-id 0)
(defconst object-data-type 1)
(defconst object-data-class 2)
(defconst object-data-category 3)
(defconst object-data-cmdid 4)
(defconst object-data-action 5)
(defconst object-data-order 6)
(defconst object-data-target 7)
(defconst object-data-point-x 8)
(defconst object-data-point-y 9)
(defconst object-data-hitpoints 10)
(defconst object-data-maxhp 11)
(defconst object-data-range 12)
(defconst object-data-speed 13)
(defconst object-data-dropsite 14)
(defconst object-data-resource 15)
(defconst object-data-carry 16)
(defconst object-data-garrisoned 17)
(defconst object-data-garrison-count 18)
(defconst object-data-status 19)

(defconst sort-targets 0)
(defconst sort-random 1)
(defconst sort-distance 2)
(defconst sort-hitpoints 3)
(defconst sort-range 4)

(defconst ri-chivalry 493)
(defconst ri-inquisition 492)
(defconst ri-sipahi 491)
(defconst ri-madrasah 490)
(defconst ri-ironclad 489)
(defconst ri-boiling-oil 488)
(defconst ri-nomads 487)
(defconst ri-panokseon 486)
(defconst ri-yasama 485)
(defconst ri-renegades 483)
(defconst ri-atlatl 460)
(defconst ri-war-wolf 461)
(defconst ri-greek-fire 464)
(defconst ri-chieftains 463)
(defconst ri-great-wall 462)
(defconst ri-stronghold 482)


(defconst stable-tarkan 886)
(defconst stable-elite-tarkan 887)

(defconst ri-orthodoxy 512)
(defconst ri-druzhina 513)
(defconst ri-elite-boyar 504)

(defconst boyar 876)
(defconst elite-boyar 878)

(defconst ri-andean-sling 516)
(defconst ri-couriers 517)
(defconst ri-elite-kamayuk 509)

(defconst kamayuk 879)
(defconst elite-kamayuk 881)
(defconst slinger 185)

(defconst ri-sultans 506)
(defconst ri-shatagni 507)
(defconst ri-imperial-camel 521)
(defconst ri-elite-elephant-archer 481)

(defconst elephant-archer 873)
(defconst elite-elephant-archer 875)
(defconst imperial-camel 897)

(defconst ri-mercenaries 514)
(defconst ri-recurve-bow 515)
(defconst ri-elite-magyar-huszar 472)

(defconst magyar-huszar 869)
(defconst elite-magyar-huszar 871)

(defconst ri-silk-road 499)
(defconst ri-pavise 494)
(defconst ri-elite-genoese-crossbow 468)

(defconst genoese-crossbowman 866)
(defconst elite-genoese-crossbowman 868)
(defconst condottiero 882)
(defconst condottiero-unit 184)

(defconst heavy-eagle-warrior 753)

(defconst ri-revetments 525)
(defconst ri-eagle-warrior 384)
(defconst ri-gillnets 65)

(defconst siege-tower 885)
(defconst sea-tower 785)
(defconst sea-wall 788)

; Defining civ IDs to keep AoC-compatibility
(defconst italian 19)
(defconst indian 20)
(defconst incan 21)
(defconst magyar 22)
(defconst slavic 23)

; ============== CIV SPECIFIC STUFF

#load-if-defined AZTEC-CIV
(defconst wonder-dark-villagers 32)

(defconst castle-drop-uu-amount 25)
(defconst castle-age-uu-amount 0)
(defconst late-game-scout-amount 0); Number of scouts fielded in any case
(defconst upgraded-scout-amount 0); Number of scouts in late game when they happen to be fully upgraded

(defconst dark-hunt-distance 17)

(defconst castle-drop-food-gp 43)
(defconst castle-drop-wood-gp 43)
(defconst castle-drop-gold-gp 10)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 12)
(defconst castle-drop-wood-gp-points 6)
(defconst castle-drop-gold-gp-points 5)

(defconst escrow-UU-soldier 10000)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 10000)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 0)
(defconst escrow-UU-resource2-count 0)
(defconst escrow-UU-food-points 0)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 0)
#load-if-defined IMPERIAL-AGE-END
(defconst ffa-strategy 12)
(defconst boom-strategy 12)
(defconst regicide-strategy 12)
(defconst rf-strategy 12)
#else
(defconst ffa-strategy 2)
(defconst boom-strategy 2)
(defconst regicide-strategy 2)
(defconst rf-strategy 2)
#end-if
(defconst aggressive-strategy 7)
(defconst backup-strategy 12)
(defconst FLUSH-DEFENCE-MAA 1)
(defconst FLUSH-DEFENCE-ARCHER 1)
(defconst BACKUP-PLAN-MAA 0); Both unused for aztecs
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 3)
(defconst DTW-ADVANCED-ARCHERY 0)
(defconst DTW-ADVANCED-CAVALRY 0)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 1); 1 allows a backup strategy if castles are destroyed
(defconst first-castle-value 0); Whether to build the first castle always at home or not. With 0 it can be built forward too
(defconst chance-of-flush-defence 9); 90% chance of switching flush-vulnerable strategy to flush against early detected flush
(defconst extra-galley-value 0)
(defconst castle-sling-priority 14); Never used
(defconst dm-UU-type 1)
(defconst dm-water-plan 2)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 0)

(defconst nothing-number-flush-villagers 27)
(defconst nothing-number-flush-market-villagers 25)
(defconst nothing-number-fc-villagers 25)
(defconst nothing-number-dark-farms 12)
(defconst nothing-minimum-villagers 60)
(defconst nothing-average-villagers 70)
(defconst nothing-high-villagers 95)
(defconst nothing-maximum-villagers 120)
(defconst nothing-default-flush-style flush-skirm-spear)

(defconst drush-militias 5)
(defconst minimum-stone-eagles 100)
(defconst lower-number-extra-farms 10)
(defconst higher-number-extra-farms 11)
(defconst raid-unit eagle-warrior-line)
(defconst scout-unit eagle-warrior-line)
(defconst boar-tiles-to-right 4)
(defconst boar-tiles-to-left -4)
#else
(defconst drush-militias 3)
(defconst minimum-stone-eagles 0)
(defconst lower-number-extra-farms 11)
(defconst higher-number-extra-farms 12)
#load-if-defined MAYAN-CIV
(defconst raid-unit eagle-warrior-line)
(defconst scout-unit eagle-warrior-line)
(defconst boar-tiles-to-right 4)
(defconst boar-tiles-to-left -4)
#else
#load-if-defined INCAN-CIV
(defconst raid-unit eagle-warrior-line)
(defconst scout-unit eagle-warrior-line)
(defconst boar-tiles-to-right 4)
(defconst boar-tiles-to-left -4)
#else
(defconst scout-unit scout-cavalry-line)
(defconst boar-tiles-to-right 4)
(defconst boar-tiles-to-left -4)
#load-if-defined GOTHIC-CIV
(defconst raid-unit huskarl-line)
#else
#load-if-defined CELTIC-CIV
(defconst raid-unit woad-raider-line)
#else
(defconst raid-unit scout-cavalry-line)
#end-if
#end-if
#end-if
#end-if
#end-if

#load-if-defined BRITON-CIV
(defconst wonder-dark-villagers 34)

(defconst castle-drop-uu-amount 40)
(defconst castle-age-uu-amount 20)
(defconst late-game-scout-amount 0)
(defconst upgraded-scout-amount 10)

(defconst dark-hunt-distance 17)

(defconst castle-drop-food-gp 33)
(defconst castle-drop-wood-gp 51)
(defconst castle-drop-gold-gp 12)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 4)
(defconst castle-drop-wood-gp-points 10)
(defconst castle-drop-gold-gp-points 9)

(defconst escrow-UU-soldier 45)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 16)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 60)
(defconst escrow-UU-resource2-count 60)
(defconst escrow-UU-food-points 14)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 14)

(defconst ffa-strategy 11)
(defconst boom-strategy 11)
(defconst regicide-strategy 11)
(defconst rf-strategy 11)
(defconst backup-strategy 11)
#load-if-not-defined ARENA-MAP
(defconst aggressive-strategy 7)
#else
(defconst aggressive-strategy 35)
#end-if
(defconst FLUSH-DEFENCE-MAA 0)
(defconst FLUSH-DEFENCE-ARCHER 1)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 3)
(defconst DTW-ADVANCED-INFANTRY 3)
(defconst DTW-ADVANCED-ARCHERY 0)
(defconst DTW-ADVANCED-CAVALRY 0)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 1)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 10)
(defconst extra-galley-value 0)
(defconst castle-sling-priority 14)
(defconst dm-UU-type 5)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 0)
(defconst dm-pala-in-tech-tree 0)

(defconst nothing-number-flush-villagers 28)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 60)
(defconst nothing-average-villagers 80)
(defconst nothing-high-villagers 105)
(defconst nothing-maximum-villagers 130)
(defconst nothing-default-flush-style flush-skirm-spear)

(defconst town-center-wood 138)
#else
(defconst town-center-wood 275)
#end-if

#load-if-defined BYZANTINE-CIV
(defconst wonder-dark-villagers 33)

(defconst castle-drop-uu-amount 20)
(defconst castle-age-uu-amount 5)
(defconst late-game-scout-amount 0)
(defconst upgraded-scout-amount 15)

(defconst dark-hunt-distance 17)

(defconst castle-drop-food-gp 43)
(defconst castle-drop-wood-gp 42)
(defconst castle-drop-gold-gp 11)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 14)
(defconst castle-drop-wood-gp-points 6)
(defconst castle-drop-gold-gp-points 7)

(defconst escrow-UU-soldier 70)
(defconst escrow-UU-pop 190)
(defconst escrow-UU-count 11)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 60)
(defconst escrow-UU-resource2-count 50)
(defconst escrow-UU-food-points 14)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 14)

(defconst ffa-strategy 11)
(defconst boom-strategy 11)
#load-if-defined ARABIA-MAP
(defconst regicide-strategy 12)
#else
(defconst regicide-strategy 11)
#end-if
(defconst rf-strategy 11)
(defconst backup-strategy 12)
(defconst aggressive-strategy 7)
(defconst FLUSH-DEFENCE-MAA 0)
(defconst FLUSH-DEFENCE-ARCHER 2)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 0)
(defconst DTW-ADVANCED-ARCHERY 0)
(defconst DTW-ADVANCED-CAVALRY 0)
(defconst DTW-CASTLE 5)
(defconst no-castles-value 0)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 10)
(defconst extra-galley-value 0)
(defconst castle-sling-priority 14)
(defconst dm-UU-type 1)
(defconst dm-water-plan 3)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 0); They do have but ECatas are better with byzantines

(defconst nothing-number-flush-villagers 29)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 65)
(defconst nothing-average-villagers 85)
(defconst nothing-high-villagers 110)
(defconst nothing-maximum-villagers 130)
(defconst nothing-default-flush-style flush-skirm-spear)

(defconst maximum-castle-queue-food 467)
(defconst high-castle-food 567)
(defconst needed-castle-food 667)
(defconst very-high-castle-food 767)

(defconst needed-castle-gold 536)
(defconst extra-monk-gold 636)
(defconst high-castle-gold 826)

(defconst food-for-palas 10000); Avoid going palas
(defconst ri-required-armor-upgrade ri-plate-barding); Required to allow castle age knights anyway - block with byzantines
#else
(defconst maximum-castle-queue-food 700)
(defconst high-castle-food 900)
(defconst needed-castle-food 1000)
(defconst very-high-castle-food 1100)

(defconst needed-castle-gold 800)
(defconst extra-monk-gold 900)
(defconst high-castle-gold 1090)

(defconst food-for-palas 2000)
(defconst ri-required-armor-upgrade ri-chain-barding)
#end-if

#load-if-defined CELTIC-CIV
(defconst wonder-dark-villagers 33)

(defconst castle-drop-uu-amount 25)
(defconst castle-age-uu-amount 0)
(defconst late-game-scout-amount 0)
(defconst upgraded-scout-amount 17)

(defconst dark-hunt-distance 17)

(defconst castle-drop-food-gp 43)
(defconst castle-drop-wood-gp 44)
(defconst castle-drop-gold-gp 9)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 12)
(defconst castle-drop-wood-gp-points 6)
(defconst castle-drop-gold-gp-points 4)

(defconst escrow-UU-soldier 65)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 15)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 60)
(defconst escrow-UU-resource2-count 60)
(defconst escrow-UU-food-points 14)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 14)

(defconst ffa-strategy 11)
(defconst boom-strategy 17)
(defconst regicide-strategy 12)
(defconst rf-strategy 11)
(defconst backup-strategy 11)
#load-if-defined UP-POCKET-POSITION
(defconst aggressive-strategy 7)
#else
(defconst aggressive-strategy 13)
#end-if
(defconst FLUSH-DEFENCE-MAA 1)
(defconst FLUSH-DEFENCE-ARCHER 2)
(defconst BACKUP-PLAN-MAA 3)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 0)
(defconst DTW-ADVANCED-ARCHERY 9)
(defconst DTW-ADVANCED-CAVALRY 0)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 1)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 9)
(defconst extra-galley-value 1)
(defconst castle-sling-priority 14)
(defconst dm-UU-type 4)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 0); Too weak to be used

(defconst nothing-number-flush-villagers 27)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 60)
(defconst nothing-average-villagers 85)
(defconst nothing-high-villagers 105)
(defconst nothing-maximum-villagers 130)
(defconst nothing-default-flush-style flush-skirm-spear)
#end-if

#load-if-defined CHINESE-CIV
(defconst wonder-dark-villagers 34)

(defconst castle-drop-uu-amount 40)
(defconst castle-age-uu-amount 20)
(defconst late-game-scout-amount 20)
(defconst upgraded-scout-amount 20)

(defconst dark-hunt-distance 17)

(defconst castle-drop-food-gp 32)
(defconst castle-drop-wood-gp 52)
(defconst castle-drop-gold-gp 12)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 4)
(defconst castle-drop-wood-gp-points 10)
(defconst castle-drop-gold-gp-points 9)

(defconst escrow-UU-soldier 45)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 16)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 40)
(defconst escrow-UU-resource2-count 40)
(defconst escrow-UU-food-points 14)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 14)

(defconst ffa-strategy 11)
(defconst boom-strategy 11)
(defconst regicide-strategy 11)
(defconst rf-strategy 11)
(defconst backup-strategy 11)
#load-if-not-defined ARENA-MAP
(defconst aggressive-strategy 7)
#else
(defconst aggressive-strategy 35)
#end-if
(defconst FLUSH-DEFENCE-MAA 0)
(defconst FLUSH-DEFENCE-ARCHER 2)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 3)
(defconst DTW-ADVANCED-INFANTRY 3)
(defconst DTW-ADVANCED-ARCHERY 9)
(defconst DTW-ADVANCED-CAVALRY 0)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 1)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 9)
(defconst extra-galley-value 1)
(defconst castle-sling-priority 6)
(defconst dm-UU-type 5)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 0)
(defconst dm-pala-in-tech-tree 0)

(defconst nothing-number-flush-villagers 30)
(defconst nothing-number-flush-market-villagers 27)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 14)
(defconst nothing-minimum-villagers 65)
(defconst nothing-average-villagers 80)
(defconst nothing-high-villagers 100)
(defconst nothing-maximum-villagers 125)
(defconst nothing-default-flush-style flush-scout-skirm)

(defconst dark-housing-cap 2)
(defconst transport-max-villagers 5)
(defconst land-nomad-TC-villagers 6)
#else
(defconst dark-housing-cap 3)
#load-if-defined MAYAN-CIV
(defconst transport-max-villagers 4)
(defconst land-nomad-TC-villagers 3)
#else
(defconst transport-max-villagers 3)
#load-if-defined HUN-CIV
(defconst land-nomad-TC-villagers 3)
#else
(defconst land-nomad-TC-villagers 2)
#end-if
#end-if
#end-if

#load-if-defined FRANKISH-CIV
(defconst wonder-dark-villagers 34)

(defconst castle-drop-uu-amount 25)
(defconst castle-age-uu-amount 0)
(defconst late-game-scout-amount 0)
(defconst upgraded-scout-amount 14)

(defconst dark-hunt-distance 17)

(defconst castle-drop-food-gp 44)
(defconst castle-drop-wood-gp 43)
(defconst castle-drop-gold-gp 9)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 11)
(defconst castle-drop-wood-gp-points 6)
(defconst castle-drop-gold-gp-points 5)

(defconst escrow-UU-soldier 10000)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 10000)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 0)
(defconst escrow-UU-resource2-count 0)
(defconst escrow-UU-food-points 0)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 0)

(defconst ffa-strategy 11)
(defconst boom-strategy 40)
(defconst regicide-strategy 30)
(defconst rf-strategy 11)
(defconst backup-strategy 30)
#load-if-not-defined ARENA-MAP
(defconst aggressive-strategy 43)
#else
(defconst aggressive-strategy 35)
#end-if
(defconst FLUSH-DEFENCE-MAA 1)
(defconst FLUSH-DEFENCE-ARCHER 2)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 0)
(defconst DTW-ADVANCED-ARCHERY 9)
(defconst DTW-ADVANCED-CAVALRY 2)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 0)
(defconst first-castle-value 0)
(defconst chance-of-flush-defence 10)
(defconst extra-galley-value 0)
(defconst castle-sling-priority 2)
(defconst dm-UU-type 1)
(defconst dm-water-plan 2)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 1)

(defconst nothing-number-flush-villagers 28)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 65)
(defconst nothing-average-villagers 80)
(defconst nothing-high-villagers 105)
(defconst nothing-maximum-villagers 130)
(defconst nothing-default-flush-style flush-skirm-spear)

(defconst castle-stone 488)
(defconst fc-castle-drop-food-gp 32); Feudal-Castle tranfer gathering percentages
(defconst fc-castle-drop-wood-gp 39)
(defconst fc-castle-drop-gold-gp 4)
(defconst fc-castle-drop-stone-gp 25)
#else
#load-if-not-defined INCAN-CIV
(defconst castle-stone 650)
(defconst fc-castle-drop-food-gp 29)
(defconst fc-castle-drop-wood-gp 33)
(defconst fc-castle-drop-gold-gp 4)
(defconst fc-castle-drop-stone-gp 34)
#else
(defconst castle-stone 520)
(defconst fc-castle-drop-food-gp 32)
(defconst fc-castle-drop-wood-gp 38)
(defconst fc-castle-drop-gold-gp 4)
(defconst fc-castle-drop-stone-gp 26)
#end-if
#end-if

#load-if-defined GOTHIC-CIV
(defconst wonder-dark-villagers 34)

(defconst castle-drop-uu-amount 25)
(defconst castle-age-uu-amount 5)
(defconst late-game-scout-amount 0)
(defconst upgraded-scout-amount 20)

(defconst ffa-strategy 11)
(defconst boom-strategy 11)
(defconst regicide-strategy 11)
(defconst rf-strategy 11)
(defconst backup-strategy 11)
(defconst aggressive-strategy 43)
(defconst FLUSH-DEFENCE-MAA 1)
(defconst FLUSH-DEFENCE-ARCHER 2)
(defconst BACKUP-PLAN-MAA 3)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 0); Don't use these
(defconst DTW-ADVANCED-ARCHERY 0)
(defconst DTW-ADVANCED-CAVALRY 0)
(defconst DTW-CASTLE 0)
(defconst no-castles-value 1)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 10)
(defconst extra-galley-value 0)
(defconst castle-sling-priority 10)
(defconst dm-UU-type 2)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 0)

(defconst nothing-number-flush-villagers 29)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 65)
(defconst nothing-average-villagers 80)
(defconst nothing-high-villagers 95)
(defconst nothing-maximum-villagers 120)
(defconst nothing-default-flush-style flush-skirm-spear)

(defconst dark-hunt-distance 27)

(defconst castle-drop-food-gp 44)
(defconst castle-drop-wood-gp 43)
(defconst castle-drop-gold-gp 9)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 12)
(defconst castle-drop-wood-gp-points 6)
(defconst castle-drop-gold-gp-points 5)

(defconst escrow-UU-soldier 60)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 14)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 70)
(defconst escrow-UU-resource2-count 50)
(defconst escrow-UU-food-points 14)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 8)

#load-if-not-defined FEUDAL-AGE-END
(defconst max-feudal-maa 20)
#else
(defconst max-feudal-maa 1000)
#end-if
(defconst militia-food 89)
(defconst maa1-villagers 27)
(defconst maa2-villagers 28)
(defconst dm-housing-villagers1 5); Villagers to build more than 2 houses at same time
(defconst dm-housing-villagers2 8); Villagers to build more than 4 houses at same time
#else
#load-if-not-defined FEUDAL-AGE-END
(defconst max-feudal-maa 13)
#else
(defconst max-feudal-maa 1000)
#end-if
(defconst militia-food 110)
(defconst maa1-villagers 29)
(defconst maa2-villagers 29)
(defconst dm-housing-villagers1 8)
(defconst dm-housing-villagers2 11)
#end-if

#load-if-defined HUN-CIV
(defconst wonder-dark-villagers 33)

(defconst castle-drop-uu-amount 25)
(defconst castle-age-uu-amount 0)
(defconst late-game-scout-amount 50)
(defconst upgraded-scout-amount 50)

(defconst dark-hunt-distance 17)

(defconst ffa-strategy 4)
(defconst boom-strategy 40)
(defconst regicide-strategy 4)
(defconst rf-strategy 4)
(defconst backup-strategy 30)
(defconst aggressive-strategy 43)
(defconst FLUSH-DEFENCE-MAA 0)
(defconst FLUSH-DEFENCE-ARCHER 1)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 0)
(defconst DTW-ADVANCED-ARCHERY 7)
(defconst DTW-ADVANCED-CAVALRY 2)
(defconst DTW-CASTLE 0)
(defconst no-castles-value 0)
(defconst first-castle-value 0)
(defconst chance-of-flush-defence 8)
(defconst extra-galley-value 1)
(defconst castle-sling-priority 4)
(defconst dm-UU-type 0)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 1)

(defconst nothing-number-flush-villagers 28)
(defconst nothing-number-flush-market-villagers 25)
(defconst nothing-number-fc-villagers 25)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 65)
(defconst nothing-average-villagers 85)
(defconst nothing-high-villagers 95)
(defconst nothing-maximum-villagers 120)
(defconst nothing-default-flush-style flush-scout-skirm)

(defconst castle-drop-food-gp 44)
(defconst castle-drop-wood-gp 41)
(defconst castle-drop-gold-gp 11)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 12)
(defconst castle-drop-wood-gp-points 6)
(defconst castle-drop-gold-gp-points 7)

(defconst escrow-UU-soldier 10000)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 10000)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 0)
(defconst escrow-UU-resource2-count 0)
(defconst escrow-UU-food-points 0)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 0)

(defconst ts-gt-900 10)
(defconst ts-gt-1200 12)
(defconst ts-gt-1500 14)
(defconst min-added-tc-distance 18)
(defconst basic-town-size 4)

(defconst nomad-start-max-mill-time 620)
(defconst up-nomad-start-max-mill-time 570)
(defconst main-ranged-unit cavalry-archer-line)
#else
(defconst ts-gt-900 12)
(defconst ts-gt-1200 14)
(defconst ts-gt-1500 16)
(defconst min-added-tc-distance 21)
(defconst basic-town-size 6)

(defconst nomad-start-max-mill-time 480)
(defconst up-nomad-start-max-mill-time 430)
(defconst main-ranged-unit archer-line)
#end-if

#load-if-defined INCAN-CIV
(defconst wonder-dark-villagers 33)

(defconst castle-drop-uu-amount 25)
(defconst castle-age-uu-amount 0)
(defconst late-game-scout-amount 0)
(defconst upgraded-scout-amount 0)

(defconst castle-drop-food-gp 44)
(defconst castle-drop-wood-gp 43)
(defconst castle-drop-gold-gp 9)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 12)
(defconst castle-drop-wood-gp-points 6)
(defconst castle-drop-gold-gp-points 5)

(defconst escrow-UU-soldier 55)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 14)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 70)
(defconst escrow-UU-resource2-count 60)
(defconst escrow-UU-food-points 13)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 8)

(defconst dark-hunt-distance 17)

(defconst ffa-strategy 11)
#load-if-defined IMPERIAL-AGE-END
(defconst boom-strategy 2)
#else
(defconst boom-strategy 11)
#end-if
(defconst regicide-strategy 11)
(defconst rf-strategy 11)
(defconst backup-strategy 12)
#load-if-not-defined ARENA-MAP
(defconst aggressive-strategy 7)
#else
(defconst aggressive-strategy 35)
#end-if
(defconst FLUSH-DEFENCE-MAA 1)
(defconst FLUSH-DEFENCE-ARCHER 1)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 0)
(defconst DTW-ADVANCED-ARCHERY 2)
(defconst DTW-ADVANCED-CAVALRY 0)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 0)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 9)
(defconst extra-galley-value 1)
(defconst castle-sling-priority 14)
(defconst dm-UU-type 3)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 0)

(defconst nothing-number-flush-villagers 28)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 70)
(defconst nothing-average-villagers 80)
(defconst nothing-high-villagers 105)
(defconst nothing-maximum-villagers 120)
(defconst nothing-default-flush-style flush-skirm-spear)

(defconst my-UU 879)
(defconst my-elite-UU 881)
#end-if

#load-if-defined INDIAN-CIV
(defconst wonder-dark-villagers 33)

(defconst castle-drop-uu-amount 15)
(defconst castle-age-uu-amount 0)
(defconst late-game-scout-amount 50)
(defconst upgraded-scout-amount 50)

(defconst dark-hunt-distance 17)

(defconst ffa-strategy 12)
(defconst boom-strategy 40)
(defconst regicide-strategy 11)
(defconst rf-strategy 11)
(defconst backup-strategy 12)
#load-if-not-defined ARENA-MAP
(defconst aggressive-strategy 7)
#else
(defconst aggressive-strategy 35)
#end-if
(defconst FLUSH-DEFENCE-MAA 0)
(defconst FLUSH-DEFENCE-ARCHER 2)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 0)
(defconst DTW-ADVANCED-ARCHERY 5)
(defconst DTW-ADVANCED-CAVALRY 2)
(defconst DTW-CASTLE 0)
(defconst no-castles-value 0)
(defconst first-castle-value 0)
(defconst chance-of-flush-defence 9)
(defconst extra-galley-value 1)
(defconst castle-sling-priority 14)
(defconst dm-UU-type 5)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 0)

(defconst nothing-number-flush-villagers 28)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 70)
(defconst nothing-average-villagers 80)
(defconst nothing-high-villagers 100)
(defconst nothing-maximum-villagers 120)
(defconst nothing-default-flush-style flush-scout-skirm)

(defconst castle-drop-food-gp 44)
(defconst castle-drop-wood-gp 41)
(defconst castle-drop-gold-gp 11)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 14)
(defconst castle-drop-wood-gp-points 6)
(defconst castle-drop-gold-gp-points 7)

(defconst escrow-UU-soldier 55)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 11)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 60)
(defconst escrow-UU-resource2-count 50)
(defconst escrow-UU-food-points 14)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 11)

(defconst my-UU 873)
(defconst my-elite-UU 875)
#end-if

#load-if-defined ITALIAN-CIV
(defconst wonder-dark-villagers 33)

(defconst castle-drop-uu-amount 20)
(defconst castle-age-uu-amount 0)
(defconst late-game-scout-amount 30)
(defconst upgraded-scout-amount 30)

(defconst dark-hunt-distance 17)

(defconst ffa-strategy 12)
(defconst boom-strategy 11)
(defconst regicide-strategy 12)
(defconst rf-strategy 11)
(defconst backup-strategy 12)
#load-if-not-defined ARENA-MAP
(defconst aggressive-strategy 7)
#else
(defconst aggressive-strategy 35)
#end-if
(defconst FLUSH-DEFENCE-MAA 0)
(defconst FLUSH-DEFENCE-ARCHER 2)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 3)
(defconst DTW-ADVANCED-ARCHERY 5)
(defconst DTW-ADVANCED-CAVALRY 0)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 0)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 9)
(defconst extra-galley-value 1)
(defconst castle-sling-priority 14)
(defconst dm-UU-type 3)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 0)
(defconst dm-pala-in-tech-tree 0)

(defconst nothing-number-flush-villagers 28)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 70)
(defconst nothing-average-villagers 80)
(defconst nothing-high-villagers 105)
(defconst nothing-maximum-villagers 120)
(defconst nothing-default-flush-style flush-skirm-spear)

(defconst castle-drop-food-gp 32)
(defconst castle-drop-wood-gp 52)
(defconst castle-drop-gold-gp 12)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 4)
(defconst castle-drop-wood-gp-points 10)
(defconst castle-drop-gold-gp-points 9)

(defconst escrow-UU-soldier 55)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 15)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 60)
(defconst escrow-UU-resource2-count 50)
(defconst escrow-UU-food-points 13)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 11)

(defconst my-UU 866)
(defconst my-elite-UU 868)
#end-if

#load-if-defined JAPANESE-CIV
(defconst wonder-dark-villagers 33)

(defconst castle-drop-uu-amount 25)
(defconst castle-age-uu-amount 0)
(defconst late-game-scout-amount 0)
(defconst upgraded-scout-amount 0)

(defconst dark-hunt-distance 17)

(defconst ffa-strategy 11)
(defconst boom-strategy 11)
(defconst regicide-strategy 12)
(defconst rf-strategy 11)
(defconst backup-strategy 12)
(defconst aggressive-strategy 7)
(defconst FLUSH-DEFENCE-MAA 1)
(defconst FLUSH-DEFENCE-ARCHER 1)
(defconst BACKUP-PLAN-MAA 3)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 0)
(defconst DTW-ADVANCED-ARCHERY 5)
(defconst DTW-ADVANCED-CAVALRY 0)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 1)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 10)
(defconst extra-galley-value 1)
(defconst castle-sling-priority 14)
(defconst dm-UU-type 9)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 0)

(defconst nothing-number-flush-villagers 28)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 70)
(defconst nothing-average-villagers 80)
(defconst nothing-high-villagers 105)
(defconst nothing-maximum-villagers 120)
(defconst nothing-default-flush-style flush-skirm-spear)

(defconst castle-drop-food-gp 44)
(defconst castle-drop-wood-gp 43)
(defconst castle-drop-gold-gp 9)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 12)
(defconst castle-drop-wood-gp-points 6)
(defconst castle-drop-gold-gp-points 5)

(defconst escrow-UU-soldier 55)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 14)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 70)
(defconst escrow-UU-resource2-count 50)
(defconst escrow-UU-food-points 14)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 12)
#end-if

#load-if-defined KOREAN-CIV
(defconst wonder-dark-villagers 34)

(defconst castle-drop-uu-amount 26)
(defconst castle-age-uu-amount 12)
(defconst late-game-scout-amount 0)
(defconst upgraded-scout-amount 10)

(defconst dark-hunt-distance 17)

(defconst ffa-strategy 11)
(defconst boom-strategy 11)
(defconst regicide-strategy 11)
(defconst rf-strategy 11)
(defconst backup-strategy 11)
#load-if-not-defined ARENA-MAP
(defconst aggressive-strategy 7)
#else
(defconst aggressive-strategy 35)
#end-if
(defconst FLUSH-DEFENCE-MAA 1)
(defconst FLUSH-DEFENCE-ARCHER 1)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 3)
(defconst DTW-ADVANCED-INFANTRY 3)
(defconst DTW-ADVANCED-ARCHERY 5)
(defconst DTW-ADVANCED-CAVALRY 0)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 1)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 9)
(defconst extra-galley-value 0)
(defconst castle-sling-priority 14)
(defconst dm-UU-type 2)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 0)
(defconst dm-pala-in-tech-tree 0)

(defconst nothing-number-flush-villagers 28)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 65)
(defconst nothing-average-villagers 80)
(defconst nothing-high-villagers 100)
(defconst nothing-maximum-villagers 130)
(defconst nothing-default-flush-style flush-skirm-spear)

(defconst castle-drop-food-gp 33)
(defconst castle-drop-wood-gp 54)
(defconst castle-drop-gold-gp 9)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 4)
(defconst castle-drop-wood-gp-points 14)
(defconst castle-drop-gold-gp-points 7)

(defconst escrow-UU-soldier 55)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 12)
(defconst escrow-UU-resource1 wood)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 70)
(defconst escrow-UU-resource2-count 50)
(defconst escrow-UU-food-points 0)
(defconst escrow-UU-wood-points 18)
(defconst escrow-UU-gold-points 12)
#end-if

#load-if-defined MAGYAR-CIV
(defconst wonder-dark-villagers 33)

(defconst castle-drop-uu-amount 20)
(defconst castle-age-uu-amount 0)
(defconst late-game-scout-amount 0)
(defconst upgraded-scout-amount 0)

(defconst dark-hunt-distance 17)

(defconst ffa-strategy 30)
(defconst boom-strategy 40)
(defconst regicide-strategy 30)
(defconst rf-strategy 30)
(defconst backup-strategy 30)
(defconst aggressive-strategy 43)
(defconst FLUSH-DEFENCE-MAA 1)
(defconst FLUSH-DEFENCE-ARCHER 1)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 0)
(defconst DTW-ADVANCED-ARCHERY 9)
(defconst DTW-ADVANCED-CAVALRY 2)
(defconst DTW-CASTLE 0)
(defconst no-castles-value 0)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 9)
(defconst extra-galley-value 1)
(defconst castle-sling-priority 13)
(defconst dm-UU-type 10)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 1)

(defconst nothing-number-flush-villagers 28)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 70)
(defconst nothing-average-villagers 85)
(defconst nothing-high-villagers 100)
(defconst nothing-maximum-villagers 120)
(defconst nothing-default-flush-style flush-scout-skirm)

(defconst castle-drop-food-gp 46)
(defconst castle-drop-wood-gp 45)
(defconst castle-drop-gold-gp 5)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 14)
(defconst castle-drop-wood-gp-points 8)
(defconst castle-drop-gold-gp-points 2)

(defconst escrow-UU-soldier 55)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 11)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 70)
(defconst escrow-UU-resource2-count 70)
(defconst escrow-UU-food-points 12)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 11)

(defconst my-UU 869)
(defconst my-elite-UU 871)
#end-if

#load-if-defined MAYAN-CIV
(defconst wonder-dark-villagers 33)

(defconst castle-drop-uu-amount 45)
(defconst castle-age-uu-amount 20)
(defconst late-game-scout-amount 0)
(defconst upgraded-scout-amount 0)

(defconst castle-drop-food-gp 34)
(defconst castle-drop-wood-gp 51)
(defconst castle-drop-gold-gp 11)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 4)
(defconst castle-drop-wood-gp-points 10)
(defconst castle-drop-gold-gp-points 9)

(defconst escrow-UU-soldier 50)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 16)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 wood)
(defconst escrow-UU-resource1-count 50)
(defconst escrow-UU-resource2-count 70)
(defconst escrow-UU-food-points 14)
(defconst escrow-UU-wood-points 22)
(defconst escrow-UU-gold-points 0)

(defconst dark-hunt-distance 17)

(defconst ffa-strategy 11)
#load-if-defined IMPERIAL-AGE-END
(defconst boom-strategy 2)
#else
(defconst boom-strategy 11)
#end-if
(defconst regicide-strategy 11)
(defconst rf-strategy 11)
(defconst backup-strategy 11)
#load-if-not-defined ARENA-MAP
(defconst aggressive-strategy 7)
#else
(defconst aggressive-strategy 35)
#end-if
(defconst FLUSH-DEFENCE-MAA 0)
(defconst FLUSH-DEFENCE-ARCHER 1)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 3)
(defconst DTW-ADVANCED-INFANTRY 0)
(defconst DTW-ADVANCED-ARCHERY 0)
(defconst DTW-ADVANCED-CAVALRY 0)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 1)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 10)
(defconst extra-galley-value 1)
(defconst castle-sling-priority 14)
(defconst dm-UU-type 5)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 0)
(defconst dm-pala-in-tech-tree 0)

(defconst nothing-number-flush-villagers 27)
(defconst nothing-number-flush-market-villagers 27)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 14)
(defconst nothing-minimum-villagers 60)
(defconst nothing-average-villagers 70)
(defconst nothing-high-villagers 95)
(defconst nothing-maximum-villagers 120)
(defconst nothing-default-flush-style flush-skirm-spear)
#end-if

#load-if-defined MONGOL-CIV
(defconst wonder-dark-villagers 33)

(defconst castle-drop-uu-amount 35)
(defconst castle-age-uu-amount 15)
(defconst late-game-scout-amount 50)
(defconst upgraded-scout-amount 50)

(defconst dark-hunt-distance 27)

(defconst ffa-strategy 11)
(defconst boom-strategy 11)
(defconst regicide-strategy 11)
(defconst rf-strategy 11)
(defconst backup-strategy 11)
#load-if-not-defined ARENA-MAP
(defconst aggressive-strategy 7)
#else
(defconst aggressive-strategy 35)
#end-if
(defconst FLUSH-DEFENCE-MAA 0)
(defconst FLUSH-DEFENCE-ARCHER 2)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 7)
(defconst DTW-ADVANCED-INFANTRY 3)
(defconst DTW-ADVANCED-ARCHERY 0)
(defconst DTW-ADVANCED-CAVALRY 11)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 1)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 10)
(defconst extra-galley-value 1)
(defconst castle-sling-priority 7)
(defconst dm-UU-type 5)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 0)
(defconst dm-pala-in-tech-tree 0)

(defconst nothing-number-flush-villagers 29)
(defconst nothing-number-flush-market-villagers 27)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 70)
(defconst nothing-average-villagers 85)
(defconst nothing-high-villagers 105)
(defconst nothing-maximum-villagers 125)
(defconst nothing-default-flush-style flush-scout-skirm)

(defconst castle-drop-food-gp 33)
(defconst castle-drop-wood-gp 52)
(defconst castle-drop-gold-gp 11)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 4)
(defconst castle-drop-wood-gp-points 12)
(defconst castle-drop-gold-gp-points 8)

(defconst escrow-UU-soldier 40)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 16)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 70)
(defconst escrow-UU-resource2-count 60)
(defconst escrow-UU-food-points 15)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 10)

(defconst michi-boom-vills 27); AoFE goes 1 less
#load-if-defined UP-MICHI-STYLE
(defconst boar-time 30)
#else
(defconst boar-time 40)
#end-if
#else
(defconst michi-boom-vills 29)
(defconst boar-time 30)
#end-if

#load-if-defined PERSIAN-CIV
(defconst wonder-dark-villagers 33)

(defconst castle-drop-uu-amount 15)
(defconst castle-age-uu-amount 0)
(defconst late-game-scout-amount 50)
(defconst upgraded-scout-amount 50)

(defconst dark-hunt-distance 17)

(defconst ffa-strategy 11)
(defconst boom-strategy 40)
(defconst regicide-strategy 30)
(defconst rf-strategy 30)
(defconst backup-strategy 30)
(defconst aggressive-strategy 43)
(defconst FLUSH-DEFENCE-MAA 0)
(defconst FLUSH-DEFENCE-ARCHER 2)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 0)
(defconst DTW-ADVANCED-ARCHERY 5)
(defconst DTW-ADVANCED-CAVALRY 2)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 0)
(defconst first-castle-value 0)
(defconst chance-of-flush-defence 10)
(defconst extra-galley-value 0)
(defconst castle-sling-priority 3)
(defconst dm-UU-type 7)
(defconst dm-water-plan 3)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 1)

(defconst nothing-number-flush-villagers 28)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 75)
(defconst nothing-average-villagers 90)
(defconst nothing-high-villagers 110)
(defconst nothing-maximum-villagers 130)
(defconst nothing-default-flush-style flush-scout-skirm)

(defconst castle-drop-food-gp 43)
(defconst castle-drop-wood-gp 49)
(defconst castle-drop-gold-gp 4)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 22)
(defconst castle-drop-wood-gp-points 8)
(defconst castle-drop-gold-gp-points 6)

(defconst escrow-UU-soldier 55)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 10)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 70)
(defconst escrow-UU-resource2-count 50)
(defconst escrow-UU-food-points 20)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 8)
#end-if

#load-if-defined SARACEN-CIV
(defconst wonder-dark-villagers 34)

(defconst castle-drop-uu-amount 20)
(defconst castle-age-uu-amount 0)
(defconst late-game-scout-amount 50)
(defconst upgraded-scout-amount 50)

(defconst dark-hunt-distance 17)

(defconst ffa-strategy 11)
(defconst boom-strategy 11)
(defconst regicide-strategy 12)
(defconst rf-strategy 11)
(defconst backup-strategy 12)
#load-if-not-defined ARENA-MAP
(defconst aggressive-strategy 7)
#else
(defconst aggressive-strategy 35)
#end-if
(defconst FLUSH-DEFENCE-MAA 0)
(defconst FLUSH-DEFENCE-ARCHER 2)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 0)
(defconst DTW-ADVANCED-ARCHERY 5)
(defconst DTW-ADVANCED-CAVALRY 11)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 0)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 8)
(defconst extra-galley-value 1)
(defconst castle-sling-priority 13)
(defconst dm-UU-type 3)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 0)

(defconst nothing-number-flush-villagers 29)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 75)
(defconst nothing-average-villagers 85)
(defconst nothing-high-villagers 105)
(defconst nothing-maximum-villagers 125)
(defconst nothing-default-flush-style flush-scout-skirm)

(defconst castle-drop-food-gp 40)
(defconst castle-drop-wood-gp 42)
(defconst castle-drop-gold-gp 14)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 13)
(defconst castle-drop-wood-gp-points 6)
(defconst castle-drop-gold-gp-points 15)

(defconst escrow-UU-soldier 10000)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 10000)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 0)
(defconst escrow-UU-resource2-count 0)
(defconst escrow-UU-food-points 0)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 0)

(defconst default-stone-price 123)
#else
(defconst default-stone-price 91)
#end-if

#load-if-defined SLAVIC-CIV
(defconst wonder-dark-villagers 33)

(defconst castle-drop-uu-amount 20)
(defconst castle-age-uu-amount 10)
(defconst late-game-scout-amount 30)
(defconst upgraded-scout-amount 30)

(defconst dark-hunt-distance 17)

(defconst ffa-strategy 34)
(defconst boom-strategy 17)
(defconst regicide-strategy 11)
(defconst rf-strategy 11)
(defconst backup-strategy 11)
#load-if-defined UP-POCKET-POSITION
(defconst aggressive-strategy 43)
#else
(defconst aggressive-strategy 13)
#end-if
(defconst FLUSH-DEFENCE-MAA 1)
(defconst FLUSH-DEFENCE-ARCHER 2)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 3)
(defconst DTW-ADVANCED-ARCHERY 9)
(defconst DTW-ADVANCED-CAVALRY 0)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 0)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 9)
(defconst extra-galley-value 1)
(defconst castle-sling-priority 12)
(defconst dm-UU-type 7)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 0)

(defconst nothing-number-flush-villagers 28)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 80)
(defconst nothing-average-villagers 90)
(defconst nothing-high-villagers 110)
(defconst nothing-maximum-villagers 125)
(defconst nothing-default-flush-style flush-skirm-spear)

(defconst castle-drop-food-gp 42)
(defconst castle-drop-wood-gp 41)
(defconst castle-drop-gold-gp 13)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 13)
(defconst castle-drop-wood-gp-points 6)
(defconst castle-drop-gold-gp-points 15)

(defconst escrow-UU-soldier 55)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 11)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 70)
(defconst escrow-UU-resource2-count 60)
(defconst escrow-UU-food-points 14)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 10)

(defconst my-UU 876)
(defconst my-elite-UU 878)
#end-if

#load-if-defined SPANISH-CIV
(defconst wonder-dark-villagers 33)

(defconst castle-drop-uu-amount 26)
(defconst castle-age-uu-amount 15)
(defconst late-game-scout-amount 50)
(defconst upgraded-scout-amount 50)

(defconst dark-hunt-distance 17)

(defconst ffa-strategy 11)
(defconst boom-strategy 40)
(defconst regicide-strategy 11)
(defconst rf-strategy 11)
(defconst backup-strategy 11)
#load-if-not-defined ARENA-MAP
(defconst aggressive-strategy 43)
#else
(defconst aggressive-strategy 35)
#end-if
(defconst FLUSH-DEFENCE-MAA 1)
(defconst FLUSH-DEFENCE-ARCHER 2)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 0)
(defconst DTW-ADVANCED-ARCHERY 5)
(defconst DTW-ADVANCED-CAVALRY 2)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 0)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 8)
(defconst extra-galley-value 1)
(defconst castle-sling-priority 5)
(defconst dm-UU-type 8)
(defconst dm-water-plan 3)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 1)

(defconst nothing-number-flush-villagers 28)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 75)
(defconst nothing-average-villagers 90)
(defconst nothing-high-villagers 105)
(defconst nothing-maximum-villagers 130)
(defconst nothing-default-flush-style flush-scout-skirm)

(defconst castle-drop-food-gp 43)
(defconst castle-drop-wood-gp 42)
(defconst castle-drop-gold-gp 11)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 12)
(defconst castle-drop-wood-gp-points 6)
(defconst castle-drop-gold-gp-points 12)

(defconst escrow-UU-soldier 10000)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 10000)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 0)
(defconst escrow-UU-resource2-count 0)
(defconst escrow-UU-food-points 0)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 0)

(defconst siege-targeting-default-value 2)
(defconst siege-targeting-treb-value 3)
#else
(defconst siege-targeting-default-value 0)
(defconst siege-targeting-treb-value 1)
#end-if

#load-if-defined TEUTONIC-CIV
(defconst wonder-dark-villagers 33)

(defconst castle-drop-uu-amount 25)
(defconst castle-age-uu-amount 0)
(defconst late-game-scout-amount 0)
(defconst upgraded-scout-amount 10)

(defconst dark-hunt-distance 17)

(defconst ffa-strategy 11)
(defconst boom-strategy 40)
(defconst regicide-strategy 30)
(defconst rf-strategy 11)
(defconst backup-strategy 30)
(defconst aggressive-strategy 43)
(defconst FLUSH-DEFENCE-MAA 1)
(defconst FLUSH-DEFENCE-ARCHER 1)
(defconst BACKUP-PLAN-MAA 3)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 0)
(defconst DTW-ADVANCED-ARCHERY 9)
(defconst DTW-ADVANCED-CAVALRY 2)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 1)
(defconst first-castle-value 0)
(defconst chance-of-flush-defence 9)
(defconst extra-galley-value 0)
(defconst castle-sling-priority 1)
(defconst dm-UU-type 7)
(defconst dm-water-plan 3)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 1)

(defconst nothing-number-flush-villagers 28)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 25)
(defconst nothing-number-dark-farms 14)
(defconst nothing-minimum-villagers 75)
(defconst nothing-average-villagers 90)
(defconst nothing-high-villagers 105)
(defconst nothing-maximum-villagers 120)
(defconst nothing-default-flush-style flush-scout-skirm)

(defconst castle-drop-food-gp 44)
(defconst castle-drop-wood-gp 43)
(defconst castle-drop-gold-gp 9)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 14)
(defconst castle-drop-wood-gp-points 6)
(defconst castle-drop-gold-gp-points 7)

(defconst escrow-UU-soldier 45)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 12)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 70)
(defconst escrow-UU-resource2-count 60)
(defconst escrow-UU-food-points 14)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 10)

#load-if-not-defined UP-GAME-AGE2-X2
(defconst berry-walk-time 0)
#else
(defconst berry-walk-time 15)
#end-if
(defconst dock-farm-wood 190)
(defconst fish-farm-wood 115)
(defconst raid-capable-UU 0)
#else
#load-if-not-defined UP-GAME-AGE2-X2
#load-if-not-defined CHINESE-CIV
(defconst berry-walk-time 15)
#else
(defconst berry-walk-time 15)
#end-if
#else
#load-if-not-defined CHINESE-CIV
(defconst berry-walk-time 15)
#else
(defconst berry-walk-time 0)
#end-if
#end-if
(defconst dock-farm-wood 210)
(defconst fish-farm-wood 135)
(defconst raid-capable-UU 1)
#end-if

#load-if-defined TURKISH-CIV
(defconst wonder-dark-villagers 34)

(defconst castle-drop-uu-amount 30)
(defconst castle-age-uu-amount 15)
(defconst late-game-scout-amount 100)
(defconst upgraded-scout-amount 100)

(defconst dark-hunt-distance 17)

(defconst ffa-strategy 11)
(defconst boom-strategy 52)
(defconst regicide-strategy 11)
(defconst rf-strategy 11)
(defconst backup-strategy 11)
#load-if-not-defined ARENA-MAP
(defconst aggressive-strategy 7)
#else
(defconst aggressive-strategy 35)
#end-if
(defconst FLUSH-DEFENCE-MAA 1)
(defconst FLUSH-DEFENCE-ARCHER 1)
(defconst BACKUP-PLAN-MAA 0)
(defconst BACKUP-PLAN-ARCHER 5)
(defconst DTW-ADVANCED-INFANTRY 0)
(defconst DTW-ADVANCED-ARCHERY 5)
(defconst DTW-ADVANCED-CAVALRY 11)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 1)
(defconst first-castle-value 1)
(defconst chance-of-flush-defence 10)
(defconst extra-galley-value 1)
(defconst castle-sling-priority 8)
(defconst dm-UU-type 8)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 0)

(defconst nothing-number-flush-villagers 29)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 70)
(defconst nothing-average-villagers 85)
(defconst nothing-high-villagers 105)
(defconst nothing-maximum-villagers 130)
(defconst nothing-default-flush-style flush-scout-skirm)

(defconst castle-drop-food-gp 43)
(defconst castle-drop-wood-gp 42)
(defconst castle-drop-gold-gp 11)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 12)
(defconst castle-drop-wood-gp-points 6)
(defconst castle-drop-gold-gp-points 12)

(defconst escrow-UU-soldier 45)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 14)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 60)
(defconst escrow-UU-resource2-count 60)
(defconst escrow-UU-food-points 14)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 14)
#end-if

#load-if-defined VIKING-CIV
(defconst wonder-dark-villagers 33)

(defconst castle-drop-uu-amount 25)
(defconst castle-age-uu-amount 0)
(defconst late-game-scout-amount 0)
(defconst upgraded-scout-amount 10)

(defconst dark-hunt-distance 17)

(defconst ffa-strategy 11)
(defconst boom-strategy 11)
(defconst regicide-strategy 12)
(defconst rf-strategy 11)
(defconst backup-strategy 12)
(defconst aggressive-strategy 7)
(defconst FLUSH-DEFENCE-MAA 1)
(defconst FLUSH-DEFENCE-ARCHER 1)
(defconst BACKUP-PLAN-MAA 3)
(defconst BACKUP-PLAN-ARCHER 0)
(defconst DTW-ADVANCED-INFANTRY 0)
(defconst DTW-ADVANCED-ARCHERY 3)
(defconst DTW-ADVANCED-CAVALRY 0)
(defconst DTW-CASTLE 2)
(defconst no-castles-value 1)
(defconst first-castle-value 0)
(defconst chance-of-flush-defence 10)
(defconst extra-galley-value 1)
(defconst castle-sling-priority 9)
(defconst dm-UU-type 4)
(defconst dm-water-plan 1)
(defconst dm-food-costing-UU 1)
(defconst dm-pala-in-tech-tree 0)

(defconst nothing-number-flush-villagers 27)
(defconst nothing-number-flush-market-villagers 26)
(defconst nothing-number-fc-villagers 26)
(defconst nothing-number-dark-farms 13)
(defconst nothing-minimum-villagers 75)
(defconst nothing-average-villagers 90)
(defconst nothing-high-villagers 105)
(defconst nothing-maximum-villagers 125)
(defconst nothing-default-flush-style flush-skirm-spear)

(defconst castle-drop-food-gp 44)
(defconst castle-drop-wood-gp 43)
(defconst castle-drop-gold-gp 9)
(defconst castle-drop-stone-gp 4)

(defconst castle-drop-food-gp-points 12)
(defconst castle-drop-wood-gp-points 6)
(defconst castle-drop-gold-gp-points 5)

(defconst escrow-UU-soldier 55)
(defconst escrow-UU-pop 10000)
(defconst escrow-UU-count 14)
(defconst escrow-UU-resource1 food)
(defconst escrow-UU-resource2 gold)
(defconst escrow-UU-resource1-count 70)
(defconst escrow-UU-resource2-count 60)
(defconst escrow-UU-food-points 14)
(defconst escrow-UU-wood-points 0)
(defconst escrow-UU-gold-points 8)
#end-if

#load-if-not-defined INCAN-CIV
#load-if-not-defined INDIAN-CIV
#load-if-not-defined ITALIAN-CIV
#load-if-not-defined MAGYAR-CIV
#load-if-not-defined SLAVIC-CIV
(defconst my-UU 0)
(defconst my-elite-UU 0)
#end-if
#end-if
#end-if
#end-if
#end-if

; ============= SOME ADAPTION TO MAP

(defconst SW-y 0)
(defconst SW-x 0)

#load-if-defined TINY-MAP
(defconst gv-preferred-trade-distance 120)
(defconst low-stone-mine-amount 10)
(defconst huge-stone-mine-amount 30)
(defconst high-fish-amount 35); To detect (hope) whether the map is water-heavy or not
(defconst average-fish-amount 18)
(defconst dtw-blind-attack-time 900); 70 years left - values are correct if there aren't any huns in the game

(defconst max-wolves-and-jaguars 14)
(defconst max-combined-wj 7)

(defconst N-y 120)
(defconst N-x 60)
(defconst NW-y 120)
(defconst NW-x 0)
(defconst W-y 60)
(defconst W-x 0)
(defconst S-y 0)
(defconst S-x 60)
(defconst SE-y 0)
(defconst SE-x 120)
(defconst E-y 60)
(defconst E-x 120)
(defconst NE-y 120)
(defconst NE-x 120)

(defconst migration-lerp-percent 10)

(defconst transport-time 30)
#else
(defconst transport-time 40)
#end-if
#load-if-defined SMALL-MAP
(defconst gv-preferred-trade-distance 144)
(defconst low-stone-mine-amount 15)
(defconst huge-stone-mine-amount 45)
(defconst high-fish-amount 50)
(defconst average-fish-amount 25)
(defconst dtw-blind-attack-time 850); 80 years left

(defconst max-wolves-and-jaguars 21)
(defconst max-combined-wj 10)

(defconst N-y 144)
(defconst N-x 72)
(defconst NW-y 144)
(defconst NW-x 0)
(defconst W-y 72)
(defconst W-x 0)
(defconst S-y 0)
(defconst S-x 72)
(defconst SE-y 0)
(defconst SE-x 144)
(defconst E-y 72)
(defconst E-x 144)
(defconst NE-y 144)
(defconst NE-x 144)

(defconst migration-lerp-percent 15)
#end-if
#load-if-defined MEDIUM-MAP
(defconst gv-preferred-trade-distance 168)
(defconst low-stone-mine-amount 20)
(defconst huge-stone-mine-amount 60)
(defconst high-fish-amount 60)
(defconst average-fish-amount 30)
(defconst dtw-blind-attack-time 800); 90 years left

(defconst max-wolves-and-jaguars 28)
(defconst max-combined-wj 14)

(defconst N-y 168)
(defconst N-x 84)
(defconst NW-y 168)
(defconst NW-x 0)
(defconst W-y 84)
(defconst W-x 0)
(defconst S-y 0)
(defconst S-x 84)
(defconst SE-y 0)
(defconst SE-x 168)
(defconst E-y 84)
(defconst E-x 168)
(defconst NE-y 168)
(defconst NE-x 168)

(defconst migration-lerp-percent 20)
#end-if
#load-if-defined NORMAL-MAP
(defconst gv-preferred-trade-distance 200)
(defconst low-stone-mine-amount 30)
(defconst huge-stone-mine-amount 90)
(defconst high-fish-amount 90)
(defconst average-fish-amount 45)
(defconst dtw-blind-attack-time 1250); 100 years left

(defconst max-wolves-and-jaguars 42)
(defconst max-combined-wj 21)

(defconst N-y 200)
(defconst N-x 100)
(defconst NW-y 200)
(defconst NW-x 0)
(defconst W-y 100)
(defconst W-x 0)
(defconst S-y 0)
(defconst S-x 100)
(defconst SE-y 0)
(defconst SE-x 200)
(defconst E-y 100)
(defconst E-x 200)
(defconst NE-y 200)
(defconst NE-x 200)

(defconst migration-lerp-percent 25)
#end-if
#load-if-defined LARGE-MAP
(defconst gv-preferred-trade-distance 220)
(defconst low-stone-mine-amount 40)
(defconst huge-stone-mine-amount 120)
(defconst high-fish-amount 120)
(defconst average-fish-amount 60)
(defconst dtw-blind-attack-time 1450); 110 years left

(defconst max-wolves-and-jaguars 56)
(defconst max-combined-wj 28)

(defconst N-y 220)
(defconst N-x 110)
(defconst NW-y 220)
(defconst NW-x 0)
(defconst W-y 110)
(defconst W-x 0)
(defconst S-y 0)
(defconst S-x 110)
(defconst SE-y 0)
(defconst SE-x 220)
(defconst E-y 110)
(defconst E-x 220)
(defconst NE-y 220)
(defconst NE-x 220)

(defconst migration-lerp-percent 30)
#end-if
#load-if-defined GIANT-MAP
(defconst gv-preferred-trade-distance 240)
(defconst low-stone-mine-amount 50)
(defconst huge-stone-mine-amount 150)
(defconst high-fish-amount 150)
(defconst average-fish-amount 75)
(defconst dtw-blind-attack-time 1650); 120 years left

(defconst max-wolves-and-jaguars 70)
(defconst max-combined-wj 35)

(defconst N-y 240)
(defconst N-x 120)
(defconst NW-y 240)
(defconst NW-x 0)
(defconst W-y 120)
(defconst W-x 0)
(defconst S-y 0)
(defconst S-x 120)
(defconst SE-y 0)
(defconst SE-x 240)
(defconst E-y 120)
(defconst E-x 240)
(defconst NE-y 240)
(defconst NE-x 240)

(defconst migration-lerp-percent 35)
#end-if

#load-if-not-defined DIFFICULTY-HARDEST

#load-if-not-defined REGICIDE
(defconst relative-gt-900 900)
(defconst relative-gt-1200 1200)
(defconst relative-gt-1500 1500)
(defconst relative-gt-1800 1800)
(defconst relative-gt-2100 2100)
(defconst relative-gt-2500 2500)
(defconst relative-gt-3000 3000)
(defconst relative-gt-3600 3600)
(defconst relative-gt-4500 4500)

(defconst relative-gt-multiplier 1)
(defconst relative-gt-divider 1)
#else
(defconst relative-gt-900 700)
(defconst relative-gt-1200 950)
(defconst relative-gt-1500 1150)
(defconst relative-gt-1800 1400)
(defconst relative-gt-2100 1700)
(defconst relative-gt-2500 2000)
(defconst relative-gt-3000 2400)
(defconst relative-gt-3600 3000)
(defconst relative-gt-4500 4000)

(defconst relative-gt-multiplier 5)
(defconst relative-gt-divider 4)
#end-if
#else
#load-if-not-defined REGICIDE
(defconst relative-gt-900 500)
(defconst relative-gt-1200 800)
(defconst relative-gt-1500 1100)
(defconst relative-gt-1800 1400)
(defconst relative-gt-2100 1700)
(defconst relative-gt-2500 2100)
(defconst relative-gt-3000 2500)
(defconst relative-gt-3600 3000)
(defconst relative-gt-4500 4000)

(defconst relative-gt-multiplier 5)
(defconst relative-gt-divider 4)
#else
(defconst relative-gt-900 300)
(defconst relative-gt-1200 650)
(defconst relative-gt-1500 850)
(defconst relative-gt-1800 1000)
(defconst relative-gt-2100 1300)
(defconst relative-gt-2500 1600)
(defconst relative-gt-3000 1900)
(defconst relative-gt-3600 2400)
(defconst relative-gt-4500 3600)

(defconst relative-gt-multiplier 3)
(defconst relative-gt-divider 2)
#end-if

#end-if

#load-if-not-defined UP-MICHI-STYLE
(defconst extra-gold-to-buy-castle 3500)
(defconst extra-market-time 2700)
(defconst extra-market-pop 170)
(defconst defensive-technology-time 3000)
(defconst boar-hunt-support-villagers 10)
#else
(defconst extra-gold-to-buy-castle 10000)
(defconst extra-market-time 1800)
(defconst extra-market-pop 130)
(defconst defensive-technology-time 2300)
(defconst boar-hunt-support-villagers 12)
#end-if

#load-if-not-defined POPULATION-CAP-EXTENDED
(defconst min-full-pop-current-age-time 60)

#load-if-defined POPULATION-CAP-25
(defconst absolute-villager-cap 24)
(defconst preferred-TC-number 1)
(defconst imperial-villager-cap 16)
(defconst almost-full-pop 20)
(defconst full-pop 25)
(defconst pop-to-full-pop-attack 25)
(defconst pop-to-stop-full-pop-attack 20)
(defconst max-carts 2)
(defconst max-ti-carts 1)
(defconst medium-army-rams 3)
(defconst large-army-rams 3)
(defconst max-cannons 2)
#end-if

#load-if-defined POPULATION-CAP-50
(defconst absolute-villager-cap 45)
(defconst preferred-TC-number 2)
(defconst imperial-villager-cap 32)
(defconst almost-full-pop 40)
(defconst full-pop 50)
(defconst pop-to-full-pop-attack 47)
(defconst pop-to-stop-full-pop-attack 44)
(defconst max-carts 7)
(defconst max-ti-carts 7)
(defconst medium-army-rams 4)
(defconst large-army-rams 4)
(defconst max-cannons 3)
#end-if

#load-if-defined POPULATION-CAP-75
(defconst imperial-villager-cap 45)
(defconst absolute-villager-cap 60)
(defconst preferred-TC-number 2)
(defconst almost-full-pop 65)
(defconst full-pop 75)
(defconst pop-to-full-pop-attack 70)
(defconst pop-to-stop-full-pop-attack 65)
(defconst max-carts 7)
(defconst max-ti-carts 5)
(defconst medium-army-rams 5)
(defconst large-army-rams 5)
(defconst max-cannons 4)
#end-if

#load-if-defined POPULATION-CAP-100
(defconst almost-full-pop 85)
(defconst pop-to-full-pop-attack 95)
(defconst pop-to-stop-full-pop-attack 85)
(defconst max-carts 13)
(defconst max-ti-carts 10)
(defconst medium-army-rams 5)
(defconst large-army-rams 7)
(defconst max-cannons 5)
(defconst imperial-villager-cap 60)
(defconst absolute-villager-cap 75)
(defconst preferred-TC-number 3)
(defconst full-pop 100)
#end-if


#load-if-defined POPULATION-CAP-125
(defconst almost-full-pop 110)
(defconst pop-to-full-pop-attack 117)
(defconst pop-to-stop-full-pop-attack 105)
(defconst max-carts 15)
(defconst max-ti-carts 12)
(defconst medium-army-rams 6)
(defconst large-army-rams 8)
(defconst max-cannons 6)
(defconst imperial-villager-cap 70)
(defconst absolute-villager-cap 90)
(defconst preferred-TC-number 3)
(defconst full-pop 125)
#end-if

#load-if-defined POPULATION-CAP-150
(defconst almost-full-pop 135)
(defconst pop-to-full-pop-attack 141)
(defconst pop-to-stop-full-pop-attack 126)
(defconst max-carts 26)
(defconst max-ti-carts 22)
(defconst medium-army-rams 7)
(defconst large-army-rams 9)
(defconst max-cannons 7)
(defconst imperial-villager-cap 80)
(defconst absolute-villager-cap 110)
(defconst preferred-TC-number 4)
(defconst full-pop 150)
#end-if

#load-if-defined POPULATION-CAP-175
(defconst almost-full-pop 155)
(defconst pop-to-full-pop-attack 165)
(defconst pop-to-stop-full-pop-attack 150)
(defconst max-carts 34)
(defconst max-ti-carts 26)
(defconst medium-army-rams 7)
(defconst large-army-rams 11)
(defconst max-cannons 9)
(defconst imperial-villager-cap 100)
(defconst absolute-villager-cap 120)
(defconst preferred-TC-number 4)
(defconst full-pop 175)
#end-if

#load-if-defined POPULATION-CAP-200
(defconst almost-full-pop 180)
(defconst pop-to-full-pop-attack 190)
(defconst pop-to-stop-full-pop-attack 175)
(defconst max-carts 40)
(defconst max-ti-carts 30)
(defconst medium-army-rams 8)
(defconst large-army-rams 14)
(defconst max-cannons 12)
(defconst imperial-villager-cap 1000)
(defconst absolute-villager-cap 1000)
(defconst preferred-TC-number 4)
(defconst full-pop 200)
#end-if
#else
(defconst imperial-villager-cap 1000)
(defconst absolute-villager-cap 1000)
(defconst min-full-pop-current-age-time 360)
(defconst preferred-TC-number 4)
#load-if-defined POPULATION-CAP-225
(defconst almost-full-pop 200)
(defconst pop-to-full-pop-attack 210)
(defconst pop-to-stop-full-pop-attack 195)
(defconst max-carts 45)
(defconst max-ti-carts 35)
(defconst medium-army-rams 8)
(defconst large-army-rams 16)
(defconst max-cannons 14)
(defconst full-pop 225)
#end-if
#load-if-defined POPULATION-CAP-250
(defconst almost-full-pop 225)
(defconst pop-to-full-pop-attack 235)
(defconst pop-to-stop-full-pop-attack 205)
(defconst max-carts 50)
(defconst max-ti-carts 40)
(defconst medium-army-rams 8)
(defconst large-army-rams 20)
(defconst max-cannons 16)
(defconst full-pop 250)
#end-if
#end-if

#load-if-defined POPULATION-CAP-EXTENDED
#load-if-not-defined POPULATION-CAP-225
#load-if-not-defined POPULATION-CAP-250; Unknown pop cap that is >250, play it as 275
(defconst full-pop 275)
(defconst almost-full-pop 265)
(defconst pop-to-full-pop-attack 265)
(defconst pop-to-stop-full-pop-attack 250)
(defconst max-carts 55)
(defconst max-ti-carts 40)
(defconst medium-army-rams 8)
(defconst large-army-rams 20)
(defconst max-cannons 20)
#end-if
#end-if
#end-if

#load-if-defined POPULATION-CAP-200
(defconst relative-2-units 2)
(defconst relative-3-units 3)
(defconst relative-4-units 4)
(defconst relative-5-units 5)
(defconst relative-6-units 6)
(defconst relative-10-units 10)
#else
(defconst relative-2-units 1)
(defconst relative-3-units 1)
(defconst relative-4-units 2)
(defconst relative-5-units 2)
(defconst relative-6-units 2)
(defconst relative-10-units 2)
#end-if

#load-if-defined UP-2-PLAYER-GAME
#load-if-defined UP-AZTEC-CIV-ENEMY
(defconst mush-resistance 100)
(defconst enemy-atonement-value 1)
(defconst dm-cavalry-threat-likelihood 0)
(defconst dm-infantry-threat-likelihood 1)
(defconst dm-archer-threat-likelihood 0)
(defconst dm-anti-archer-threat-likelihood 1)
(defconst dm-gunpowder-threat-likelihood 0)
(defconst dm-eagle-threat-likelihood 1)
#end-if
#load-if-defined UP-BRITON-CIV-ENEMY
(defconst mush-resistance 60)
(defconst enemy-atonement-value 0)
(defconst dm-cavalry-threat-likelihood 0)
(defconst dm-infantry-threat-likelihood 1)
(defconst dm-archer-threat-likelihood 1)
(defconst dm-anti-archer-threat-likelihood 0)
(defconst dm-gunpowder-threat-likelihood 0)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-BYZANTINE-CIV-ENEMY
(defconst mush-resistance 80)
(defconst enemy-atonement-value 1)
(defconst dm-cavalry-threat-likelihood 1)
(defconst dm-infantry-threat-likelihood 0)
(defconst dm-archer-threat-likelihood 1)
(defconst dm-anti-archer-threat-likelihood 1)
(defconst dm-gunpowder-threat-likelihood 1)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-CELTIC-CIV-ENEMY
(defconst mush-resistance 50)
(defconst enemy-atonement-value 0)
(defconst dm-cavalry-threat-likelihood 1)
(defconst dm-infantry-threat-likelihood 1)
(defconst dm-archer-threat-likelihood 1)
(defconst dm-anti-archer-threat-likelihood 1)
(defconst dm-gunpowder-threat-likelihood 0)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-CHINESE-CIV-ENEMY
(defconst mush-resistance 10)
(defconst enemy-atonement-value 1)
(defconst dm-cavalry-threat-likelihood 0)
(defconst dm-infantry-threat-likelihood 1)
(defconst dm-archer-threat-likelihood 1)
(defconst dm-anti-archer-threat-likelihood 1)
(defconst dm-gunpowder-threat-likelihood 0)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-FRANKISH-CIV-ENEMY
(defconst mush-resistance 40)
(defconst enemy-atonement-value 0)
(defconst dm-cavalry-threat-likelihood 1)
(defconst dm-infantry-threat-likelihood 0)
(defconst dm-archer-threat-likelihood 0)
(defconst dm-anti-archer-threat-likelihood 1)
(defconst dm-gunpowder-threat-likelihood 0)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-GOTHIC-CIV-ENEMY
(defconst mush-resistance 10)
(defconst enemy-atonement-value 0)
(defconst dm-cavalry-threat-likelihood 0)
(defconst dm-infantry-threat-likelihood 1)
(defconst dm-archer-threat-likelihood 0)
(defconst dm-anti-archer-threat-likelihood 1)
(defconst dm-gunpowder-threat-likelihood 1)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-HUN-CIV-ENEMY
(defconst mush-resistance 90)
(defconst enemy-atonement-value 1)
(defconst dm-cavalry-threat-likelihood 1)
(defconst dm-infantry-threat-likelihood 0)
(defconst dm-archer-threat-likelihood 0)
(defconst dm-anti-archer-threat-likelihood 1)
(defconst dm-gunpowder-threat-likelihood 0)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-INCAN-CIV-ENEMY
(defconst mush-resistance 80)
(defconst enemy-atonement-value 0)
(defconst dm-cavalry-threat-likelihood 0)
(defconst dm-infantry-threat-likelihood 1)
(defconst dm-archer-threat-likelihood 1)
(defconst dm-anti-archer-threat-likelihood 1)
(defconst dm-gunpowder-threat-likelihood 0)
(defconst dm-eagle-threat-likelihood 1)
#end-if
#load-if-defined UP-INDIAN-CIV-ENEMY
(defconst mush-resistance 5)
(defconst enemy-atonement-value 0)
(defconst dm-cavalry-threat-likelihood 1)
(defconst dm-infantry-threat-likelihood 0)
(defconst dm-archer-threat-likelihood 0)
(defconst dm-anti-archer-threat-likelihood 1)
(defconst dm-gunpowder-threat-likelihood 1)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-ITALIAN-CIV-ENEMY
(defconst mush-resistance 60)
(defconst enemy-atonement-value 0)
(defconst dm-cavalry-threat-likelihood 0)
(defconst dm-infantry-threat-likelihood 1)
(defconst dm-archer-threat-likelihood 1)
(defconst dm-anti-archer-threat-likelihood 0)
(defconst dm-gunpowder-threat-likelihood 1)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-JAPANESE-CIV-ENEMY
(defconst mush-resistance 5)
(defconst enemy-atonement-value 1)
(defconst dm-cavalry-threat-likelihood 0)
(defconst dm-infantry-threat-likelihood 1)
(defconst dm-archer-threat-likelihood 1)
(defconst dm-anti-archer-threat-likelihood 0)
(defconst dm-gunpowder-threat-likelihood 1)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-KOREAN-CIV-ENEMY
(defconst mush-resistance 5)
(defconst enemy-atonement-value 0)
(defconst dm-cavalry-threat-likelihood 0)
(defconst dm-infantry-threat-likelihood 1)
(defconst dm-archer-threat-likelihood 1)
(defconst dm-anti-archer-threat-likelihood 0)
(defconst dm-gunpowder-threat-likelihood 1)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-MAGYAR-CIV-ENEMY
(defconst mush-resistance 90)
(defconst enemy-atonement-value 0)
(defconst dm-cavalry-threat-likelihood 1)
(defconst dm-infantry-threat-likelihood 0)
(defconst dm-archer-threat-likelihood 0)
(defconst dm-anti-archer-threat-likelihood 1)
(defconst dm-gunpowder-threat-likelihood 0)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-MAYAN-CIV-ENEMY
(defconst mush-resistance 100)
(defconst enemy-atonement-value 1)
(defconst dm-cavalry-threat-likelihood 0)
(defconst dm-infantry-threat-likelihood 1)
(defconst dm-archer-threat-likelihood 1)
(defconst dm-anti-archer-threat-likelihood 1)
(defconst dm-gunpowder-threat-likelihood 0)
(defconst dm-eagle-threat-likelihood 1)
#end-if
#load-if-defined UP-MONGOL-CIV-ENEMY
(defconst mush-resistance 80)
(defconst enemy-atonement-value 0)
(defconst dm-cavalry-threat-likelihood 0)
(defconst dm-infantry-threat-likelihood 1)
(defconst dm-archer-threat-likelihood 1)
(defconst dm-anti-archer-threat-likelihood 0)
(defconst dm-gunpowder-threat-likelihood 0)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-PERSIAN-CIV-ENEMY
(defconst mush-resistance 5)
(defconst enemy-atonement-value 0)
(defconst dm-cavalry-threat-likelihood 1)
(defconst dm-infantry-threat-likelihood 0)
(defconst dm-archer-threat-likelihood 0)
(defconst dm-anti-archer-threat-likelihood 1)
(defconst dm-gunpowder-threat-likelihood 1)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-SARACEN-CIV-ENEMY
(defconst mush-resistance 80)
(defconst enemy-atonement-value 1)
(defconst dm-cavalry-threat-likelihood 1)
(defconst dm-infantry-threat-likelihood 0)
(defconst dm-archer-threat-likelihood 1)
(defconst dm-anti-archer-threat-likelihood 0)
(defconst dm-gunpowder-threat-likelihood 1)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-SLAVIC-CIV-ENEMY
(defconst mush-resistance 5)
(defconst enemy-atonement-value 1)
(defconst dm-cavalry-threat-likelihood 0)
(defconst dm-infantry-threat-likelihood 1)
(defconst dm-archer-threat-likelihood 0)
(defconst dm-anti-archer-threat-likelihood 1)
(defconst dm-gunpowder-threat-likelihood 0)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-SPANISH-CIV-ENEMY
(defconst mush-resistance 60)
(defconst enemy-atonement-value 1)
(defconst dm-cavalry-threat-likelihood 1)
(defconst dm-infantry-threat-likelihood 0)
(defconst dm-archer-threat-likelihood 0)
(defconst dm-anti-archer-threat-likelihood 1)
(defconst dm-gunpowder-threat-likelihood 1)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-TURKISH-CIV-ENEMY
(defconst mush-resistance 90)
(defconst enemy-atonement-value 1)
(defconst dm-cavalry-threat-likelihood 1)
(defconst dm-infantry-threat-likelihood 1)
(defconst dm-archer-threat-likelihood 0)
(defconst dm-anti-archer-threat-likelihood 0)
(defconst dm-gunpowder-threat-likelihood 1)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-TEUTONIC-CIV-ENEMY
(defconst mush-resistance 100)
(defconst enemy-atonement-value 1)
(defconst dm-cavalry-threat-likelihood 1)
(defconst dm-infantry-threat-likelihood 0)
(defconst dm-archer-threat-likelihood 0)
(defconst dm-anti-archer-threat-likelihood 1)
(defconst dm-gunpowder-threat-likelihood 1)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-VIKING-CIV-ENEMY
(defconst mush-resistance 70)
(defconst enemy-atonement-value 1)
(defconst dm-cavalry-threat-likelihood 0)
(defconst dm-infantry-threat-likelihood 1)
(defconst dm-archer-threat-likelihood 1)
(defconst dm-anti-archer-threat-likelihood 0)
(defconst dm-gunpowder-threat-likelihood 0)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#load-if-defined UP-ALLY-IN-GAME
(defconst mush-resistance 100)
(defconst enemy-atonement-value 1)
(defconst dm-cavalry-threat-likelihood 0)
(defconst dm-infantry-threat-likelihood 0)
(defconst dm-archer-threat-likelihood 0)
(defconst dm-anti-archer-threat-likelihood 0)
(defconst dm-gunpowder-threat-likelihood 0)
(defconst dm-eagle-threat-likelihood 0)
#end-if
#else
(defconst mush-resistance 0)
(defconst enemy-atonement-value 1)
(defconst dm-cavalry-threat-likelihood 0)
(defconst dm-infantry-threat-likelihood 0)
(defconst dm-archer-threat-likelihood 0)
(defconst dm-anti-archer-threat-likelihood 0)
(defconst dm-gunpowder-threat-likelihood 0)
(defconst dm-eagle-threat-likelihood 0)
#end-if

#load-if-defined AZTEC-CIV
(defconst mush-strength 100)
#end-if
#load-if-defined BRITON-CIV
(defconst mush-strength 60)
#end-if
#load-if-defined BYZANTINE-CIV
(defconst mush-strength 100)
#end-if
#load-if-defined CELTIC-CIV
(defconst mush-strength 30)
#end-if
#load-if-defined CHINESE-CIV
(defconst mush-strength 40)
#end-if
#load-if-defined FRANKISH-CIV
(defconst mush-strength 60)
#end-if
#load-if-defined GOTHIC-CIV
(defconst mush-strength 20)
#end-if
#load-if-defined HUN-CIV
(defconst mush-strength 0)
#end-if
#load-if-defined JAPANESE-CIV
(defconst mush-strength 100)
#end-if
#load-if-defined INCAN-CIV
(defconst mush-strength 30)
#end-if
#load-if-defined INDIAN-CIV
(defconst mush-strength 60)
#end-if
#load-if-defined ITALIAN-CIV
(defconst mush-strength 100)
#end-if
#load-if-defined KOREAN-CIV
(defconst mush-strength 60)
#end-if
#load-if-defined MAYAN-CIV
(defconst mush-strength 80)
#end-if
#load-if-defined MAGYAR-CIV
(defconst mush-strength 50)
#end-if
#load-if-defined MONGOL-CIV
(defconst mush-strength 0)
#end-if
#load-if-defined PERSIAN-CIV
(defconst mush-strength 5)
#end-if
#load-if-defined SARACEN-CIV
(defconst mush-strength 100)
#end-if
#load-if-defined SLAVIC-CIV
(defconst mush-strength 100)
#end-if
#load-if-defined SPANISH-CIV
(defconst mush-strength 100)
#end-if
#load-if-defined TURKISH-CIV
(defconst mush-strength 10)
#end-if
#load-if-defined TEUTONIC-CIV
(defconst mush-strength 100)
#end-if
#load-if-defined VIKING-CIV
(defconst mush-strength 40)
#end-if

#load-if-not-defined UP-HUMAN-IN-GAME
(defconst civilian-defense-value 1)
(defconst dm-high-scouts 10)
(defconst chat-recipient every-ally)
(defconst chance-for-wonder 35)
#else
(defconst civilian-defense-value 2)
(defconst dm-high-scouts 8)
(defconst chat-recipient my-player-number)
(defconst chance-for-wonder 80)
#end-if

(defconst wood-to-be-seen 30)
#load-if-defined UP-ALLY-IN-GAME
#load-if-defined KOREAN-CIV
(defconst extra-wood-to-be-seen 40)
#else
(defconst extra-wood-to-be-seen 30)
#end-if
(defconst min-lumber-time 6)
#else
(defconst extra-wood-to-be-seen 0)
(defconst min-lumber-time 10)
#end-if

#load-if-not-defined DEFEND-WONDER
#load-if-not-defined POST-IMPERIAL-AGE-START
(defconst zero-value 0); > 0 blacksmith
(defconst one-value 1); < 1 blacksmith
#else
(defconst zero-value -1); > -1 blacksmith -> always true since we don't need one
(defconst one-value 0)
#end-if
#else
(defconst zero-value -1)
(defconst one-value 0)
#end-if

#load-if-not-defined DIFFICULTY-HARDEST
#load-if-defined LOW-RESOURCES-START
(defconst no-sheep-mill-time 15)
#else
(defconst no-sheep-mill-time 60)
#end-if
#else
(defconst no-sheep-mill-time 60)
#end-if

#load-if-defined DEATH-MATCH
(defconst time-to-allow-blind-attack 60)
(defconst time-to-allow-villager-deleting 600)
(defconst time-to-allow-retargeting 600)
(defconst food-to-delete-75-extra-vill 3500)
(defconst wood-to-delete-75-extra-vill 3500)
(defconst gold-to-delete-75-extra-vill 2500)
(defconst food-to-delete-100-extra-vill 2000)
(defconst wood-to-delete-100-extra-vill 1700)
(defconst gold-to-delete-100-extra-vill 1700)
(defconst camp-raid-time 1800)
(defconst rule-jump-time 900)
(defconst default-food-drop-distance 0)
#else
(defconst time-to-allow-blind-attack 1200)
(defconst time-to-allow-villager-deleting 2100)
(defconst time-to-allow-retargeting 1500)
(defconst food-to-delete-75-extra-vill 2000)
(defconst wood-to-delete-75-extra-vill 2000)
(defconst gold-to-delete-75-extra-vill 1300)
(defconst food-to-delete-100-extra-vill 1700)
(defconst wood-to-delete-100-extra-vill 1300)
(defconst gold-to-delete-100-extra-vill 1000)
(defconst camp-raid-time 2700)
(defconst rule-jump-time 2100)
(defconst default-food-drop-distance 20)
#end-if

#load-if-defined DEFEND-WONDER
(defconst anti-wall-tsa-time 300)
(defconst wonder-outpost-pop 60)
(defconst mixed-map-navy-time 300)
(defconst backup-lumber-time 90)
#else
#load-if-not-defined REGICIDE
(defconst anti-wall-tsa-time 1300)
#else
(defconst anti-wall-tsa-time 1200)
#end-if
(defconst wonder-outpost-pop 150)
(defconst mixed-map-navy-time 1200)
(defconst backup-lumber-time 360)
#end-if

#load-if-defined UP-POCKET-POSITION
(defconst gv-scouting-type scout-mirror)
#else
#load-if-defined UP-ALLY-IN-GAME
(defconst gv-scouting-type scout-flank)
#else
(defconst gv-scouting-type scout-opposite)
#end-if
#end-if

#load-if-not-defined TURBO-RANDOM-MAP
#load-if-not-defined DIFFICULTY-HARDEST
#load-if-defined HIGH-RESOURCES-START
(defconst barracks-villagers 14)
#end-if
#load-if-defined MEDIUM-RESOURCES-START
(defconst barracks-villagers 21)
#end-if
#load-if-not-defined HIGH-RESOURCES-START
#load-if-not-defined MEDIUM-RESOURCES-START
(defconst barracks-villagers 26)
#end-if
#end-if
#else
(defconst barracks-villagers 14)
#end-if
#else
(defconst barracks-villagers 14)
#end-if

#load-if-defined DARK-AGE-START
(defconst gv-starting-age dark-age)
(defconst real-starting-age gv-dark)
(defconst gv-pre-age 0)
#end-if
#load-if-defined FEUDAL-AGE-START
(defconst gv-starting-age feudal-age)
(defconst real-starting-age gv-feudal)
(defconst gv-pre-age gv-dark-up)
#end-if
#load-if-defined CASTLE-AGE-START
(defconst gv-starting-age castle-age)
(defconst real-starting-age gv-castle)
(defconst gv-pre-age gv-feudal-up)
#end-if
#load-if-defined IMPERIAL-AGE-START
(defconst gv-starting-age imperial-age)
(defconst real-starting-age gv-imperial)
(defconst gv-pre-age gv-castle-up)
#end-if
#load-if-defined POST-IMPERIAL-AGE-START
(defconst gv-starting-age imperial-age)
(defconst real-starting-age gv-imperial)
(defconst gv-pre-age gv-castle-up)
#end-if

#load-if-not-defined MEDIUM-RESOURCES-START
#load-if-not-defined HIGH-RESOURCES-START
(defconst initial-flush-villagers 20)
(defconst initial-FC-villagers 27)
(defconst feudal-flush-up-villagers 1000); Use normal values
(defconst feudal-FC-up-villagers 1000)
#end-if
#end-if

#load-if-defined MEDIUM-RESOURCES-START
(defconst initial-flush-villagers 16)
(defconst initial-FC-villagers 24)
(defconst feudal-flush-up-villagers 26)
(defconst feudal-FC-up-villagers 22)
#end-if
#load-if-defined HIGH-RESOURCES-START
(defconst initial-FC-villagers 18)
(defconst feudal-flush-up-villagers 15)
(defconst feudal-FC-up-villagers 20)
#load-if-defined FEUDAL-AGE-START
(defconst initial-flush-villagers 13)
#else
(defconst initial-flush-villagers 10)
#end-if
#end-if

#load-if-not-defined AZTEC-CIV
#load-if-not-defined INCAN-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined TURKISH-CIV
(defconst rules-to-be-jumped 115)
#else
(defconst rules-to-be-jumped 105)
#end-if
#else
(defconst rules-to-be-jumped 95)
#end-if
#else
(defconst rules-to-be-jumped 95)
#end-if
#else
(defconst rules-to-be-jumped 95)
#end-if

#load-if-not-defined UP-GAME-AGE2-X2
(defconst gv-aofe-game 0)
(defconst aofe-value NO)
#else
(defconst gv-aofe-game 1)
(defconst aofe-value YES)
#end-if

#load-if-defined ARABIA-MAP
(defconst gv-max-loomless-boar-distance 21)
#else
(defconst gv-max-loomless-boar-distance 18)
#end-if

#load-if-defined FORTRESS-MAP
(defconst min-boar-distance -1)
(defconst max-boar-distance 40)
#else
#load-if-defined ISLANDS-MAP
(defconst min-boar-distance -1)
#else
(defconst min-boar-distance 40)
#end-if
(defconst max-boar-distance 110)
#end-if

#load-if-defined CUSTOM-MAP
(defconst water-home-exploring-time 300)
#else
(defconst water-home-exploring-time 450)
#end-if

#load-if-not-defined UP-GROUPED-BY-TEAM
(defconst gv-starting-mill-distance 30)
(defconst gv-grouped-by-team 0)
#else
(defconst gv-starting-mill-distance 10)
(defconst gv-grouped-by-team 1)
#end-if

#load-if-defined DARK-AGE-START
#load-if-not-defined DEATH-MATCH
(load-random 8 "Barbarian_2.0\Strategies\FIMONKTREB")
#end-if
#end-if

#load-if-not-defined UP-GAME-AGE2-X2
(defconst min-kboom-cpush-villagers 30)
#else
(defconst min-kboom-cpush-villagers 29)
#end-if

#load-if-not-defined UP-ALLY-IN-GAME
(defconst michi-TCs 6)
#else
(defconst michi-TCs 6); 5
#end-if

#load-if-defined UP-2-PLAYER-TEAM
(defconst gv-2-player-team 1)
(defconst position-required-to-help FLANK)
#else
(defconst gv-2-player-team 0)
(defconst position-required-to-help POCKET)
#end-if

#load-if-defined DIFFICULTY-EASIEST
(defconst difficulty-cart-cap 5)
(defconst difficulty-villager-cap 40)
(defconst relative-100-villagers 40)
(defconst feudal-up-villagers 22)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst difficulty-cart-cap 10)
(defconst difficulty-villager-cap 65)
(defconst relative-100-villagers 65)
(defconst feudal-up-villagers 25)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst difficulty-cart-cap 20)
(defconst difficulty-villager-cap 80)
(defconst relative-100-villagers 80)
(defconst feudal-up-villagers 1000)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst difficulty-cart-cap 1000)
(defconst difficulty-villager-cap 1000)
(defconst relative-100-villagers 100)
(defconst feudal-up-villagers 1000)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst difficulty-cart-cap 1000)
(defconst difficulty-villager-cap 1000)
(defconst relative-100-villagers 100)
(defconst feudal-up-villagers 1000)
#end-if

#load-if-defined UP-1-PLAYER-GAME
(defconst large-number-forage 12)
(defconst large-number-boar 3)
(defconst large-number-deer 7)
#end-if
#load-if-defined UP-2-PLAYER-GAME
(defconst large-number-forage 23)
(defconst large-number-boar 6)
(defconst large-number-deer 13)
#end-if
#load-if-defined UP-3-PLAYER-GAME
(defconst large-number-forage 35)
(defconst large-number-boar 9)
(defconst large-number-deer 20)
#end-if
#load-if-defined UP-4-PLAYER-GAME
(defconst large-number-forage 47)
(defconst large-number-boar 11)
(defconst large-number-deer 27)
#end-if
#load-if-defined UP-5-PLAYER-GAME
(defconst large-number-forage 59)
(defconst large-number-boar 14)
(defconst large-number-deer 35)
#end-if
#load-if-defined UP-6-PLAYER-GAME
(defconst large-number-forage 71)
(defconst large-number-boar 17)
(defconst large-number-deer 41)
#end-if
#load-if-defined UP-7-PLAYER-GAME
(defconst large-number-forage 83)
(defconst large-number-boar 20)
(defconst large-number-deer 48)
#end-if
#load-if-defined UP-8-PLAYER-GAME
(defconst large-number-forage 94)
(defconst large-number-boar 22)
(defconst large-number-deer 54)
#end-if

#load-if-defined UP-MULTIPLAYER-GAME
(defconst gv-multiplayer-game 1)
(defconst dm-placement-style 0); place-normal
#load-if-defined CHINESE-CIV
(defconst dm-starting-zone-size 7)
#else
(defconst dm-starting-zone-size 4)
#end-if
#else
(defconst gv-multiplayer-game 0)
(defconst dm-placement-style 2); place-control
#load-if-defined CHINESE-CIV
(defconst dm-starting-zone-size 5)
#else
(defconst dm-starting-zone-size 2)
#end-if
#end-if

#load-if-defined DARK-AGE-END
(defconst gv-maximum-age dark-age)
#end-if
#load-if-defined FEUDAL-AGE-END
(defconst gv-maximum-age feudal-age)
#end-if
#load-if-defined CASTLE-AGE-END
(defconst gv-maximum-age castle-age)
#end-if
#load-if-defined IMPERIAL-AGE-END
(defconst gv-maximum-age imperial-age)
#end-if

#load-if-defined DARK-AGE-END
(defconst gv-dark-age-end 1)
#else
(defconst gv-dark-age-end 0)
#end-if

#load-if-defined FEUDAL-AGE-END
(defconst gv-feudal-age-end 1)
#else
(defconst gv-feudal-age-end 0)
#end-if

#load-if-defined CASTLE-AGE-END
(defconst gv-castle-age-end 1)
#else
(defconst gv-castle-age-end 0)
#end-if

#load-if-defined IMPERIAL-AGE-END
(defconst gv-imperial-age-end 1)
#else
(defconst gv-imperial-age-end 0)
#end-if

#load-if-defined TURBO-RANDOM-MAP
(defconst gv-turborandom 1)
#else
(defconst gv-turborandom 0)
#end-if

#load-if-defined REGICIDE
(defconst gv-regicide 1)
#else
(defconst gv-regicide 0)
#end-if

#load-if-defined KING-OF-THE-HILL
(defconst victory-building 826); monument
(defconst outpost-distance 3)
#else
(defconst victory-building wonder)
(defconst outpost-distance 4)
#end-if

#load-if-defined UP-NOMAD-RESOURCES
(defconst gv-nomad-style 1)
#else
(defconst gv-nomad-style 0)
#end-if

#load-if-defined UP-MICHI-STYLE
(defconst gv-michi-style 1)
#else
(defconst gv-michi-style 0)
#end-if

#load-if-not-defined DEATH-MATCH
#load-if-not-defined HIGH-RESOURCES-START
(defconst castle-builders 5)
(defconst market-builders 2)
#else
(defconst castle-builders 1)
(defconst market-builders 2)
#end-if
#else
(defconst castle-builders 1)
(defconst market-builders 1)
#end-if

(load "Barbarian_2.0\DMConstants")

; ========== PERSONALITY

(load-random 
14 "Barbarian_2.0\Strategies\Personality\Set01"
14 "Barbarian_2.0\Strategies\Personality\Set02"
14 "Barbarian_2.0\Strategies\Personality\Set03"
14 "Barbarian_2.0\Strategies\Personality\Set04"
14 "Barbarian_2.0\Strategies\Personality\Set05"
15 "Barbarian_2.0\Strategies\Personality\Set06"
15 "Barbarian_2.0\Strategies\Personality\Set07"
)

(load "Barbarian_2.0/Resigning")

; ========== ATTEMPT REBUILDING BEHIND ALLIES

#load-if-not-defined WONDER-RACE
(defrule
	(up-compare-goal gl-town-center-placed < placed-to-ally)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(up-pending-objects c: town-center < 1)
	(building-type-count town-center == 1)
	(or	(population < 25)
		(and	(players-population focus-player > 140)
			(building-type-count castle == 0)))
	(population < 60)
	(stone-amount >= 100)
	(unit-type-count villager-wood > 1)
	(up-compare-goal gl-my-villager-count > 4)
	(up-enemy-units-in-town > 20)
=>
	(set-escrow-percentage wood 100)
)

(defrule
	(up-compare-goal gl-town-center-placed < placed-to-ally)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(building-type-count town-center > 0)
	(building-type-count town-center < 6)
	(population < 60)
	(or	(population < 30)
		(players-population focus-player > 90))
	(players-military-population any-ally > 15)
	(can-build-with-escrow town-center)
	(up-enemy-units-in-town > 20)
=>
	(release-escrow wood)
	(set-strategic-number sn-town-center-placement 0)
	(up-set-placement-data this-any-ally -1 c: -20)
	(up-build place-control 0 c: town-center)
	(set-goal gl-town-center-placed safe-TC)
)

(defrule
	(goal gl-town-center-placed safe-TC)
	(population < 20)
	(up-pending-objects c: town-center < 1)
	(building-type-count town-center == 1)
	(up-enemy-units-in-town < 5)
=>
	(up-delete-objects c: mill c: 32767)
	(set-goal gl-town-center-placed placed-to-ally); This results in deleting old camps etc.
	(set-goal gl-TC-lost YES)
	(set-goal gl-strategy default)
	(chat-to-player my-player-number "Attempting switching the town.")
	(chat-to-player chat-recipient "Attempting switching the town.")
	(disable-self)
)

#load-if-not-defined ARENA-MAP
#load-if-not-defined BLACK-FOREST-MAP
#load-if-not-defined YUCATAN-MAP
#load-if-not-defined FORTRESS-MAP
(defrule
	(building-type-count-total town-center < 1)
	(can-build-with-escrow town-center)
	(players-military-population any-ally > 35)
=>
	(set-strategic-number sn-maximum-town-size 255); Test
	(up-assign-builders c: town-center c: 100)
	(up-assign-builders c: unbuilt-town-center c: 100)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(release-escrow wood)
	(release-escrow stone)
	(set-strategic-number sn-town-center-placement 0)
	(up-set-placement-data this-any-ally -1 c: -30)
	(up-build place-control 0 c: town-center)
	(enable-timer 10 5)
	(set-goal gl-town-center-placed placed-to-ally)
)

(defrule
	(building-type-count-total town-center > 0)
	(building-type-count mill > 0)
	(building-type-count town-center < 1)
	(goal gl-town-center-placed placed-to-ally)
=>
	(up-delete-objects c: mill c: 32767)
)
#end-if
#end-if
#end-if
#end-if

(defrule
	(strategic-number sn-nomad-style-start == 1)
	(building-type-count-total town-center < 1)
	(can-build-with-escrow town-center)
	(game-time >= 600)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(release-escrow wood)
	(release-escrow stone)
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-build place-normal 0 c: town-center)
	(chat-to-player my-player-number "No town center - build new!")
	(enable-timer 10 5)
)

(defrule
	(game-time > 600)
	(not	(player-valid any-ally))
	(strategic-number sn-town-center-start == 1)
	(building-type-count-total town-center == 0)
	(up-compare-goal gl-strategy != default)
=>
	(set-goal gl-strategy default)
	(set-goal gl-strategy-type default)
	(set-goal gl-TC-lost YES)
	(set-goal gl-fixed-eco-balancing YES)
	(set-goal gl-required-current-age-time 60000)
	(enable-timer 1 0)
)

(defrule
	(building-type-count town-center > 0)
	(not	(goal gl-TC-lost YES))
=>
	(up-jump-rule 19)
)

(defrule
	(goal gl-TC-lost YES)
	(building-type-count town-center > 0)
	(goal gl-town-center-placed placed-to-ally)
	(strategic-number sn-maximum-gold-drop-distance == 31)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-get-point position-self gl-point-x)
	(up-set-target-point gl-point-x)
	(up-find-local c: villager-class c: 240)
	(up-target-point 0 action-stop -1 -1)
	(disable-self)
)

(defrule
	(goal gl-TC-lost YES)
	(building-type-count town-center > 0)
	(goal gl-town-center-placed placed-to-ally)
=>
	(up-delete-objects c: lumber-camp c: 32767)
	(up-delete-objects c: mining-camp c: 32767)
	(set-strategic-number sn-maximum-gold-drop-distance 31)
	(set-strategic-number sn-maximum-wood-drop-distance -1)
	(set-strategic-number sn-maximum-food-drop-distance 25)
	(set-strategic-number sn-maximum-hunt-drop-distance 40)
	(set-strategic-number sn-maximum-stone-drop-distance 30)
	(disable-self)
)

(defrule
	(goal gl-TC-lost YES)
	(building-type-count town-center == 0)
	(building-type-count-total town-center > 0)
=>
	(set-strategic-number sn-percent-building-cancellation 1)
)

(defrule
	(goal gl-TC-lost YES)
	(building-type-count-total town-center == 0)
	(building-type-count-total farm > 0)
=>
	(up-delete-objects c: farm c: 32767)
)

(defrule
	(building-type-count-total town-center == 0)
	(goal gl-TC-lost YES)
	(game-time > 600)
=>
	(set-escrow-percentage wood 100)
	(set-escrow-percentage stone 100)
)

(defrule
	(goal gl-TC-lost YES)
	(wood-amount < town-center-wood)
	(or	(and	(dropsite-min-distance wood > 3)
			(dropsite-min-distance wood < 255))
		(building-type-count-total lumber-camp == 0))
	(can-build-with-escrow lumber-camp)
=>
	(release-escrow wood)
	(build lumber-camp)
)

(defrule
	(goal gl-TC-lost YES)
	(current-age-time > 10)
	(stone-amount < 100)
	(dropsite-min-distance stone > 3)
	(dropsite-min-distance stone < 255)
	(can-build-with-escrow mining-camp)
=>
	(release-escrow wood)
	(build mining-camp)
)

(defrule
	(game-time > 600)
	(building-type-count-total town-center < 1)
	(wood-amount >= town-center-wood)
	(stone-amount >= 100)
=>
	(set-goal gl-TC-lost YES)
	(set-goal gl-fixed-eco-balancing YES)
	(set-goal gl-required-current-age-time 60000)
	(enable-timer 7 120)
	(enable-timer 14 120)
)

(defrule
	(game-time > 600)
	(building-type-count-total town-center < 1)
	(wood-amount < town-center-wood)
	(stone-amount < 100)
=>
	(set-strategic-number sn-food-gatherer-percentage 0)
	(set-strategic-number sn-wood-gatherer-percentage 90)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 10)
	(set-goal gl-TC-lost YES)
	(set-goal gl-fixed-eco-balancing YES)
	(set-goal gl-required-current-age-time 60000)
	(enable-timer 7 120)
	(enable-timer 14 120)
)

(defrule
	(game-time > 600)
	(building-type-count-total town-center < 1)
	(wood-amount >= town-center-wood)
	(stone-amount < 100)
=>
	(set-strategic-number sn-food-gatherer-percentage 0)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 70)
	(set-goal gl-TC-lost YES)
	(set-goal gl-fixed-eco-balancing YES)
	(set-goal gl-required-current-age-time 60000)
	(enable-timer 7 120)
	(enable-timer 14 120)
)

(defrule
	(game-time > 600)
	(building-type-count-total town-center < 1)
	(wood-amount < town-center-wood)
	(stone-amount >= 100)
=>
	(set-strategic-number sn-food-gatherer-percentage 0)
	(set-strategic-number sn-wood-gatherer-percentage 100)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(set-goal gl-TC-lost YES)
	(set-goal gl-fixed-eco-balancing YES)
	(set-goal gl-required-current-age-time 60000)
	(enable-timer 7 120)
	(enable-timer 14 120)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-TC-lost YES)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count-total < 8)
=>
	(set-strategic-number sn-food-gatherer-percentage 80)
	(set-strategic-number sn-wood-gatherer-percentage 20)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(up-assign-builders c: town-center c: 4)
	(up-assign-builders c: unbuilt-town-center c: 4)
	(enable-timer 7 120)
	(enable-timer 14 120)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-TC-lost YES)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count-total >= 8)
=>
	(set-strategic-number sn-food-gatherer-percentage 70)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(up-assign-builders c: town-center c: 4)
	(up-assign-builders c: unbuilt-town-center c: 4)
	(enable-timer 7 60)
	(enable-timer 14 60)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-TC-lost YES)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count-total >= 20)
	(up-compare-goal gl-current-age < gv-feudal-up)
=>
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(up-assign-builders c: town-center c: 4)
	(up-assign-builders c: unbuilt-town-center c: 4)
	(enable-timer 7 30)
	(enable-timer 14 30)
)

(defrule
	(game-time > 600)
	(players-current-age any-ally >= feudal-age)
	(building-type-count-total town-center == 0)
	(not	(taunt-detected my-player-number 99))
=>
	(set-goal gl-strategy default)
	(set-goal gl-strategy-type default)
	(set-goal SLING 0)
	(set-goal gl-TC-lost YES)
	(set-goal gl-fixed-eco-balancing YES)
	(set-goal gl-required-current-age-time 60000)
	(chat-to-allies "99No TC - help!")
	(chat-to-player my-player-number "99")
	(enable-timer 1 0)
)

(defrule
	(game-time > 600)
	(players-current-age any-ally >= feudal-age)
	(stone-amount < 100)
	(wood-amount >= town-center-wood)
	(up-compare-goal gl-my-villager-count > 0)
	(timer-triggered 1)
	(building-type-count-total town-center == 0)
=>
	(chat-to-allies "6Any stone for tc?")
	(chat-to-allies "106")
	(chat-to-allies "99")
	(enable-timer 1 44)
)

(defrule
	(game-time > 600)
	(players-current-age any-ally >= feudal-age)
	(wood-amount < town-center-wood)
	(up-compare-goal gl-my-villager-count > 0)
	(timer-triggered 1)
	(building-type-count-total town-center == 0)
=>
	(chat-to-allies "4Any wood for tc?")
	(chat-to-allies "104")
	(chat-to-allies "99")
	(enable-timer 1 44)
)

(defrule
	(building-type-count-total town-center > 0)
	(taunt-detected my-player-number 99)
	(not	(taunt-detected my-player-number 94))
=>
	(chat-to-allies "98I have tc now")
	(acknowledge-taunt my-player-number 99)
	(acknowledge-taunt my-player-number 98)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-TC-lost YES)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count-total >= 26)
	(or	(up-compare-goal gl-my-villager-count-total >= 30)
		(up-compare-goal gl-current-age >= gv-feudal-up))
=>
	(set-goal gl-TC-lost NO)
	(set-goal gl-fixed-eco-balancing NO)
	(set-goal gl-required-current-age-time 70)
	(up-assign-builders c: town-center c: 4)
	(up-assign-builders c: unbuilt-town-center c: 4)
	(enable-timer 7 10)
	(enable-timer 14 10)
	(set-strategic-number sn-maximum-wood-drop-distance 40)
)

; =============== CURRENT AGE

(defrule
	(up-compare-goal gl-lag-reducer > 0)
=>
	(up-modify-goal gl-lag-reducer c:- 1)
)

(defrule
	(game-time > 600)
	(or	(and	(building-type-count-total town-center == 0)
			(and	(up-compare-goal gl-my-villager-count > 0)
				(goal gl-TC-lost YES)))
		(and	(game-time > rule-jump-time)
			(up-compare-goal gl-lag-reducer <= 0)))
	(nand	(map-type migration)
		(up-compare-goal gl-migration-progress < 5))
=>
	(set-goal gl-lag-reducer 2)
	(up-jump-rule 10000)
)
#end-if

(defrule
	(goal gl-current-age gv-dark-up)
	(current-age == feudal-age)
=>
	(set-goal gl-current-age gv-feudal)
)

(defrule
	(goal gl-current-age gv-feudal-up)
	(current-age == castle-age)
=>
	(set-goal gl-current-age gv-castle)
)

(defrule
	(or	(and	(or	(goal gl-current-age gv-castle-up)
				(and	(goal gl-current-age gv-dark)
					(death-match-game)))
			(current-age == imperial-age))
		(and	(current-age == castle-age)
			(and	(population > 130)
				(up-compare-const gv-imperial-age-end == 0))))
=>
	(set-goal gl-current-age gv-imperial)
)

(defrule
	(goal gl-current-age gv-feudal-up)
	(current-age == dark-age)
	(up-research-status c: feudal-age <= research-available)
=>
	(set-goal gl-current-age gv-dark)
	(chat-to-player my-player-number "Feudal age research was disturbed")
)

(defrule
	(goal gl-current-age gv-castle-up)
	(current-age == feudal-age)
	(up-research-status c: castle-age <= research-available)
=>
	(set-goal gl-current-age gv-feudal)
	(chat-to-player my-player-number "Castle age research was disturbed")
)

(defrule
	(goal gl-current-age gv-dark-up)
	(current-age == castle-age)
	(up-research-status c: imperial-age <= research-available)
=>
	(set-goal gl-current-age gv-castle)
	(chat-to-player my-player-number "Imperial age research was disturbed")
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(not	(goal gl-strategy-type default))
	(goal gl-strategy-class basic-class)
=>
	(set-goal gl-strategy-type default)
)

(defrule
	(not	(player-in-game any-ally))
	(players-building-type-count every-ally market == 0)
	(unit-type-count trade-cart > 0)
=>
	(up-delete-objects c: trade-cart c: 32767)
)

(defrule
	(game-time < 10)
	(cc-players-unit-type-count 0 gold-mine == 0)
=>
	(set-goal gl-nothing-style-map YES)
	(set-goal gl-rush-suitability-on-map AVERAGE)
	(set-strategic-number sn-maximum-wood-drop-distance 15)
)

; =============== RETREATING AND TEAM GAMING

(defrule
	(true)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(set-goal gl-transport-time transport-time)
	(set-goal gl-camp-raid-time camp-raid-time)
	(set-strategic-number sn-livestock-defend-priority 1)
	(set-goal gl-boar-unit wild-boar)
	(set-goal gl-rescouting-time 2700)
	(set-goal gl-aofe-detected aofe-value)
	(set-goal gl-current-age gv-dark)
	(disable-self)
)

(defrule
	(cc-players-unit-type-count 0 javelina > 0)
=>
	(set-goal gl-boar-unit javelina)
	(disable-self)
)

(defrule
	(up-compare-goal gl-scattered-islets-style <= 0)
	(strategic-number sn-allow-adjacent-dropsites != 1)
	(up-pending-objects c: mining-camp == 0)
	(up-pending-objects c: mill == 0)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
)

(defrule
	(goal gl-fixed-target-player YES)
	(or	(and	(players-building-count target-player == 0)
			(and	(players-building-type-count target-player gate == 0)
				(and	(players-building-type-count target-player stone-wall-line == 0)
					(and	(players-building-type-count target-player palisade-wall == 0)
						(players-building-count any-enemy > 0)))))
		(and	(strategic-number sn-target-player-number > 0)
			(not	(player-valid target-player))))
=>
	(set-goal gl-fixed-target-player NO)
)

#load-if-defined VICTORY-STANDARD
(defrule
	(strategic-number sn-special-attack-influence3 != 20001)
	(players-building-type-count any-enemy wonder > 0)
=>
	(up-get-player-fact this-any-enemy player-number 0 temporary-goal)
	(up-modify-sn sn-target-player-number g:= temporary-goal)
	(set-goal gl-fixed-target-player YES)
	(set-strategic-number sn-safe-town-size 43)
	(set-strategic-number sn-special-attack-type3 1)
	(set-strategic-number sn-special-attack-influence3 20001)
	(enable-timer 23 6000)
)

(defrule
	(strategic-number sn-special-attack-influence3 == 20001)
	(or	(players-building-type-count target-player wonder == 0)
		(or	(up-timer-status 23 != timer-running)
			(goal gl-fixed-target-player NO)))
=>
	(set-strategic-number sn-special-attack-influence3 20000)
;	(chat-to-all "Target has no wonder!")
)

(defrule
	(goal gl-fixed-target-player YES)
	(players-building-type-count any-enemy wonder > 0)
	(players-building-count any-enemy > 0)
=>
	(up-find-player enemy find-closest gl-target-player)
	(up-modify-sn sn-focus-player-number g:= gl-target-player)
	(up-get-target-fact military-population 0 gl-toughest-fought-enemy-military)
)

(defrule
	(goal gl-fixed-target-player YES)
	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
	(players-building-type-count any-enemy wonder > 0)
	(players-building-count any-enemy > 0)
	(strategic-number sn-disable-attack-groups == 1)
=>
	(set-strategic-number sn-disable-attack-groups 0)
)

(defrule
	(or	(players-building-type-count target-player wonder > 0)
		(enemy-captured-relics))
=>
	(up-get-victory-data winning-player victory-type victory-time)
)

(defrule
	(goal gl-fixed-target-player YES)
	(up-compare-goal victory-time >= 0)
	(up-compare-goal victory-time < 750)
	(goal target-system siege)
	(or	(and	(up-building-type-in-town c: wonder == 0)
			(players-building-type-count target-player wonder > 0))
		(and	(enemy-captured-relics)
			(up-building-type-in-town c: monastery == 0)))
=>
	(set-strategic-number sn-maximum-town-size 254)
)

(defrule
	(enemy-captured-relics)
=>
	(up-modify-sn sn-focus-player-number g:= winning-player)
	(up-modify-sn sn-target-player-number g:= winning-player)
	(set-goal gl-fixed-target-player YES)
	(set-strategic-number sn-safe-town-size 43)
	(enable-timer 23 300)
)
#end-if

(defrule
	(goal gl-fixed-target-player NO)
	(or	(players-building-count any-enemy > 0)
		(or	(players-building-type-count any-enemy gate > 0)
			(or	(players-building-type-count any-enemy stone-wall-line > 0)
				(players-building-type-count any-enemy palisade-wall > 0))))
=>
	(up-find-player enemy find-closest gl-target-player)
	(up-modify-sn sn-focus-player-number g:= gl-target-player)
	(up-modify-sn sn-target-player-number g:= gl-target-player)
	(up-get-target-fact military-population 0 gl-toughest-fought-enemy-military)
	(up-get-target-fact player-distance 0 gl-distance-to-enemy)
)

(defrule
	(goal gl-fixed-target-player NO)
	(or	(nor	(up-projectile-detected projectile-castle < 15000)
			(or	(up-projectile-detected projectile-bombard-tower < 15000)
				(or	(and	(up-projectile-detected projectile-watch-tower < 15000)
						(game-time < 2100))
					(up-projectile-detected projectile-town-center < 15000))))
		(up-compare-goal target-system != siege))
=>
	(set-strategic-number sn-safe-town-size 45)
)

(defrule
	(goal gl-fixed-target-player NO)
	(goal target-system siege)
	(or	(up-projectile-detected projectile-castle < 15000)
		(or	(up-projectile-detected projectile-bombard-tower < 15000)
			(or	(and	(up-projectile-detected projectile-watch-tower < 15000)
					(up-building-type-in-town c: watch-tower == 0))
				(up-projectile-detected projectile-town-center < 15000))))
	(up-building-type-in-town c: bombard-tower == 0)
	(up-building-type-in-town c: castle == 0)
	(strategic-number sn-maximum-town-size s:> sn-safe-town-size)
=>
	(up-modify-sn sn-safe-town-size c:+ 5)
)

(defrule
	(players-building-type-count target-player dock == 0)
	(game-time < 2400)
	(goal gl-islands-style YES)
	(or	(goal gl-strategy grush)
		(or	(soldier-count < 2)
			(strategic-number sn-minimum-water-body-size-for-dock >= 1999)))
	(players-building-type-count any-enemy dock > 0)
	(up-compare-goal MILITARY >= 1)
	(up-building-type-in-town c: dock == 0)
=>
	(up-modify-sn sn-maximum-town-size c:+ 5)
	(up-modify-sn sn-safe-town-size s:= sn-maximum-town-size)
)

#load-if-defined UP-ALLY-IN-GAME
#load-if-not-defined UP-TEAM-DISADVANTAGE
#load-if-defined UP-MULTIPLE-ENEMIES
(defrule
	(or	(strategic-number sn-maximum-town-size < 70)
		(up-building-type-in-town c: town-center > 0))
	(players-building-type-count target-player town-center > 0)
	(strategic-number sn-maximum-town-size < 90)
	(up-building-type-in-town c: castle == 0)
	(up-building-type-in-town c: bombard-tower == 0)
	(up-building-type-in-town c: wall-class < 10)
=>
	(up-jump-rule 1)
)

(defrule
	(goal gl-fixed-target-player NO)
	(game-time > time-to-allow-retargeting); 600 in DM, otherwise 1500
	(or	(players-building-type-count target-player town-center == 0)
		(players-population target-player < 20))
	(players-population target-player < 30)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(players-population any-enemy >= 40)
	(players-building-count any-enemy > 0)
=>
	(up-find-player enemy find-closest gl-target-player)
	(up-find-next-player enemy find-closest gl-target-player)
	(up-modify-sn sn-focus-player-number g:= gl-target-player)
	(up-modify-sn sn-target-player-number g:= gl-target-player)
	(set-goal gl-fixed-target-player YES)
	(set-goal gl-original-target-weak YES)
	(enable-timer 23 600); Focus atleast next 10min on the stronger enemy
)
#end-if
#end-if
#end-if

#load-if-not-defined DEATH-MATCH
(defrule
	(goal gl-fixed-target-player NO)
	(goal gl-current-age gv-feudal)
	(goal POSITION POCKET)
	(goal gl-strategy scrush)
=>
	(up-find-player enemy find-closest gl-target-player)
	(up-find-next-player enemy find-closest gl-target-player)
	(up-modify-sn sn-focus-player-number g:= gl-target-player)
	(up-modify-sn sn-target-player-number g:= gl-target-player)
	(set-goal gl-fixed-target-player YES)
	(enable-timer 23 180)
)

(defrule
	(goal gl-fixed-target-player NO)
	(goal gl-current-age gv-feudal)
	(goal POSITION POCKET)
	(goal gl-strategy scrush)
	(not	(player-valid target-player))
=>
	(up-find-player enemy find-closest gl-target-player)
	(up-modify-sn sn-focus-player-number g:= gl-target-player)
	(up-modify-sn sn-target-player-number g:= gl-target-player)
	(set-goal gl-fixed-target-player YES)
	(enable-timer 23 180)
)

(defrule
	(goal gl-fixed-target-player NO)
	(goal gl-current-age gv-feudal)
	(up-compare-goal gl-strategy-type <= controlled-flush)
	(goal gl-rush-suitability-on-map GOOD)
	(up-timer-status 7 == timer-running)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(or	(players-building-type-count target-player watch-tower > 0)
		(players-building-type-count target-player castle > 0))
	(up-projectile-detected projectile-fortification < 1500000)
=>
	(up-find-player enemy find-closest gl-target-player)
	(up-find-next-player enemy find-closest gl-target-player)
	(up-modify-sn sn-focus-player-number g:= gl-target-player)
	(up-modify-sn sn-target-player-number g:= gl-target-player)
	(set-goal gl-fixed-target-player YES)
	(enable-timer 23 180)
)

(defrule
	(or	(strategic-number sn-maximum-town-size >= 254)
		(goal gl-fixed-target-player NO))
	(or	(and	(players-population target-player < 30)
			(and	(players-building-type-count target-player town-center == 0)
				(players-population any-enemy >= 40)))
		(not	(player-in-game target-player)))
	(players-building-count any-enemy > 0)
=>
	(up-find-player enemy find-closest gl-target-player)
	(up-find-next-player enemy find-closest gl-target-player)
	(up-modify-sn sn-focus-player-number g:= gl-target-player)
	(up-modify-sn sn-target-player-number g:= gl-target-player)
)

(defrule
	(goal gl-fixed-target-player NO)
	(or	(players-population target-player < 20)
		(and	(goal gl-islands-style YES)
			(and	(players-building-type-count target-player dock == 0)
				(players-building-type-count any-enemy dock > 0))))
	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
	(players-unit-type-count target-player galley-line < 4)
	(players-building-count any-enemy > 0)
	(players-population any-enemy >= 40)
=>
	(up-find-player enemy find-closest gl-target-player)
	(up-find-next-player enemy find-closest gl-target-player)
	(up-modify-sn sn-focus-player-number g:= gl-target-player)
	(up-modify-sn sn-target-player-number g:= gl-target-player)
)
#else
(defrule
	(game-time > 900)
	(goal gl-fixed-target-player NO)
	(or	(and	(players-population target-player < 30)
			(and	(players-building-type-count target-player town-center == 0)
				(players-population any-enemy >= 40)))
		(not	(player-in-game target-player)))
	(players-building-count any-enemy > 0)
=>
	(up-find-player enemy find-closest gl-target-player)
	(up-find-next-player enemy find-closest gl-target-player)
	(up-modify-sn sn-focus-player-number g:= gl-target-player)
	(up-modify-sn sn-target-player-number g:= gl-target-player)
)

(defrule
	(game-time > 600)
	(goal gl-fixed-target-player NO)
	(or	(players-population target-player < 20)
		(and	(goal gl-islands-style YES)
			(and	(players-building-type-count target-player dock == 0)
				(players-building-type-count any-enemy dock > 0))))
	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
	(players-building-count any-enemy > 0)
	(players-population any-enemy >= 40)
=>
	(up-find-player enemy find-closest gl-target-player)
	(up-find-next-player enemy find-closest gl-target-player)
	(up-modify-sn sn-focus-player-number g:= gl-target-player)
	(up-modify-sn sn-target-player-number g:= gl-target-player)
)
#end-if

(defrule
	(true)
=>
	(set-strategic-number sn-sheep-count 0)
	(set-goal gl-ENEMY-DISTANCE UNKNOWN)
	(set-goal gl-sheep-counter-low 0)
	(set-goal gl-sheep-delta 0)
	(set-goal gl-number-sheep 0)
	(set-goal gl-FC-type gv-wheelbarrow)
	(set-strategic-number sn-town-center-start 1)
	(set-strategic-number sn-start-with-forage 1)
	(set-strategic-number sn-nomad-style-start 0)
	(set-goal gl-normal-milling 1)
	(set-goal gl-villagers-to-start-boar-hunt 900)
	(set-strategic-number sn-placement-zone-size 0)
	(set-goal gl-enemy-human-rating GOOD)
	(chat-to-player my-player-number "241")
	(disable-self)
)

(defrule
	(true)
=>
	(up-get-threat-data threat-time threat-player threat-source threat-target)
	(up-find-player enemy find-attacker gl-enemy-attacker)
	(up-get-fact military-population 0 gl-my-soldier-count)
	(up-modify-goal gl-my-soldier-count c:* 4)
	(up-modify-goal gl-my-soldier-count c:/ 5)
	(up-modify-goal gl-my-soldier-count c:- 2)
	(up-get-player-fact my-player-number unit-type-count sheep gl-number-sheep)
	(set-goal gl-strategy-class basic-class)
	(up-get-fact resource-amount amount-relics gl-gathered-relics)
	(set-goal gl-safe-to-assist-ally NO)
	(set-goal gl-increased-town-size-level 0)
	(set-goal gl-enemy-wall-count-total 0)
	(set-strategic-number sn-free-siege-targeting siege-targeting-treb-value); Trebs shoot units; spanish cannon galleons will target units too
	(up-get-point position-self gl-position-self-x)
	(set-goal gl-town-under-attack 0)
)

(defrule
	(game-time > 30)
=>
	(up-modify-goal gl-max-farm-distance s:= sn-maximum-food-drop-distance)
	(up-modify-goal gl-max-farm-distance c:+ 1)
	(up-delete-distant-farms c:= 60); We've probably run and there are bugged leftover farms -> delete
	(set-goal gl-safe-in-town NO)
)

#load-if-defined UP-POCKET-POSITION
(defrule
	(population > 180)
	(population > almost-full-pop)
=>
	(set-goal gl-safe-in-town 95)
)
#end-if

(defrule
	(game-time > 30)
	(idle-farm-count > 0)
	(nand	(strategic-number sn-defer-dropsite-update == 1)
		(or	(up-pending-objects c: mill > 0)
			(up-pending-objects c: town-center > 0)))
	(strategic-number sn-maximum-food-drop-distance > 0)
=>
	(up-delete-distant-farms g:= gl-max-farm-distance)
)

(defrule
	(or	(up-projectile-detected projectile-castle < 5000)
		(or	(up-projectile-detected projectile-bombard-tower < 5000)
			(and	(players-building-type-count any-enemy wonder > 0)
				(victory-condition standard))))
=>
	(set-strategic-number sn-free-siege-targeting siege-targeting-default-value); Trebs shoot only buildings
	(set-goal gl-allow-retreating-to-treb YES)
)

(defrule
	(nor	(up-projectile-detected projectile-castle < 15000)
		(up-projectile-detected projectile-bombard-tower < 15000))
=>
	(set-goal gl-allow-retreating-to-treb NO)
)

(defrule
	(up-compare-goal gl-strategy != default)
	(up-compare-goal gl-strategy != knight-archer)
	(up-compare-goal gl-strategy != CA-boom)
	(up-compare-goal gl-strategy != xbow-boom)
	(up-compare-goal gl-strategy != boom)
	(up-compare-goal gl-strategy != castle-drop)
	(up-compare-goal gl-strategy != krush)
	(up-compare-goal gl-strategy != michi-boom)
	(up-compare-goal gl-strategy != skirm-boom)
=>
	(set-goal gl-strategy-class special-class)
)

(defrule
	(game-time < 1400)
	(up-compare-goal gl-number-sheep g:> gl-sheep-counter-low)
	(dropsite-min-distance sheep < 30)
	(building-type-count town-center > 0)
=>
	(up-modify-goal gl-sheep-delta g:= gl-number-sheep)
	(up-modify-goal gl-sheep-delta g:- gl-sheep-counter-low)
	(up-modify-goal gl-sheep-counter-low g:= gl-number-sheep)
	(up-modify-sn sn-sheep-count g:+ gl-sheep-delta)
	(set-goal gl-sheep-delta 0)
)

(defrule
	(game-time < 1400)
	(up-compare-goal gl-number-sheep g:< gl-sheep-counter-low)
=>
	(up-modify-goal gl-sheep-counter-low g:= gl-number-sheep)
)

(defrule
	(goal gl-assisting-ally NO)
=>
	(up-modify-goal saved-threat-level s:= sn-threat-level)
)

(defrule
	(or	(unit-type-count-total 369 > 0)
		(unit-type-count-total 468 > 0)); Mangonels firing
=>
	(enable-timer 32 25)
)

(defrule
	(up-timer-status 22 == timer-disabled)
	(goal gl-fixed-target-player NO)
	(up-compare-goal gl-enemy-attacker >= 1)
=>
	(up-modify-sn sn-focus-player-number g:= gl-enemy-attacker)
	(up-get-focus-fact military-population 0 gl-enemy-assist-military)
)

(defrule
	(up-timer-status 22 == timer-disabled)
	(goal gl-fixed-target-player NO)
	(up-compare-goal gl-target-player >= 1)
=>
	(up-modify-sn sn-focus-player-number g:= gl-target-player)
)

(defrule
	(up-timer-status 22 == timer-disabled)
	(or	(goal gl-fixed-target-player NO)
		(players-building-type-count any-enemy wonder > 0))
	(up-compare-goal threat-time < 30000)
	(up-compare-goal gl-target-player g:!= gl-enemy-attacker)
	(up-compare-goal gl-enemy-attacker != my-player-number)
	(up-compare-goal gl-enemy-assist-military g:> gl-toughest-fought-enemy-military)
	(up-compare-goal gl-enemy-attacker >= 1)
=>
	(up-modify-sn sn-focus-player-number g:= gl-enemy-attacker)
	(up-modify-goal gl-toughest-fought-enemy-military g:= gl-enemy-assist-military)
	(up-chat-data-to-player chat-recipient "My focus player is %d" s: sn-focus-player-number)
	(up-chat-data-to-player my-player-number "My focus player is %d" s: sn-focus-player-number)
	(enable-timer 22 30)
)

(defrule
	(up-timer-status 22 != timer-disabled)
	(or	(goal gl-fixed-target-player NO)
		(players-building-type-count any-enemy wonder > 0))
	(up-compare-goal gl-enemy-attacker != my-player-number)
=>
	(up-modify-sn sn-focus-player-number g:= gl-enemy-attacker)
	(up-get-target-fact military-population 0 gl-target-soldier-count)
	(up-get-focus-fact military-population 0 gl-enemy-assist-military)
	(up-modify-goal gl-toughest-fought-enemy-military g:= gl-enemy-assist-military)
)

(defrule
	(up-timer-status 22 != timer-disabled)
	(or	(goal gl-fixed-target-player NO)
		(players-building-type-count any-enemy wonder > 0))
	(up-compare-goal gl-enemy-attacker != my-player-number)
	(or	(up-compare-goal gl-target-soldier-count g:> gl-enemy-assist-military)
		(stance-toward focus-player ally))
=>
	(up-modify-sn sn-focus-player-number g:= gl-target-player)
	(up-modify-goal gl-toughest-fought-enemy-military g:= gl-target-soldier-count)
)

(defrule
	(or	(and	(up-timer-status 22 != timer-disabled)
			(and	(goal gl-fixed-target-player YES)
				(players-building-type-count every-enemy wonder == 0)))
		(timer-triggered 22))
=>
	(disable-timer 22)
)

(defrule
	(goal TSA 0)
	(strategic-number sn-target-player-number > 0)
	(up-compare-goal 391 g:!= gl-target-player)
	(players-building-count any-enemy > 0)
=>
	(up-modify-goal 391 g:= gl-target-player)
	(up-chat-data-to-player every-ally "My target is player %d" s: sn-target-player-number)
	(up-chat-data-to-player my-player-number "My target is player %d" s: sn-target-player-number)
)

(defrule
	(up-compare-goal TSA >= 1)
	(strategic-number sn-target-player-number > 0)
	(up-compare-goal 391 g:!= gl-target-player)
	(players-building-count any-enemy > 0)
=>
	(up-get-target-fact player-distance 0 gl-distance-to-enemy)
	(up-modify-goal gl-distance-to-enemy c:- 10)
	(up-modify-sn sn-maximum-town-size g:= gl-distance-to-enemy); Reset TSA when switching target since we may have way too high TS to fight efficiently against the new opponent
	(up-modify-goal 391 g:= gl-target-player)
	(up-chat-data-to-player every-ally "My target is player %d" s: sn-target-player-number)
	(up-chat-data-to-player my-player-number "My target is player %d" s: sn-target-player-number)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(strategic-number sn-number-attack-groups == 11); Trying to help an ally
	(strategic-number sn-target-player-number != -1)
=>
	(set-strategic-number sn-target-player-number -1)
	(set-strategic-number sn-disable-attack-groups 0)
)

(defrule
	(or	(goal MILITARY 1)
		(up-compare-goal TSA >= 1))
	(not	(goal gl-attack-in-progress 1)); Goal 392
=>
	(set-goal gl-attack-in-progress 1)
)

(defrule
	(nor	(goal MILITARY 1)
		(up-compare-goal TSA >= 1))
	(not	(goal gl-attack-in-progress 0))
=>
	(set-goal gl-attack-in-progress 0)
)

(defrule
	(up-timer-status 34 == timer-disabled)
	(players-current-age focus-player < imperial-age)
	(strategic-number sn-threat-level == -4)
	(up-compare-goal saved-threat-level != -4)
=>
	(set-goal saved-threat-level -4)
)

(defrule
	(or	(players-current-age focus-player == imperial-age)
		(players-current-age target-player == imperial-age))
	(up-compare-goal saved-threat-level < -2)
=>
	(set-goal saved-threat-level -2)
)

(defrule
	(goal gl-assisting-ally YES)
=>
	(set-goal gl-assisting-ally RESET)
	(up-modify-sn sn-threat-level g:= saved-threat-level)
)

(defrule
	(player-valid any-human-enemy)
	(or	(map-type black-forest)
		(or	(map-type oasis)
			(map-type mongolia)))
	(not	(death-match-game))
	(game-time < 2400)
	(strategic-number sn-allow-resource-spending < 6)
	(or	(players-building-type-count target-player stone-wall-line > 0)
		(players-unit-type-count target-player mangonel-line > 0))
=>
	(up-jump-rule 1)
	(set-strategic-number sn-threat-level 2)
)

(defrule
	(or	(or	(and	(players-military-population target-player < 40)
				(military-population > 48))
			(or	(and	(players-military-population target-player < 27)
					(military-population > 34))
				(players-military-population target-player < 20)))
		(or	(up-compare-goal threat-time > 8000)
			(or	(up-compare-goal gl-enemy-attacker g:== gl-target-player)
				(strategic-number sn-allow-resource-spending > 5))))
=>
	(set-goal gl-safe-to-assist-ally YES)
)

(defrule
	(not	(goal gl-safe-to-assist-ally YES))
=>
	(up-jump-rule 4)
)

(defrule
	(goal gl-safe-to-assist-ally YES)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 1)
)

(defrule
	(player-valid focus-player)
	(stance-toward focus-player ally)
	(strategic-number sn-focus-player-number != my-player-number)
	(up-allied-sn focus-player sn-target-player-number s:== sn-target-player-number)
	(up-allied-goal focus-player 392 == 1)
	(nand	(players-current-age target-player == imperial-age)
		(current-age < imperial-age))
	(goal gl-safe-to-assist-ally YES)
	(strategic-number sn-target-player-number > 0)
	(strategic-number sn-threat-level > -5); -4
=>
	(set-strategic-number sn-threat-level -4); -3
	(set-goal gl-assisting-ally YES)
)

(defrule
	(up-compare-goal gl-assisting-ally != YES)
	(goal gl-safe-to-assist-ally YES)
	(player-valid focus-player)
	(strategic-number sn-focus-player-number < 8)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2)
)

(defrule
	(goal gl-safe-to-assist-ally YES)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
)

#load-if-not-defined DEATH-MATCH
#load-if-not-defined BLACK-FOREST-MAP
#load-if-not-defined OASIS-MAP
#load-if-defined UP-POCKET-POSITION
(defrule
	(game-time > 3000)
=>
	(up-jump-rule 5)
)

(defrule
	(goal gl-assisting-ally YES)
	(game-time < 2100)
	(goal MILITARY 1)
=>
	(up-get-target-fact player-distance 0 gl-distance-to-enemy)
	(up-modify-goal gl-distance-to-enemy c:- 8)
)

(defrule
	(goal gl-assisting-ally YES)
	(game-time < 2100)
	(goal MILITARY 1)
	(strategic-number sn-maximum-town-size g:< gl-distance-to-enemy)
=>
	(up-modify-sn sn-maximum-town-size g:= gl-distance-to-enemy)
	(up-modify-goal gl-distance-to-enemy c:+ 8)
)

(defrule
	(goal MILITARY 0)
	(goal gl-retargeting YES)
	(not	(up-allied-goal any-computer-ally gl-attack-in-progress == 1))
=>
	(set-goal gl-fixed-target-player NO)
	(set-goal gl-retargeting NO)
	(disable-timer 23)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock != 998)
=>
	(up-jump-rule 1)
)

(defrule
	(goal MILITARY 0)
	(goal gl-fixed-target-player NO)
	(game-time < 2300)
	(strategic-number sn-threat-level > -4)
	(up-compare-goal gl-strategy-aggressiveness-level >= LOW)
	(up-compare-goal threat-time > 10000)
	(goal gl-rush-suitability-on-map GOOD)
	(up-allied-goal any-computer-ally gl-attack-in-progress == 1)
=>
	(up-get-player-fact this-any-computer-ally allied-sn sn-target-player-number temporary-goal)
	(up-modify-sn sn-target-player-number g:= temporary-goal)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
	(set-goal gl-fixed-target-player YES)
	(set-goal gl-retargeting YES)
	(chat-to-player my-player-number "Trying to assist ally by retargeting")
	(enable-timer 23 360)
	(enable-timer 7 0)
)
#end-if
#end-if
#end-if
#end-if
(defrule
	(or	(death-match-game)
		(and	(goal gl-strategy default)
			(strategic-number sn-allow-resource-spending > 5)))
	(strategic-number sn-target-player-number > 0)
	(goal MILITARY 1)
=>
	(up-get-target-fact player-distance 0 gl-distance-to-enemy)
	(up-modify-goal gl-distance-to-enemy c:- 8)
)

(defrule
	(or	(death-match-game)
		(and	(goal gl-strategy default)
			(strategic-number sn-allow-resource-spending > 5)))
	(strategic-number sn-target-player-number > 0)
	(goal MILITARY 1)
	(strategic-number sn-maximum-town-size g:< gl-distance-to-enemy)
=>
	(up-modify-sn sn-maximum-town-size g:= gl-distance-to-enemy)
	(up-modify-goal gl-distance-to-enemy c:+ 8)
)

(defrule
	(or	(timer-triggered 23)
		(and	(up-timer-status 23 != timer-running)
			(taunt-detected my-player-number 177)))
=>
	(acknowledge-taunt every-ally 231)
	(acknowledge-taunt every-ally 232)
	(acknowledge-taunt every-ally 233)
	(acknowledge-taunt every-ally 234)
	(acknowledge-taunt every-ally 235)
	(acknowledge-taunt every-ally 236)
	(acknowledge-taunt every-ally 237)
	(acknowledge-taunt every-ally 238)
	(set-goal gl-fixed-target-player NO)
	(acknowledge-taunt my-player-number 177)
	(disable-timer 23)
)

#load-if-not-defined UP-HUMAN-IN-GAME
(defrule
	(not	(taunt-detected any-ally 254))
=>
	(up-jump-rule 8)
)

(defrule
	(taunt-detected any-ally 231)
	(taunt-detected any-ally 254)
	(strategic-number sn-target-player-number == 1)
	(strategic-number sn-threat-level > -2)
=>
	(set-strategic-number sn-threat-level -1)
	(set-goal gl-assisting-ally YES)
	(enable-timer 23 240)
)

(defrule
	(taunt-detected any-ally 232)
	(taunt-detected any-ally 254)
	(strategic-number sn-target-player-number == 2)
	(strategic-number sn-threat-level > -2)
=>
	(set-strategic-number sn-threat-level -1)
	(set-goal gl-assisting-ally YES)
	(enable-timer 23 240)
)

(defrule
	(taunt-detected any-ally 233)
	(taunt-detected any-ally 254)
	(strategic-number sn-target-player-number == 3)
	(strategic-number sn-threat-level > -2)
=>
	(set-strategic-number sn-threat-level -1)
	(set-goal gl-assisting-ally YES)
	(enable-timer 23 240)
)

(defrule
	(taunt-detected any-ally 234)
	(taunt-detected any-ally 254)
	(strategic-number sn-target-player-number == 4)
	(strategic-number sn-threat-level > -2)
=>
	(set-strategic-number sn-threat-level -1)
	(set-goal gl-assisting-ally YES)
	(enable-timer 23 240)
)

(defrule
	(taunt-detected any-ally 235)
	(taunt-detected any-ally 254)
	(strategic-number sn-target-player-number == 5)
	(strategic-number sn-threat-level > -2)
=>
	(set-strategic-number sn-threat-level -1)
	(set-goal gl-assisting-ally YES)
	(enable-timer 23 240)
)

(defrule
	(taunt-detected any-ally 236)
	(taunt-detected any-ally 254)
	(strategic-number sn-target-player-number == 6)
	(strategic-number sn-threat-level > -2)
=>
	(set-strategic-number sn-threat-level -1)
	(set-goal gl-assisting-ally YES)
	(enable-timer 23 240)
)

(defrule
	(taunt-detected any-ally 237)
	(taunt-detected any-ally 254)
	(strategic-number sn-target-player-number == 7)
	(strategic-number sn-threat-level > -2)
=>
	(set-strategic-number sn-threat-level -1)
	(set-goal gl-assisting-ally YES)
	(enable-timer 23 240)
)

(defrule
	(taunt-detected any-ally 238)
	(taunt-detected any-ally 254)
	(strategic-number sn-target-player-number == 8)
	(strategic-number sn-threat-level > -2)
=>
	(set-strategic-number sn-threat-level -1)
	(set-goal gl-assisting-ally YES)
	(enable-timer 23 240)
)
#load-if-not-defined CUSTOM-MAP
#load-if-not-defined ARCHIPELAGO-MAP
#load-if-not-defined BALTIC-MAP
#load-if-not-defined COASTAL-MAP
#load-if-not-defined CONTINENTAL-MAP
#load-if-not-defined CRATER-LAKE-MAP
#load-if-not-defined HIGHLAND-MAP
#load-if-not-defined ISLANDS-MAP
#load-if-not-defined MEDITERRANEAN-MAP
#load-if-not-defined MIGRATION-MAP
#load-if-not-defined NOMAD-MAP
#load-if-not-defined RIVERS-MAP
#load-if-not-defined SALT-MARSH-MAP
#load-if-not-defined SCANDANAVIA-MAP
#load-if-not-defined TEAM-ISLANDS-MAP
#load-if-not-defined YUCATAN-MAP
#load-if-not-defined OASIS-MAP
#load-if-not-defined UP-NOMAD-STYLE
(defrule
	(or	(and	(up-compare-goal POSITION != POCKET)
			(and	(player-valid 5)
				(goal SLING 0)))
		(or	(game-time <= 1200)
			(or	(game-time >= 2370)
				(or	(up-compare-goal gl-rush-suitability-on-map != GOOD)
					(or	(goal FFA YES)
						(goal gl-strategy sling))))))
=>
	(up-jump-rule 8)
)

(defrule
	(goal gl-enemy-sling 10)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 1)
)

(defrule
	(players-building-type-count focus-player watch-tower < 4)
	(game-time < 2000)
	(players-current-age focus-player == feudal-age)
	(players-military-population focus-player < 2)
	(goal gl-enemy-sling 10)
	(players-building-count focus-player > 0)
	(stance-toward focus-player enemy)
	(up-compare-goal gl-strategy-aggressiveness-level >= LOW)
	(soldier-count > 5)
	(players-population focus-player > 22)
=>
	(up-modify-goal gl-enemy-sling s:= sn-focus-player-number)
	(chat-to-allies "1Possible sling detected!")
)

(defrule
	(goal gl-enemy-sling 10)
	(strategic-number sn-focus-player-number < 8)
	(player-valid focus-player)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2)
)

(defrule
	(goal gl-enemy-sling 10)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
)

(defrule
	(up-compare-goal gl-enemy-sling != 10)
	(up-compare-goal gl-enemy-sling > 0)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
	(disable-self)
)

(defrule
	(game-time < 2000)
	(up-compare-goal gl-enemy-sling > 0)
	(up-compare-goal gl-enemy-sling <= 8)
	(up-compare-goal threat-time > 15000)
	(soldier-count > 5)
	(up-compare-goal gl-strategy-aggressiveness-level >= LOW)
=>
	(enable-timer 23 660)
	(up-modify-sn sn-target-player-number g:= gl-enemy-sling)
	(up-modify-sn sn-focus-player-number g:= gl-enemy-sling)
	(set-strategic-number sn-safe-town-size 44)
	(set-goal gl-fixed-target-player YES)
	(set-goal gl-assisting-ally YES)
	(up-chat-data-to-player every-ally "1Trying to kill the sling: %d" g: gl-enemy-sling)
	(up-chat-data-to-player my-player-number "1Trying to kill the sling: %d" g: gl-enemy-sling)
	(disable-self)
)

(defrule
	(game-time < 2000)
	(goal MILITARY 1)
	(strategic-number sn-safe-town-size == 44)
	(up-compare-goal gl-enemy-sling > 0)
	(up-compare-goal gl-enemy-sling <= 8)
	(strategic-number sn-target-player-number g:== gl-enemy-sling)
	(up-allied-sn every-ally sn-target-player-number g:!= gl-enemy-sling)
=>
	(up-get-target-fact player-distance 0 gl-distance-to-enemy)
	(up-modify-sn sn-maximum-town-size g:= gl-distance-to-enemy)
	(up-modify-sn sn-maximum-town-size c:- 8)
	(disable-self)
)

(defrule
	(up-timer-status 23 == timer-running)
	(strategic-number sn-safe-town-size == 44)
	(up-compare-goal gl-enemy-sling > 0)
	(up-compare-goal gl-enemy-sling <= 8)
	(or	(players-current-age target-player >= castle-age)
		(players-building-type-count target-player watch-tower > 3))
=>
	(enable-timer 23 0)
	(set-goal gl-enemy-sling 0)
	(disable-self)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#else
(defrule
	(nor	(taunt-detected any-human-ally 231)
		(or	(taunt-detected any-human-ally 232)
			(or	(taunt-detected any-human-ally 233)
				(or	(taunt-detected any-human-ally 234)
					(or	(taunt-detected any-human-ally 235)
						(or	(taunt-detected any-human-ally 236)
							(or	(taunt-detected any-human-ally 237)
								(taunt-detected any-human-ally 238))))))))
=>
	(up-jump-rule 8)
)

(defrule
	(taunt-detected any-human-ally 231)
	(nor	(stance-toward 1 ally)
		(player-number 1))
	(players-building-count 1 > 0)
=>
	(acknowledge-taunt every-ally 231)
	(enable-timer 23 600)
	(set-strategic-number sn-target-player-number 1)
	(set-strategic-number sn-focus-player-number 1)
	(set-strategic-number sn-safe-town-size 45)
	(set-goal gl-fixed-target-player YES)
	(chat-to-player my-player-number "177")
	(chat-to-allies "My new target is player 1.")
)

(defrule
	(taunt-detected any-human-ally 232)
	(nor	(stance-toward 2 ally)
		(player-number 2))
	(players-building-count 2 > 0)
=>
	(acknowledge-taunt every-ally 232)
	(enable-timer 23 600)
	(set-strategic-number sn-target-player-number 2)
	(set-strategic-number sn-focus-player-number 2)
	(set-strategic-number sn-safe-town-size 45)
	(set-goal gl-fixed-target-player YES)
	(chat-to-player my-player-number "177")
	(chat-to-allies "My new target is player 2.")
)

(defrule
	(taunt-detected any-human-ally 233)
	(nor	(stance-toward 3 ally)
		(player-number 3))
	(players-building-count 3 > 0)
=>
	(acknowledge-taunt every-ally 233)
	(enable-timer 23 600)
	(set-strategic-number sn-target-player-number 3)
	(set-strategic-number sn-focus-player-number 3)
	(set-strategic-number sn-safe-town-size 45)
	(set-goal gl-fixed-target-player YES)
	(chat-to-player my-player-number "177")
	(chat-to-allies "My new target is player 3.")
)

(defrule
	(taunt-detected any-human-ally 234)
	(nor	(stance-toward 4 ally)
		(player-number 4))
	(players-building-count 4 > 0)
=>
	(acknowledge-taunt every-ally 234)
	(enable-timer 23 600)
	(set-strategic-number sn-target-player-number 4)
	(set-strategic-number sn-focus-player-number 4)
	(set-strategic-number sn-safe-town-size 45)
	(set-goal gl-fixed-target-player YES)
	(chat-to-player my-player-number "177")
	(chat-to-allies "My new target is player 4.")
)

(defrule
	(taunt-detected any-human-ally 235)
	(nor	(stance-toward 5 ally)
		(player-number 5))
	(players-building-count 5 > 0)
=>
	(acknowledge-taunt every-ally 235)
	(enable-timer 23 600)
	(set-strategic-number sn-target-player-number 5)
	(set-strategic-number sn-focus-player-number 5)
	(set-strategic-number sn-safe-town-size 45)
	(set-goal gl-fixed-target-player YES)
	(chat-to-player my-player-number "177")
	(chat-to-allies "My new target is player 5.")
)

(defrule
	(taunt-detected any-human-ally 236)
	(nor	(stance-toward 6 ally)
		(player-number 6))
	(players-building-count 6 > 0)
=>
	(acknowledge-taunt every-ally 236)
	(enable-timer 23 600)
	(set-strategic-number sn-target-player-number 6)
	(set-strategic-number sn-focus-player-number 6)
	(set-strategic-number sn-safe-town-size 45)
	(set-goal gl-fixed-target-player YES)
	(chat-to-player my-player-number "177")
	(chat-to-allies "My new target is player 6.")
)

(defrule
	(taunt-detected any-human-ally 237)
	(nor	(stance-toward 7 ally)
		(player-number 7))
	(players-building-count 7 > 0)
=>
	(acknowledge-taunt every-ally 237)
	(enable-timer 23 600)
	(set-strategic-number sn-target-player-number 7)
	(set-strategic-number sn-focus-player-number 7)
	(set-strategic-number sn-safe-town-size 45)
	(set-goal gl-fixed-target-player YES)
	(chat-to-player my-player-number "177")
	(chat-to-allies "My new target is player 7.")
)

(defrule
	(taunt-detected any-human-ally 238)
	(nor	(stance-toward 8 ally)
		(player-number 8))
	(players-building-count 8 > 0)
=>
	(acknowledge-taunt every-ally 238)
	(enable-timer 23 600)
	(set-strategic-number sn-target-player-number 8)
	(set-strategic-number sn-focus-player-number 8)
	(set-strategic-number sn-safe-town-size 45)
	(set-goal gl-fixed-target-player YES)
	(chat-to-player my-player-number "177")
	(chat-to-allies "My new target is player 8.")
)
#end-if

(defrule
	(goal gl-assisting-ally RESET)
=>
	(up-modify-sn sn-threat-level g:= saved-threat-level)
	(set-goal gl-assisting-ally NO)
)

#load-if-not-defined UP-ALLY-IN-GAME
(defrule
	(game-time > 10)
=>
	(set-goal POSITION FLANK)
	(disable-self)
)
#load-if-not-defined UP-MICHI-STYLE
#load-if-not-defined UP-2-PLAYER-GAME
#load-if-not-defined UP-3-PLAYER-GAME
(defrule
	(game-time > 10)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
=>
	(set-goal POSITION POCKET)
	(set-goal FFA YES)
	(disable-self)
)

#load-if-not-defined UP-TEAM-DISADVANTAGE
(defrule
	(game-time > 40)
	(game-time < 50)
	(nor	(goal gl-eew-strategy-type boom)
		(or	(goal gl-strategy castle-drop)
			(or	(goal gl-strategy monk-scorpion-boom)
				(goal gl-strategy monk-boom))))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
=>
	(set-goal gl-strategy ffa-strategy)
	(set-goal gl-strategy-type FC2)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-strategic-number sn-home-exploration-time 480)
	(disable-self)
)
#else
(defrule
	(game-time > 40)
	(game-time < 50)
	(nor	(goal gl-eew-strategy-type boom)
		(or	(goal gl-strategy castle-drop)
			(or	(goal gl-strategy monk-scorpion-boom)
				(goal gl-strategy monk-boom))))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
=>
	(set-goal gl-strategy ffa-strategy)
	(set-goal gl-strategy-type FC2)
	(set-goal gl-handicap YES)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-strategic-number sn-home-exploration-time 480)
	(disable-self)
)
#end-if

#end-if
#end-if
#end-if
#end-if

#load-if-not-defined UP-TEAM-DISADVANTAGE
#load-if-not-defined UP-MULTIPLE-ENEMIES
#load-if-not-defined UP-1-PLAYER-TEAM
(defrule
	(difficulty <= hard)
=>
	(set-goal gl-x-vs-one-challenge YES)
	(disable-self)
)
#end-if
#end-if
#end-if

(defrule
	(game-time > 120)
=>
	(up-jump-rule 5)
)

(defrule
	(game-time > 25)
	(game-time < 35)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(or	(building-type-count-total palisade-wall > 0)
		(or	(building-type-count-total watch-tower > 1)
			(or	(building-type-count-total town-center > 1)
				(and	(or	(map-type black-forest)
						(map-type oasis))
					(player-valid any-human-enemy)))))
=>
	(set-goal gl-rush-suitability-on-map VERY-LOW)
	(disable-self)
)

(defrule
	(game-time > 25)
	(game-time < 35)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(or	(map-type mongolia)
		(and	(nor	(map-type nomad)
				(building-type-count-total town-center > 0)); LN
			(strategic-number sn-nomad-style-start == 1)))
	(player-valid any-human-enemy)
=>
	(set-goal gl-rush-suitability-on-map LOW)
	(disable-self)
)

(defrule
	(game-time > 25)
	(game-time < 35)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(or	(building-type-count-total stone-wall-line > 0)
		(or	(building-type-count-total bombard-tower > 0)
			(or	(building-type-count-total castle > 0)
				(players-building-type-count any-ally stone-wall-line > 0)))); Some maps may start with surrounding ally walls
=>
	(set-goal gl-rush-suitability-on-map VERY-LOW)
	(disable-self)
)

(defrule
	(up-compare-goal gl-strategy != grush)
	(strategic-number sn-target-evaluation-hitpoints == 0)
	(game-time > 25)
	(game-time < 35)
	(goal gl-current-age gv-dark)
	(goal SLING 0)
	(or	(and	(goal gl-rush-suitability-on-map LOW)
			(goal gl-strategy-aggressiveness-level HIGH))
		(and	(goal gl-rush-suitability-on-map VERY-LOW)
			(up-compare-goal gl-strategy-aggressiveness-level >= AVERAGE)))
=>
	(set-goal gl-strategy regicide-strategy)
	(set-goal gl-strategy-type FC2)
	(set-goal gl-strategy-aggressiveness-level LOW)
)

(defrule
	(goal gl-rush-suitability-on-map VERY-LOW)
	(or	(game-time > 90)
		(not	(player-in-game any-ally)))
=>
	(set-goal POSITION POCKET); Play booming maps like pocket
	(disable-self)
)

#load-if-not-defined AZTEC-CIV
#load-if-not-defined BYZANTINE-CIV
#load-if-not-defined CELTIC-CIV
#load-if-not-defined FRANKISH-CIV
#load-if-not-defined HUN-CIV
#load-if-not-defined INCAN-CIV
#load-if-not-defined INDIAN-CIV
#load-if-not-defined JAPANESE-CIV
#load-if-not-defined KOREAN-CIV
#load-if-not-defined MAGYAR-CIV
#load-if-not-defined PERSIAN-CIV
#load-if-not-defined SARACEN-CIV
#load-if-not-defined TEUTONIC-CIV
#load-if-not-defined TURKISH-CIV
#load-if-not-defined VIKING-CIV
#load-if-defined UP-POCKET-POSITION
(defrule
	(goal gl-strategy castle-drop)
	(game-time > 35)
	(game-time < 45)
	(goal gl-rush-suitability-on-map GOOD)
	(goal gl-strategy-aggressiveness-level LOW)
=>
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(disable-self)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if

#load-if-defined UP-MICHI-STYLE
(defrule
	(game-time < 35)
=>
	(set-goal gl-disable-mining-upgrades YES)
	(set-goal gl-strategy michi-boom)
	(set-goal gl-strategy-type FC)
	(set-goal gl-strategy-aggressiveness-level VERY-LOW)
	(set-goal gl-rush-suitability-on-map VERY-LOW)
	(set-goal gl-FC-type gv-wheelbarrow)
	(set-goal gl-loomless-boar-hunting YES)
	(set-strategic-number sn-target-evaluation-hitpoints 1)
	(set-goal gl-michi-boom-villagers michi-boom-vills)
	(set-strategic-number sn-home-exploration-time 600)
)
#end-if

#load-if-defined DEFEND-WONDER
(defrule
	(or	(strategic-number sn-allow-resource-spending < 6)
		(strategic-number sn-skip-first-mining-camp == 1))
=>
	(set-strategic-number sn-allow-resource-spending 6)
	(set-strategic-number sn-skip-first-mining-camp 0)
)

(defrule
	(game-time > 25)
	(game-time < 35)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
=>
	(set-goal gl-strategy backup-strategy)
	(set-goal gl-strategy-type FC2)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(disable-self)
)

#load-if-defined UP-HUMAN-IN-GAME
(load-random 20 "Barbarian_2.0\WonderAssault")
#end-if

#load-if-not-defined GOTHIC-CIV
(defrule
	(or	(civilian-population > 30)
		(starting-resources > low-resources))
	(or	(civilian-population > 19)
		(starting-resources == high-resources))
	(civilian-population > 15)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1999)
=>
	(set-goal gl-strategy default)
	(set-goal gl-current-age gv-imperial)
	(set-goal gl-advanced-infantry DTW-ADVANCED-INFANTRY)
	(set-goal gl-advanced-archery DTW-ADVANCED-ARCHERY)
	(set-goal gl-advanced-cavalry DTW-ADVANCED-CAVALRY)
	(set-goal CASTLE DTW-CASTLE)
)
#else
(defrule
	(or	(civilian-population > 30)
		(starting-resources > low-resources))
	(or	(civilian-population > 19)
		(starting-resources == high-resources))
	(civilian-population > 15)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1999)
=>
	(set-goal gl-strategy default)
	(set-goal gl-current-age gv-imperial)
)
#end-if

(defrule
	(civilian-population > 30)
	(strategic-number sn-minimum-water-body-size-for-dock == 2001)
=>
	(set-goal DOCK 2)
	(set-goal gl-strategy watermap-fc)
	(set-goal gl-current-age gv-imperial)
	(disable-self)
)
#end-if

#load-if-defined TURBO-RANDOM-MAP
(defrule
	(game-time > 25)
	(game-time < 35)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(or	(up-compare-goal gl-strategy <= controlled-flush)
		(or	(goal gl-strategy xbow-rush)
			(goal gl-strategy CA-rush)))
=>
	(set-goal gl-strategy backup-strategy)
	(set-goal gl-strategy-type FC2)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(disable-self)
)
#end-if

(defrule
	(game-time > 25)
	(game-time < 35)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(goal gl-current-age gv-dark)
	(building-type-count-total castle > 0)
	(building-type-count-total stone-wall-line == 0)
	(up-compare-goal gl-strategy != fi-monk-rush)
	(up-compare-goal gl-strategy != krush)
	(up-compare-goal gl-strategy != spanish-vill-rush)
	(up-compare-goal gl-strategy != castle-drop)
	(up-compare-goal gl-strategy != monk-scorpion-boom)
	(up-compare-goal gl-strategy != jaguar-boom)
=>
	(set-goal gl-strategy regicide-strategy)
	(set-goal gl-strategy-type FC2)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(disable-self)
)

(defrule
	(game-time > 25)
	(game-time < 35)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(goal gl-current-age gv-dark)
	(building-type-count-total castle > 0)
	(building-type-count-total stone-wall-line > 0)
	(up-compare-goal gl-strategy != fi-monk-rush)
	(up-compare-goal gl-strategy != krush)
	(up-compare-goal gl-strategy != spanish-vill-rush)
	(up-compare-goal gl-strategy != castle-drop)
	(up-compare-goal gl-strategy != monk-scorpion-boom)
	(up-compare-goal gl-strategy != jaguar-boom)
=>
	(set-goal gl-strategy rf-strategy)
	(set-goal gl-strategy-type FC2)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(disable-self)
)

#load-if-not-defined DARK-AGE-END
#load-if-not-defined TURBO-RANDOM-MAP
#load-if-defined LOW-RESOURCES-START
#load-if-defined UP-2-PLAYER-GAME
#load-if-not-defined UP-HUMAN-IN-GAME
(defrule
	(goal POSITION FLANK)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(strategic-number sn-focus-player-number > 0)
	(goal gl-current-age gv-dark)
	(current-age == dark-age)
	(game-time > 300)
	(building-type-count-total town-center == 1)
	(players-current-age focus-player == dark-age)
	(players-military-population any-enemy > 1)
	(building-type-count-total stone-wall-line < 1)
	(nand	(player-valid 3)
		(players-building-count any-enemy == 0))
=>
	(set-goal gl-enemy-strategy FLUSH)
	(chat-to-player my-player-number "1Possible enemy flush detected!")
	(disable-self)
)

(defrule
	(goal POSITION FLANK)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(goal gl-current-age gv-dark)
	(current-age == dark-age)
	(strategic-number sn-focus-player-number > 0)
	(players-current-age focus-player == dark-age)
	(players-civilian-population focus-player g:>= gl-enemy-flush-vills)
	(players-civilian-population focus-player < 29)
=>
	(enable-timer 5 30)
	(up-modify-goal gl-enemy-flush-vills c:+ 1)
)

(defrule
	(goal POSITION FLANK)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(goal gl-current-age gv-dark)
	(current-age == dark-age)
	(strategic-number sn-focus-player-number > 0)
	(players-current-age focus-player == dark-age)
	(players-civilian-population focus-player >= 29)
=>
	(disable-timer 5)
	(disable-self)
)

(defrule
	(goal POSITION FLANK)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(goal gl-current-age gv-dark)
	(current-age == dark-age)
	(strategic-number sn-focus-player-number > 0)
	(or	(and	(players-current-age focus-player == dark-age)
			(and	(players-civilian-population focus-player >= 20)
				(timer-triggered 5)))
		(players-current-age focus-player >= feudal-age))
	(players-civilian-population focus-player < 29)
=>
	(set-goal gl-enemy-strategy FLUSH)
	(chat-to-player my-player-number "1Possible enemy flush detected!")
	(disable-self)
)
#else
(defrule
	(goal POSITION FLANK)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(goal gl-current-age gv-dark)
	(current-age == dark-age)
	(up-compare-goal gl-enemy-human-rating == GOOD)
	(strategic-number sn-focus-player-number > 0)
	(game-time > 640)
	(players-civilian-population any-human-enemy < 25)
=>
	(set-goal gl-enemy-strategy FLUSH)
	(disable-self)
)
#end-if

(defrule
	(goal POSITION FLANK)
	(game-time > 120)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(goal gl-current-age gv-dark)
	(current-age == dark-age)
	(goal gl-enemy-strategy FLUSH)
	(strategic-number sn-focus-player-number > 0)
	(strategic-number sn-target-evaluation-hitpoints == 0)
=>
	(generate-random-number 10)
	(disable-self)
)

(defrule
	(goal gl-current-age gv-dark)
	(goal SLING 0)
	(population-cap >= 65)
	(strategic-number sn-focus-player-number > 0)
	(random-number >= 0)
	(random-number <= chance-of-flush-defence)
	(goal gl-enemy-strategy FLUSH)
	(up-compare-goal gl-strategy-aggressiveness-level <= AVERAGE)
	(goal gl-rush-suitability-on-map GOOD)
	(strategic-number sn-target-evaluation-hitpoints == 0)
=>
	(set-goal gl-strategy flush)
	(set-goal gl-strategy-type basic-flush)
	(set-goal gl-strategy-control NO)
	(set-strategic-number sn-stone-gatherer-percentage 99)
	(disable-self)
)

(defrule
	(goal gl-current-age gv-dark)
	(goal SLING 0)
	(population-cap >= 65)
	(strategic-number sn-focus-player-number > 0)
	(random-number >= 0)
	(random-number <= chance-of-flush-defence)
	(strategic-number sn-stone-gatherer-percentage == 99)
=>
	(set-goal gl-feudal-infantry FLUSH-DEFENCE-MAA)
	(set-goal gl-feudal-archery FLUSH-DEFENCE-ARCHER)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(chat-to-player my-player-number "1Go for a flush war")
	(set-strategic-number sn-target-evaluation-hitpoints 1)
	(disable-self)
)
#end-if
#end-if
#end-if
#end-if

#load-if-not-defined UP-SCENARIO-GAME
#load-if-defined UP-ALLY-IN-GAME
#load-if-defined UP-MULTIPLE-ENEMIES
#load-if-not-defined UP-2-PLAYER-TEAM
(defrule
	(goal MILITARY 1)
	(or	(goal SLING 1)
		(or	(goal SLING 3)
			(strategic-number sn-allow-resource-spending > 5)))
	(up-timer-status 17 != timer-running)
=>
	(chat-to-allies "31I'll attack now!")
	(enable-timer 17 500)
	(set-goal gl-team-attack-request YES)
)
#else
#load-if-defined ARABIA-MAP
(defrule
	(goal MILITARY 1)
	(up-timer-status 17 != timer-running)
	(game-time < 2300)
=>
	(chat-to-player every-ally "31I'll attack now!")
	(chat-to-player my-player-number "31I'll attack now!")
	(enable-timer 17 500)
	(set-goal gl-team-attack-request YES)
)

(defrule
	(goal MILITARY 1)
	(or	(goal SLING 1)
		(or	(goal SLING 3)
			(strategic-number sn-allow-resource-spending > 5)))
	(up-timer-status 17 != timer-running)
	(game-time >= 2300)
=>
	(chat-to-allies "31I'll attack now!")
	(enable-timer 17 500)
	(set-goal gl-team-attack-request YES)
)

(defrule
	(goal MILITARY 1)
	(goal gl-target-player 1)
	(goal gl-team-attack-request YES)
	(taunt-detected every-ally 254)
	(nor	(taunt-detected my-player-number 211)
		(stance-toward 1 ally))
	(nor	(taunt-detected any-ally 211)
		(or	(taunt-detected any-ally 212)
			(or	(taunt-detected any-ally 213)
				(taunt-detected any-ally 214))))
	(game-time < 2300)
=>
	(chat-to-allies "211")
)

(defrule
	(goal MILITARY 1)
	(goal gl-target-player 2)
	(goal gl-team-attack-request YES)
	(taunt-detected every-ally 254)
	(nor	(taunt-detected my-player-number 212)
		(stance-toward 2 ally))
	(nor	(taunt-detected any-ally 211)
		(or	(taunt-detected any-ally 212)
			(or	(taunt-detected any-ally 213)
				(taunt-detected any-ally 214))))
	(game-time < 2300)
=>
	(chat-to-allies "212")
)

(defrule
	(goal MILITARY 1)
	(goal gl-target-player 3)
	(goal gl-team-attack-request YES)
	(taunt-detected every-ally 254)
	(nor	(taunt-detected my-player-number 213)
		(stance-toward 3 ally))
	(nor	(taunt-detected any-ally 211)
		(or	(taunt-detected any-ally 212)
			(or	(taunt-detected any-ally 213)
				(taunt-detected any-ally 214))))
	(game-time < 2300)
=>
	(chat-to-allies "213")
)

(defrule
	(goal MILITARY 1)
	(goal gl-target-player 4)
	(goal gl-team-attack-request YES)
	(taunt-detected every-ally 254)
	(nor	(taunt-detected my-player-number 214)
		(stance-toward 4 ally))
	(nor	(taunt-detected any-ally 211)
		(or	(taunt-detected any-ally 212)
			(or	(taunt-detected any-ally 213)
				(taunt-detected any-ally 214))))
	(game-time < 2300)
=>
	(chat-to-allies "214")
)

(defrule
	(or	(not	(goal MILITARY 1))
		(game-time > 2400))
	(or	(taunt-detected my-player-number 211)
		(or	(taunt-detected my-player-number 212)
			(or	(taunt-detected my-player-number 213)
				(taunt-detected my-player-number 214))))
=>
	(acknowledge-taunt my-player-number 211)
	(acknowledge-taunt my-player-number 212)
	(acknowledge-taunt my-player-number 213)
	(acknowledge-taunt my-player-number 214)
)

(defrule
	(or	(not	(goal MILITARY 1))
		(game-time > 2400))
	(or	(up-compare-goal gl-original-target-weak != YES)
		(timer-triggered 23))
	(taunt-detected every-ally 254)
	(goal gl-fixed-target-player YES)
=>
	(acknowledge-taunt every-ally 211)
	(acknowledge-taunt every-ally 212)
	(acknowledge-taunt every-ally 213)
	(acknowledge-taunt every-ally 214)
	(set-goal gl-fixed-target-player NO)
	(set-goal gl-original-target-weak NO)
)

(defrule
	(goal MILITARY 1)
	(strategic-number sn-target-player-number != 1)
	(nor	(stance-toward 1 ally)
		(player-number 1))
	(taunt-detected every-ally 254)
	(taunt-detected every-ally 211)
=>
	(set-strategic-number sn-target-player-number 1)
	(set-strategic-number sn-safe-town-size 45)
	(set-goal gl-fixed-target-player YES)
)

(defrule
	(goal MILITARY 1)
	(strategic-number sn-target-player-number != 2)
	(nor	(stance-toward 2 ally)
		(player-number 2))
	(taunt-detected every-ally 254)
	(taunt-detected every-ally 212)
=>
	(set-strategic-number sn-target-player-number 2)
	(set-strategic-number sn-safe-town-size 45)
	(set-goal gl-fixed-target-player YES)
)

(defrule
	(goal MILITARY 1)
	(strategic-number sn-target-player-number != 3)
	(nor	(stance-toward 3 ally)
		(player-number 3))
	(taunt-detected every-ally 254)
	(taunt-detected every-ally 213)
=>
	(set-strategic-number sn-target-player-number 3)
	(set-strategic-number sn-safe-town-size 45)
	(set-goal gl-fixed-target-player YES)
)

(defrule
	(goal MILITARY 1)
	(strategic-number sn-target-player-number != 4)
	(nor	(stance-toward 4 ally)
		(player-number 4))
	(taunt-detected every-ally 254)
	(taunt-detected every-ally 214)
=>
	(set-strategic-number sn-target-player-number 4)
	(set-strategic-number sn-safe-town-size 45)
	(set-goal gl-fixed-target-player YES)
)
#else
(defrule
	(goal MILITARY 1)
	(or	(goal SLING 1)
		(or	(goal SLING 3)
			(strategic-number sn-allow-resource-spending > 5)))
	(up-timer-status 17 != timer-running)
=>
	(chat-to-allies "31I'll attack now!")
	(enable-timer 17 500)
	(set-goal gl-team-attack-request YES)
)
#end-if
#end-if
#else; We have ally but enemy is alone
(defrule
	(goal MILITARY 1)
	(or	(goal SLING 1)
		(or	(goal SLING 3)
			(or	(strategic-number sn-allow-resource-spending > 5)
				(game-time < 2400))))
	(up-timer-status 17 != timer-running)
=>
	(chat-to-allies "31I'll attack now!")
	(enable-timer 17 500)
	(set-goal gl-team-attack-request YES)
)
#end-if
#end-if

(defrule
	(not	(goal MILITARY 1))
	(goal gl-team-attack-request YES)
=>
	(chat-to-player every-ally "36My attack wasn't successful")
	(chat-to-player my-player-number "36My attack wasn't successful")
	(set-goal gl-team-attack-request NO)
)

#load-if-defined UP-HUMAN-IN-GAME
(defrule
	(goal MILITARY 1)
	(or	(taunt-detected any-ally 31)
		(taunt-detected my-player-number 177))
	(goal gl-chat-sent NO)
=>
	(chat-to-allies "1I'm starting an attack!")
	(set-goal gl-chat-sent YES)
	(set-goal gl-team-attack-request YES)
)

(defrule
	(nor	(taunt-detected any-ally 31)
		(taunt-detected my-player-number 177))
	(goal gl-chat-sent YES)
=>
	(set-goal gl-chat-sent NO)
)
#end-if

(defrule
	(up-compare-goal gl-strategy != sling)
	(goal gl-increased-aggressiveness NO)
	(up-compare-goal gl-assisting-ally != YES)
	(taunt-detected any-ally 31)
	(strategic-number sn-threat-level > -4)
=>
	(up-modify-sn sn-threat-level c:- 1)
	(enable-timer 16 500)
	(set-goal gl-increased-aggressiveness YES)
	(acknowledge-taunt this-any-ally 31)
)

(defrule
	(up-compare-goal gl-strategy != sling)
	(goal gl-increased-aggressiveness YES)
	(or	(taunt-detected any-computer-ally 36)
		(or	(timer-triggered 16)
			(taunt-detected any-human-ally 19)))
	(strategic-number sn-threat-level < 2)
=>
	(up-modify-sn sn-threat-level c:+ 1)
	(set-goal gl-increased-aggressiveness NO)
	(acknowledge-taunt this-any-computer-ally 36)
	(acknowledge-taunt this-any-human-ally 19)
)

(defrule
	(up-compare-goal gl-strategy != sling)
	(up-compare-goal gl-strategy != fi-monk-rush)
	(up-compare-goal gl-strategy != castle-push)
	(up-compare-goal gl-assisting-ally != YES)
	(goal gl-increased-aggressiveness NO)
	(taunt-detected any-ally 222)
	(strategic-number sn-threat-level > -4)
=>
	(up-modify-sn sn-threat-level c:- 1)
	(enable-timer 16 240)
	(set-goal gl-increased-aggressiveness HELPING-ATTEMPT)
)

(defrule
	(up-compare-goal gl-strategy != sling)
	(goal gl-increased-aggressiveness HELPING-ATTEMPT)
	(timer-triggered 16)
	(strategic-number sn-threat-level < 2)
=>
	(up-modify-sn sn-threat-level c:+ 1)
	(set-goal gl-increased-aggressiveness NO)
	(acknowledge-taunt this-any-ally 222)
)

(defrule
	(or	(taunt-detected any-ally 31)
		(or	(taunt-detected any-computer-ally 36); Conditions are not fulfilled - react only right after the requests are sent
			(taunt-detected any-human-ally 19)))
=>
	(acknowledge-taunt this-any-ally 31)
	(acknowledge-taunt this-any-computer-ally 36)
	(acknowledge-taunt this-any-human-ally 19)
)

(defrule
	(up-compare-goal MILITARY != 1)
	(taunt-detected any-ally 222)
=>
	(up-modify-goal substitute-timer1 c:+ 1)
)

(defrule
	(up-compare-goal substitute-timer1 >= 60)
	(up-compare-goal MILITARY != 1)
	(taunt-detected any-ally 222)
=>
	(acknowledge-taunt every-ally 222)
	(set-goal substitute-timer1 0)
	(chat-to-player my-player-number "Acknowledge ally's help request")
)
#end-if

#load-if-defined DEFEND-WONDER
(defrule

	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
	(up-compare-goal MILITARY >= 1)
	(or	(warboat-count > 25)
		(game-time > 600))
	(players-building-type-count any-enemy wonder > 0)
	(strategic-number sn-maximum-town-size < 250)
=>
	(set-strategic-number sn-maximum-town-size 250)
)
#end-if

(defrule
	(or	(up-compare-goal TSA < 1)
		(or	(up-timer-status 42 == timer-running); Retreating to ram/trebuchet so don't increase TS
			(or	(up-timer-status 43 == timer-running)
				(or	(and	(building-type-count stone-wall > 0); 1300 normally, 300 in defend the wonder, 1200 in regicide
						(game-time < anti-wall-tsa-time))
					(strategic-number sn-maximum-town-size >= 254)))))
=>
	(up-jump-rule 11)
)

(defrule
	(enemy-buildings-in-town)
	(up-compare-goal target-system >= raid)
	(or	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
		(strategic-number sn-minimum-water-body-size-for-dock == 2002))
	(or	(players-building-type-count target-player stone-wall-line > 0)
		(players-building-type-count target-player gate > 0))
=>
	(up-get-fact building-type-in-town wall-class gl-enemy-wall-count-total)
	(up-get-fact building-type-in-town gate-class gl-enemy-gate-count)
	(up-get-fact building-type-in-town dock temporary-goal)
	(up-modify-goal gl-enemy-wall-count-total g:+ temporary-goal)
	(up-modify-goal gl-enemy-wall-count-total g:+ gl-enemy-gate-count)
	(set-goal gl-enemy-dropsite-count-total 0)
)

(defrule
	(enemy-buildings-in-town)
	(up-compare-goal target-system < raid)
	(or	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
		(strategic-number sn-minimum-water-body-size-for-dock == 2002))
	(or	(players-building-type-count target-player stone-wall-line > 0)
		(or	(players-building-type-count target-player gate > 0)
			(players-building-type-count target-player palisade-wall > 0)))
=>
	(up-get-fact building-type-in-town wall-class gl-enemy-wall-count-total)
	(up-get-fact building-type-in-town gate-class gl-enemy-gate-count)
	(up-get-fact building-type-in-town dock temporary-goal)
	(up-modify-goal gl-enemy-wall-count-total g:+ temporary-goal)
	(up-modify-goal gl-enemy-wall-count-total g:+ gl-enemy-gate-count)
	(set-goal gl-enemy-dropsite-count-total 0)
)

(defrule
	(enemy-buildings-in-town)
	(goal gl-strategy default)
	(strategic-number sn-allow-resource-spending > 5)
	(or	(unit-type-count battering-ram-line > 1)
		(unit-type-count trebuchet-set > 0))
	(up-enemy-villagers-in-town < 10); Attack camps with vills
=>
	(up-get-fact building-type-in-town mill gl-enemy-mill-count)
	(up-get-fact building-type-in-town mining-camp gl-enemy-camp-count)
	(up-get-fact building-type-in-town lumber-camp gl-enemy-dropsite-count-total)
	(up-modify-goal gl-enemy-dropsite-count-total g:+ gl-enemy-mill-count)
	(up-modify-goal gl-enemy-dropsite-count-total g:+ gl-enemy-camp-count)
	(up-modify-goal gl-enemy-wall-count-total g:+ gl-enemy-dropsite-count-total)
)

(defrule
	(enemy-buildings-in-town)
	(or	(unit-type-count battering-ram-line > 1)
		(unit-type-count trebuchet-set > 0))
=>
	(up-get-fact building-type-in-town house temporary-goal)
	(up-modify-goal gl-enemy-wall-count-total g:+ temporary-goal)
	(up-get-fact building-type-in-town farm temporary-goal)
	(up-modify-goal gl-enemy-wall-count-total g:+ temporary-goal)
)

(defrule
	(enemy-buildings-in-town)
	(up-compare-goal gl-enemy-wall-count-total > 0)
	(up-enemy-buildings-in-town g:<= gl-enemy-wall-count-total)
=>
	(up-modify-sn sn-maximum-town-size c:+ 2)
)

(defrule
	(goal target-system siege)
	(players-building-type-count target-player town-center > 0)
	(soldier-count > 28)
	(or	(soldier-count > 45)
		(players-military-population focus-player < 10))
	(or	(players-military-population focus-player < 17)
		(soldier-count > 65))
	(players-military-population focus-player < 27)
	(up-building-type-in-town c: town-center == 0)
	(up-building-type-in-town c: castle == 0)
	(up-building-type-in-town c: bombard-tower == 0)
	(strategic-number sn-maximum-town-size < 250)
=>
	(up-modify-sn sn-maximum-town-size c:+ 5)
)

(defrule
	(goal target-system raid)
	(players-building-type-count target-player castle == 0)
	(players-building-type-count target-player bombard-tower == 0)
	(players-building-type-count target-player watch-tower < 5)
	(or	(research-completed ri-scale-barding)
		(research-completed ri-chain-barding))
	(or	(unit-type-count archery-class < 7)
		(research-completed ri-leather-archer-armor))
	(soldier-count > 25)
	(players-military-population focus-player < 10)
	(up-compare-goal TSA >= 1)
	(strategic-number sn-maximum-town-size < 250)
=>
	(set-strategic-number sn-maximum-town-size 254)
)

(defrule
	(goal MILITARY 1)
	(up-compare-goal gl-increased-town-size-level < 8)
	(strategic-number sn-allow-resource-spending > 3)
	(military-population > 40)
	(unit-type-count battering-ram-line < 3)
	(or	(players-military-population focus-player < 20)
		(military-population > 60))
	(players-military-population focus-player < 30)
=>
	(up-modify-goal gl-my-town-size s:= sn-maximum-town-size)
	(up-modify-goal gl-my-town-size c:- 8)
	(up-get-target-fact player-distance 0 gl-distance-to-enemy)
)

(defrule
	(goal MILITARY 1)
	(up-compare-goal gl-increased-town-size-level < 8)
	(strategic-number sn-allow-resource-spending > 3)
	(unit-type-count battering-ram-line < 3)
	(up-compare-goal gl-my-town-size g:< gl-distance-to-enemy)
	(military-population > 40)
	(or	(players-military-population focus-player < 20)
		(military-population > 60))
	(players-military-population focus-player < 30)
=>
	(up-modify-sn sn-maximum-town-size g:= gl-distance-to-enemy)
	(up-modify-sn sn-maximum-town-size c:+ 8)
	(set-goal gl-increased-town-size-level 8)
)

(defrule
	(goal MILITARY 1)
	(up-compare-goal gl-increased-town-size-level < 28)
	(strategic-number sn-allow-resource-spending > 3)
	(military-population > 40)
	(unit-type-count battering-ram-line >= 3)
	(or	(players-military-population focus-player < 20)
		(military-population > 60))
	(players-military-population focus-player < 30)
=>
	(up-modify-goal gl-my-town-size s:= sn-maximum-town-size)
	(up-modify-goal gl-my-town-size c:- 28)
	(up-get-target-fact player-distance 0 gl-distance-to-enemy)
)

(defrule
	(goal MILITARY 1)
	(up-compare-goal gl-increased-town-size-level < 28)
	(strategic-number sn-allow-resource-spending > 3)
	(unit-type-count battering-ram-line >= 3)
	(up-compare-goal gl-my-town-size g:< gl-distance-to-enemy)
	(military-population > 40)
	(or	(players-military-population focus-player < 20)
		(military-population > 60))
	(players-military-population focus-player < 30)
=>
	(up-modify-sn sn-maximum-town-size g:= gl-distance-to-enemy)
	(up-modify-sn sn-maximum-town-size c:+ 28)
	(set-goal gl-increased-town-size-level 28)
)

#load-if-not-defined DEATH-MATCH
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(or	(game-time >= 3000)
		(or	(goal gl-strategy castle-push)
			(or	(goal gl-strategy fi-monk-rush)
				(and	(goal gl-current-age gv-feudal)
					(and	(nor	(up-projectile-detected projectile-town-center < 4000)
							(players-military-population focus-player > 1))
						(and	(soldier-count > 10)
							(players-building-type-count target-player watch-tower < 3)))))))
=>
	(up-jump-rule 7)
)

(defrule
	(or	(unit-type-count battering-ram-line > 0)
		(or	(game-time >= 1800)
			(or	(population > 105)
				(or	(and	(not	(up-projectile-detected projectile-town-center < 2000))
						(or	(goal gl-anti-trush YES)
							(up-player-distance target-player < 25)))
					(strategic-number sn-minimum-water-body-size-for-dock >= 1999)))))
=>
	(up-jump-rule 5)
)

(defrule
	(up-research-status c: ri-chain-barding != research-complete)
	(up-research-status c: ri-chain-mail != research-complete)
	(up-projectile-target projectile-town-center != warship-class)
	(up-projectile-detected projectile-town-center < 2000)
	(unit-type-count knight-line < 10)
	(unit-type-count huskarl-set < 7)
	(goal MILITARY 1)
=>
	(up-jump-rule 3)
)

(defrule
	(up-research-status c: ri-chain-barding != research-complete)
	(up-research-status c: ri-chain-mail != research-complete)
	(up-projectile-target projectile-town-center != warship-class)
	(up-projectile-detected projectile-watch-tower < 2000)
	(military-population < 25)
	(unit-type-count knight-line < 10)
	(unit-type-count huskarl-set < 7)
	(up-compare-goal TSA >= 1)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-filter-range 2 -1 -1 -1)
	(up-find-remote c: watch-tower c: 1)
	(up-modify-sn sn-target-player-number s:= sn-focus-player-number)
	(up-get-search-state gl-local-total)
)

(defrule
	(up-compare-goal gl-remote-last > 0)
	(up-research-status c: ri-chain-barding != research-complete)
	(up-research-status c: ri-chain-mail != research-complete)
	(up-projectile-target projectile-town-center != warship-class)
	(up-projectile-detected projectile-watch-tower < 2000)
	(military-population < 25)
	(unit-type-count knight-line < 10)
	(unit-type-count huskarl-set < 7)
	(up-compare-goal TSA >= 1)
=>
	(up-jump-rule 1)
)

(defrule
	(true)
=>
	(up-jump-rule 1)
)

(defrule
	(true)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(up-filter-include cmdid-monk -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(up-target-point 0 action-stop -1 -1)
	(up-retreat-to -1 c: -1)
	(up-get-target-fact player-distance 0 gl-distance-to-enemy)
	(up-modify-sn sn-maximum-town-size g:= gl-distance-to-enemy)
	(up-modify-sn sn-maximum-town-size c:- 14)
	(up-set-attack-stance -1 c: no-attack)
	(set-goal gl-retreat-notice YES)
)

(defrule
	(goal gl-retreat-notice YES)
	(nor	(and	(up-projectile-detected projectile-watch-tower < 3000)
			(military-population < 25))
		(up-projectile-detected projectile-town-center < 3000))
=>
	(up-reset-unit c: -1)
	(up-set-attack-stance -1 c: aggressive)
	(set-goal gl-retreat-notice NO)
)

(defrule
	(game-time < 3000)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(up-projectile-target projectile-any != building-class)
	(up-compare-goal threat-target != building-class)
	(up-projectile-target projectile-any != siege-weapon-class)
	(up-compare-goal threat-target != siege-weapon-class)
	(unit-type-count battering-ram-line > 0)
	(goal gl-allow-retreating-to-treb YES)
	(goal MILITARY 1)
	(players-building-type-count target-player stone-wall-line == 0)
	(up-timer-status 43 != timer-running)
=>
	(up-get-target-fact player-distance 0 gl-distance-to-enemy)
	(up-modify-sn sn-maximum-town-size g:= gl-distance-to-enemy)
	(up-modify-sn sn-maximum-town-size c:- 8)
	(set-strategic-number sn-disable-attack-groups 1)
)

(defrule
	(game-time < 3000)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(up-projectile-target projectile-any != building-class)
	(up-compare-goal threat-target != building-class)
	(up-projectile-target projectile-any != siege-weapon-class)
	(up-compare-goal threat-target != siege-weapon-class)
	(unit-type-count battering-ram-line > 0)
	(goal gl-allow-retreating-to-treb YES)
	(goal MILITARY 1)
	(players-building-type-count target-player stone-wall-line == 0)
	(up-timer-status 43 != timer-running)
=>
	(set-strategic-number sn-number-attack-groups 0)
	(up-retreat-to battering-ram-line g: threat-target); Replace with this then
	(enable-timer 43 27)
	(chat-to-player my-player-number "Retreat to ram")
)

(defrule
	(or	(unit-type-count unpacked-trebuchet == 0)
		(or	(goal gl-strategy fi-monk-rush)
			(or	(up-player-distance target-player >= 120)
				(or	(up-compare-goal MILITARY != 1)
					(or	(up-timer-status 42 == timer-running)
						(or	(goal gl-allow-retreating-to-treb NO)
							(or	(unit-type-count battering-ram-line > 4)
								(up-projectile-target projectile-fortification == warship-class))))))))
=>
	(up-jump-rule 3)
)

(defrule
	(up-compare-const gv-michi-style != 1)
	(unit-type-count unpacked-trebuchet > 0)
	(goal MILITARY 1)
	(up-timer-status 42 != timer-running)
	(up-projectile-target projectile-fortification != building-class)
	(goal gl-allow-retreating-to-treb YES)
	(up-projectile-detected projectile-castle < 15000)
=>
	(up-retreat-to unpacked-trebuchet c: mangonel-line)
	(up-retreat-to unpacked-trebuchet c: infantry-class)
	(up-retreat-to unpacked-trebuchet c: archery-class)
	(up-retreat-to unpacked-trebuchet c: archery-cannon-class)
	(up-retreat-to unpacked-trebuchet c: cavalry-class)
	(up-retreat-to unpacked-trebuchet c: cavalry-archer-class)
	(up-retreat-to unpacked-trebuchet c: cavalry-cannon-class)
	(up-retreat-to unpacked-trebuchet c: scorpion-class)
)

(defrule
	(up-compare-const gv-michi-style != 1)
	(unit-type-count unpacked-trebuchet > 0)
	(goal MILITARY 1)
	(up-timer-status 42 != timer-running)
	(up-projectile-target projectile-fortification != building-class)
	(goal gl-allow-retreating-to-treb YES)
	(up-projectile-detected projectile-castle < 15000)
=>
	(up-set-attack-stance mangonel-line c: defensive)
	(up-set-attack-stance infantry-class c: defensive)
	(up-set-attack-stance archery-class c: defensive)
	(up-set-attack-stance archery-cannon-class c: defensive)
	(up-set-attack-stance cavalry-class c: defensive)
	(up-set-attack-stance cavalry-archer-class c: defensive)
	(up-set-attack-stance cavalry-cannon-class c: defensive)
	(up-set-attack-stance scorpion-class c: defensive)
)

(defrule
	(up-compare-const gv-michi-style != 1)
	(unit-type-count unpacked-trebuchet > 0)
	(goal MILITARY 1)
	(up-timer-status 42 != timer-running)
	(up-projectile-target projectile-fortification != building-class)
	(goal gl-allow-retreating-to-treb YES)
	(up-projectile-detected projectile-castle < 15000)
=>
	(set-strategic-number sn-disable-attack-groups 1)
	(set-strategic-number sn-number-attack-groups 0)
	(up-get-target-fact player-distance 0 gl-distance-to-enemy)
	(up-modify-sn sn-maximum-town-size g:= gl-distance-to-enemy)
	(up-modify-sn sn-maximum-town-size c:- 8)
	(enable-timer 42 26)
	(chat-to-player my-player-number "Retreat to trebuchet")
	(set-goal gl-attack-stance-switcher 1)
)

(defrule
	(goal gl-attack-stance-switcher 1)
	(or	(unit-type-count unpacked-trebuchet == 0)
		(or	(goal gl-strategy fi-monk-rush)
			(or	(up-player-distance target-player >= 120)
				(up-compare-goal MILITARY != 1))))
=>
	(up-set-attack-stance -1 c: aggressive)
	(set-goal gl-attack-stance-switcher 0)
)

(defrule
	(game-time < 1800)
	(unit-type-count battering-ram-line < 1)
	(strategic-number sn-retreating == 1)
	(or	(up-projectile-detected projectile-castle < 3000)
		(up-projectile-detected projectile-bombard-tower < 3000))
=>
	(set-goal MILITARY 0)
	(set-goal TSA 0)
	(enable-timer 7 80)
)
#end-if
#end-if

(defrule
	(strategic-number sn-retreating == 0)
	(or	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
		(strategic-number sn-minimum-water-body-size-for-dock == 2002))
	(or	(goal MILITARY 1)
		(goal TSA 1))
=>
	(set-strategic-number sn-retreating 1)
)

(defrule
	(up-compare-goal gl-water-retreating != YES)
	(up-compare-goal MILITARY >= 1)
=>
	(set-goal gl-water-retreating YES)
)

(defrule
	(nand	(goal gl-current-age gv-feudal-up)
		(current-age == feudal-age))
	(strategic-number sn-retreating == 1)
	(up-compare-goal gl-strategy != heavy-krush)
	(goal MILITARY 0)
	(goal TSA 0)
=>
	(set-strategic-number sn-retreating 0)
	(set-strategic-number sn-unit-spreading2 1)
	(enable-timer 10 45)
)

(defrule
	(strategic-number sn-unit-spreading2 == 3)
=>
	(set-strategic-number sn-unit-spreading2 0)
	(set-strategic-number sn-task-ungrouped-soldiers 0)
)

(defrule
	(goal MILITARY 0)
	(goal TSA 0)
	(timer-triggered 10)
	(strategic-number sn-unit-spreading2 == 2)
=>
	(set-strategic-number sn-unit-spreading2 3)
	(set-strategic-number sn-task-ungrouped-soldiers 1)
)

(defrule
	(or	(goal gl-strategy castle-push)
		(goal gl-defensive-castle-placed YES))
	(building-type-count-total castle > 0)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(strategic-number sn-unit-spreading2 == 1)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(up-filter-include cmdid-monk -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(up-target-point 0 action-stop -1 -1)
	(up-retreat-to castle c: -1)
	(set-strategic-number sn-unit-spreading2 3)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(goal MILITARY 0)
	(goal TSA 0)
	(strategic-number sn-unit-spreading2 == 1)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(up-filter-include cmdid-monk -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(up-target-point 0 action-stop -1 -1)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(or	(and	(goal MILITARY 0)
			(and	(goal TSA 0)
				(strategic-number sn-unit-spreading2 == 1)))
		(and	(goal gl-current-age gv-feudal-up)
			(and	(up-projectile-detected projectile-town-center < 2000)
				(game-time > 1300))))
=>
	(up-retreat-to -1 c: -1)
	(set-strategic-number sn-unit-spreading2 2)
)

(defrule
	(goal MILITARY 0)
	(goal gl-water-retreating YES)
	(strategic-number sn-minimum-water-body-size-for-dock >= 1000)
=>
	(up-retreat-to dock c: galley-line)
	(up-retreat-to dock c: fire-ship-line)
	(up-retreat-to dock c: demolition-ship-line)
	(up-retreat-to dock c: turtle-ship-line)
	(up-retreat-to dock c: cannon-galleon-line)
	(up-retreat-to dock c: longboat-line)
	(set-goal gl-water-retreating NO)
)

#load-if-defined KOREAN-CIV
#load-if-defined BLACK-FOREST-MAP
(load "Barbarian_2.0\TheGreatWall")
#end-if
#end-if

; ============= EARLY GAME STUFF

#load-if-defined FEUDAL-AGE-START
(defrule
	(or	(up-research-status c: ri-double-bit-axe >= research-pending)
		(starting-resources != low-resources))
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(can-research ri-horse-collar)
=>
	(research ri-horse-collar)
)

(defrule
	(or	(building-type-count-total mill > 0)
		(starting-resources != low-resources))
	(can-research ri-double-bit-axe)
=>
	(research ri-double-bit-axe)
)
#end-if

#load-if-defined TURBO-RANDOM-MAP
(defrule
	(goal gl-normal-milling 0)
=>
	(set-goal gl-normal-milling 1)
)
#end-if

(defrule
	(or	(and	(game-time > 2400)
			(up-timer-status 7 != timer-disabled))
		(and	(game-time > 300)
			(death-match-game)))
=>
	(up-jump-rule 63)
)

(defrule
	(goal MILITARY 0)
	(town-under-attack)
	(up-enemy-units-in-town > 20)
=>
	(set-goal gl-town-under-attack 1)
)

(defrule
	(or	(up-compare-const gv-turborandom == 1)
		(or	(up-compare-const gv-regicide == 1)
			(or	(starting-resources != low-resources)
				(or	(difficulty != hard)
					(starting-age != dark-age)))))
=>
	(set-goal gl-uncommon-settings YES)
	(disable-self)
)

(defrule
	(goal gl-current-age gv-feudal)
	(current-age == feudal-age)
	(gold-amount < 200)
	(gold-amount > 180)
	(up-compare-goal gl-strategy-type >= FC)
	(current-age-time > 72)
=>
	(up-drop-resources gold c: 5)
)

(defrule
	(timer-triggered 6)
	(current-age-time < 180)
	(current-age == castle-age)
	(stone-amount < 650)
	(stone-amount > 615)
=>
	(up-drop-resources stone c: 6)
	(enable-timer 6 5)
)

(defrule
	(game-time > 900)
	(strategic-number sn-maximum-food-drop-distance >= 0)
	(strategic-number sn-maximum-food-drop-distance < 12)
=>
	(set-strategic-number sn-maximum-food-drop-distance 12)
)

(defrule
	(up-pending-objects c: house < 1)
	(up-pending-placement c: house)
	(building-type-count town-center > 0)
	(population-headroom > 4)
	(housing-headroom < 1)
	(strategic-number sn-maximum-town-size < 20)
	(goal gl-current-age gv-dark)
=>
	(up-modify-sn sn-maximum-town-size c:+ 1)
)

(defrule
	(or	(goal POSITION POCKET)
		(or	(not	(resource-found stone))
			(or	(up-compare-goal gl-rush-suitability-on-map != GOOD)
				(or	(game-time < 90)
					(or	(goal gl-uncommon-settings YES)
						(or	(goal gl-strategy wall-boom)
							(goal gl-heavy-resources HIGH)))))))
=>
	(up-jump-rule 1)
)

(defrule
	(game-time s:< sn-home-exploration-time)
	(starting-age == dark-age)
	(nor	(death-match-game)
		(map-type custom))
	(up-compare-const boar-stealing-nature == 1)
	(unit-type-count scout-unit > 0)
	(strategic-number sn-sheep-count > 7)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(up-gaia-type-count-total c: deer > 1)
	(or	(up-gaia-type-count-total c: wild-boar > 1)
		(up-gaia-type-count-total c: javelina > 1))
	(resource-found gold)
=>
	(set-strategic-number sn-home-exploration-time 0)
)

(defrule
	(game-time > 90)
	(strategic-number sn-nomad-style-start == 1)
	(building-type-count-total town-center > 0)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-filter-include -1 actionid-build -1 -1)
	(up-find-local c: villager-class c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-point-x)
	(up-send-flare gl-point-x)
	(chat-to-allies nomad-tc-up-chat); Lies, it flares a villager
	(disable-self)
)

(defrule
	(or	(up-projectile-detected projectile-any < 30000)
		(or	(up-compare-goal threat-time > 4000)
			(strategic-number sn-minimum-water-body-size-for-dock != 998)))
=>
	(up-jump-rule 2)
)

(defrule
	(game-time < 1300)
	(up-compare-goal threat-source != villager-class)
	(or	(goal threat-target scout-cavalry-class)
		(goal threat-target infantry-class))
	(not	(up-projectile-detected projectile-any < 30000))
	(military-population == 1)
	(players-military-population every-enemy < 2)
	(players-building-count any-enemy > 0)
	(strategic-number sn-number-explore-groups == 1)
=>
	(up-set-attack-stance scout-unit c: aggressive)
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(up-reset-scouts)
	(set-goal gl-interfered-scout YES)
)

(defrule
	(game-time < 1300)
	(goal threat-source monastery-class)
	(or	(goal threat-target scout-cavalry-class)
		(goal threat-target infantry-class))
	(not	(up-projectile-detected projectile-any < 30000))
	(military-population == 1)
	(players-military-population every-enemy < 5)
	(players-building-count any-enemy > 0)
	(strategic-number sn-number-explore-groups == 1)
=>
	(up-set-attack-stance scout-unit c: aggressive)
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(up-reset-scouts)
	(set-goal gl-interfered-scout YES)
)

(defrule
	(game-time < 1400)
	(or	(up-compare-goal threat-time > 6000)
		(up-projectile-detected projectile-any < 10000))
	(goal gl-interfered-scout YES)
=>
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
	(set-goal gl-interfered-scout NO)
	(chat-to-all "Return to scouting after being attacked")
)

(defrule
	(game-time > 300)
	(current-age == castle-age)
	(up-compare-goal gl-current-age >= gv-castle)
	(goal SLING 3)
	(goal gl-strategy turkish-fast-imp)
	(up-compare-goal gl-rush-suitability-on-map >= AVERAGE)
	(building-type-count-total monastery < 2)
	(can-build monastery)
=>
	(build monastery)
)

(defrule
	(game-time > 1300)
	(game-time < 1800)
	(or	(goal gl-strategy xbow-boom)
		(goal gl-strategy CA-boom))
	(building-type-count town-center == 3)
	(building-type-count-total farm > 16)
	(goal POSITION POCKET)
	(strategic-number sn-stone-gatherer-percentage < 4)
=>
	(set-strategic-number sn-stone-gatherer-percentage 4)
)

(defrule
	(or	(strategic-number sn-nomad-style-start == 0)
		(building-type-count-total mill > 0))
	(dropsite-min-distance deer-hunting < 7)
	(up-compare-goal gl-my-villager-count-total > 15)
=>
	(set-goal gl-close-deer YES)
	(disable-self)
)

(defrule
	(goal gl-strategy castle-drop)
	(game-time > 600)
	(current-age == castle-age)
	(or	(dropsite-min-distance stone > 3)
		(dropsite-min-distance stone == -1))
	(building-type-count-total castle == 0)
	(current-age-time < 40)
	(stone-amount < 201)
=>
	(set-goal gl-strategy monk-boom)
	(set-goal gl-strategy-type FC)
	(set-goal gl-strategy-aggressiveness-level VERY-LOW)
	(chat-to-player my-player-number "The castle drop was a total failure")
	(disable-self)
)

(defrule
	(goal gl-enemy-sling -1)
	(not	(player-human focus-player))
	(strategic-number sn-focus-player-number <= 8)
=>
	(chat-to-player focus-player "254")
)

(defrule
	(goal gl-enemy-sling -1)
	(player-valid focus-player)
	(strategic-number sn-focus-player-number < 8)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2)
)

(defrule
	(true)
=>
	(set-strategic-number sn-focus-player-number 0)
	(disable-self)
)

(defrule
	(cc-players-unit-type-count 0 forage-bush >= large-number-forage)
	(or	(cc-players-unit-type-count 0 wild-boar >= large-number-boar)
		(cc-players-unit-type-count 0 javelina >= large-number-boar))
	(cc-players-unit-type-count 0 deer >= large-number-deer)
=>
	(set-goal gl-heavy-resources HIGH)
	(disable-self)
)

(defrule
	(goal gl-strategy castle-drop)
	(goal gl-strategy-type FC2)
=>
	(set-goal gl-strategy-type FC)
)

; AGAINST THE WALL

(defrule
	(up-compare-goal gl-petard-wall-break-status != NO)
	(nand	(goal gl-enemy-human-rating GOOD); True even vs AIs, but they probably won't wall anyway, and even if they do, it doesn't matter
		(map-type black-forest))
	(difficulty <= hard)
	(or	(goal gl-strategy gothic-boom)
		(goal gl-strategy castle-drop))
	(or	(building-type-count-total stone-wall-line > 0)
		(players-building-type-count target-player stone-wall-line > 0))
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age < castle-age)
=>
	(set-goal gl-petard-wall-break-status MAYBE)
	(disable-self)
)

(defrule
	(or	(goal gl-strategy gothic-boom)
		(goal gl-strategy castle-drop))
	(current-age == castle-age)
	(goal gl-petard-wall-break-status MAYBE)
	(or	(unit-type-count-total my-unique-unit-line > 6)
		(unit-type-count-total my-unique-unit > 6))
=>
	(set-goal gl-petard-wall-break-status YES)
	(disable-self)
)

(defrule
	(goal gl-petard-wall-break-status YES)
	(unit-type-count-total petard < 3)
	(can-train petard)
=>
	(train petard)
)

(defrule
	(goal gl-petard-wall-break-status YES)
	(unit-type-count petard > 2)
	(or	(unit-type-count-total my-unique-unit-line > 6)
		(unit-type-count-total my-unique-unit > 6))
=>
	(set-goal gl-petard-wall-break-status IN-PROGRESS)
	(chat-to-player every-ally "I'm trying to break in!")
	(chat-to-player my-player-number "1I'm trying to break in!")
	(disable-self)
)

(defrule
	(goal gl-petard-wall-break-status IN-PROGRESS)
	(timer-triggered 6)
	(strategic-number sn-group-form-distance == 22)
=>
	(set-strategic-number sn-number-attack-groups 0)
	(set-strategic-number sn-number-boat-attack-groups 0)
	(set-strategic-number sn-group-form-distance 20)
)

(defrule
	(goal gl-petard-wall-break-status IN-PROGRESS)
	(timer-triggered 6)
	(strategic-number sn-number-attack-groups == 196)
=>
	(set-strategic-number sn-minimum-attack-group-size 0)
	(set-strategic-number sn-maximum-attack-group-size 0)
	(set-strategic-number sn-group-form-distance 22)
	(enable-timer 6 6)
)

(defrule
	(goal gl-petard-wall-break-status IN-PROGRESS)
=>
	(up-set-offense-priority c: wall-class  c: 11)
	(up-set-offense-priority c: gate-class c: 11)
	(set-strategic-number sn-maximum-town-size 20)
	(set-strategic-number sn-group-form-distance 25)
	(set-strategic-number sn-number-attack-groups 196)
	(set-strategic-number sn-minimum-attack-group-size 20)
	(set-strategic-number sn-maximum-attack-group-size 30)
	(enable-timer 6 60)
	(disable-self)
)

(defrule
	(goal gl-petard-wall-break-status IN-PROGRESS)
	(unit-type-count-total petard == 0)
=>
	(up-set-offense-priority c: wall-class  c: 0)
	(up-set-offense-priority c: gate-class c: 0)
	(set-goal gl-petard-wall-break-status DONE)
	(up-send-scout group-type-land-explore scout-flank)
	(disable-self)
)

(defrule
	(goal gl-petard-wall-break-status IN-PROGRESS)
	(game-time > 2000)
=>
	(set-goal gl-petard-wall-break-status DONE)
	(chat-to-player my-player-number "24Break in was a failure")
	(disable-self)
)

(defrule
	(up-compare-goal gl-petard-wall-break-status != NO)
	(up-compare-goal gl-petard-wall-break-status != -1)
	(goal gl-strategy castle-drop)
	(current-age >= castle-age)
	(up-timer-status 7 != timer-disabled)
=>
	(disable-timer 7)
)

(defrule
	(up-compare-goal gl-petard-wall-break-status != NO)
	(up-compare-goal gl-petard-wall-break-status != -1)
	(or	(players-building-type-count target-player watch-tower > 0)
		(or	(players-military-population focus-player > 3)
			(or	(goal gl-petard-wall-break-status DONE)
				(or	(players-building-type-count target-player castle > 0)
					(and	(players-unit-type-count any-ally petard > 0)
						(unit-type-count-total petard < 1))))))
	(current-age >= castle-age)
=>
	(enable-timer 7 0)
	(set-goal gl-petard-wall-break-status NO)
)

(defrule
	(up-compare-goal SLING != 0)
=>
	(up-jump-rule 2)
)

(defrule
	(up-compare-goal gl-current-age >= gv-dark-up)
	(or	(goal gl-strategy castle-drop)
		(or	(goal gl-strategy gothic-boom)
			(or	(goal gl-strategy mongol-boom)
				(or	(goal gl-strategy knight-boom)
					(or	(goal gl-eew-strategy-type boom)
						(or	(goal gl-strategy jaguar-boom)
							(goal gl-strategy monk-boom)))))))
=>
	(set-goal gl-disable-mining-upgrades YES)
	(disable-self)
)

(defrule
	(up-compare-goal gl-current-age >= gv-dark-up)
	(or	(goal gl-strategy xbow-boom)
		(or	(goal gl-strategy CA-boom)
			(and	(or	(goal gl-strategy krush)
					(or	(goal gl-strategy knight-archer)
						(or	(goal gl-strategy skirm-boom)
							(goal gl-strategy castle-sling))))
				(goal POSITION POCKET))))
=>
	(set-goal gl-disable-mining-upgrades YES)
	(disable-self)
)

(defrule
	(stone-amount <= 100)
	(or	(building-type-count-total town-center == 1)
		(and	(stone-amount == 0)
			(building-type-count-total town-center < 3)))
	(or	(goal gl-strategy knight-rush)
		(or	(goal gl-strategy xbow-rush)
			(goal gl-strategy CA-rush)))
	(game-time > 1300)
	(strategic-number sn-stone-gatherer-percentage < 5)
=>
	(set-strategic-number sn-stone-gatherer-percentage 5)
)

(defrule
	(building-type-count-total market == 0)
	(or	(stone-amount >= 100)
		(building-type-count-total town-center > 1))
	(or	(stone-amount >= 200)
		(building-type-count-total town-center > 2))
	(or	(goal gl-strategy knight-rush)
		(or	(goal gl-strategy xbow-rush)
			(goal gl-strategy CA-rush)))
	(game-time > 1300)
	(strategic-number sn-stone-gatherer-percentage == 5)
=>
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(up-retask-gatherers stone c: 6)
)

(defrule
	(player-valid any-human-enemy)
	(player-human target-player)
	(strategic-number sn-target-player-number > 0)
	(up-compare-goal gl-enemy-human-rating >= AVERAGE)
	(game-time > 475); Even japanese shouldn't be faster than this
=>
	(set-goal gl-drush-stance stand-ground)
	(disable-self)
)

(defrule
	(game-time < 600)
	(goal gl-nothing-style-map YES)
	(up-compare-goal gl-strategy != nothing-FC-boom)
=>
	(set-goal gl-strategy nothing-FC-boom)
	(set-goal gl-strategy-type FC)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-required-current-age-time 60000)
	(set-strategic-number sn-target-evaluation-hitpoints 1)
	(set-strategic-number sn-maximum-town-size 17)
)

(defrule
	(game-time < 10)
	(building-type-count-total castle > 0)
=>
	(set-goal gl-start-with-castle YES)
	(disable-self)
)

#load-if-not-defined WONDER-RACE
(defrule
	(or	(and	(goal gl-feudal-upgrade-order 2)
			(food-amount >= 900))
		(and	(game-time > 1500)
			(up-compare-const gv-feudal-age-end == 1)))
	(or	(wood-amount >= 125)
		(up-research-status c: ri-wheel-barrow >= research-pending))
	(up-compare-goal gl-strategy != michi-boom)
	(up-compare-goal gl-strategy != castle-drop)
	(up-compare-goal gl-disable-mining-upgrades != YES)
	(goal gl-current-age gv-feudal)
	(can-research ri-gold-mining)
=>
	(research ri-gold-mining)
)

(defrule
	(goal gl-feudal-upgrade-order 1)
	(or	(wood-amount >= 125)
		(up-research-status c: ri-wheel-barrow >= research-pending))
	(food-amount >= 875)
	(nand	(building-type-count-total mining-camp < 2)
		(goal CASTLE 2))
	(nand	(goal gl-strategy heavy-krush)
		(building-type-count-total town-center == 1))
	(or	(can-research ri-horse-collar)
		(research-completed ri-horse-collar)); Franks
=>
	(research ri-horse-collar)
	(set-goal gl-feudal-upgrade-order 2)
)
#else
(defrule
	(goal gl-feudal-upgrade-order 1)
=>
	(set-goal gl-feudal-upgrade-order 2)
)
(defrule
	(goal gl-feudal-upgrade-order 2)
=>
	(set-goal gl-feudal-upgrade-order 3)
)
#end-if

(defrule
	(goal gl-current-age gv-feudal)
	(up-compare-goal gl-strategy-type >= FC)
	(or	(wood-amount >= 100)
		(up-research-status c: ri-wheel-barrow >= research-pending))
	(food-amount >= 900)
	(building-type-count-total blacksmith > 0)
	(or	(building-type-count-total market > 0)
		(or	(building-type-count-total archery-range > 0)
			(building-type-count-total stable > 0)))
	(can-research ri-double-bit-axe)
=>
	(research ri-double-bit-axe)
	(set-goal gl-feudal-upgrade-order 1)
)

(defrule
	(strategic-number sn-boars-on-map != NONE)
	(strategic-number sn-nomad-style-start == 0)
	(building-type-count town-center > 0)
	(or	(game-time < berry-walk-time)
		(and	(building-type-count-total mill == 0)
			(game-time < 75)))
	(or	(strategic-number sn-sheep-count > 3)
		(up-compare-const gv-michi-style == 1))
	(starting-age == dark-age)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
=>
	(set-goal gl-normal-milling 0)
	(disable-self)
)

(defrule
	(game-time > 40)
	(or	(game-time > 120)
		(strategic-number sn-sheep-count < 2))
	(strategic-number sn-sheep-count < 5)
=>
	(set-goal gl-normal-milling 1)
	(disable-self)
)

(defrule
	(strategic-number sn-maximum-food-drop-distance == 3)
=>
	(set-strategic-number sn-maximum-food-drop-distance 20)
)

(defrule
	(goal gl-normal-milling 0)
	(game-time > 35)
	(goal gl-boar-stealing -1)
	(strategic-number sn-sheep-count >= 2)
	(building-type-count-total mill == 0)
	(unit-type-count villager-forager > 0)
	(dropsite-min-distance food < 4)
=>
	(up-drop-resources forage-food c: 10)
	(set-strategic-number sn-maximum-food-drop-distance 3)
	(up-retask-gatherers forage-food c: 1)
)

(defrule
	(strategic-number sn-boars-on-map != NONE)
	(dropsite-min-distance boar-hunting < 31)
	(up-compare-goal gl-villagers-to-start-boar-hunt > 16)
=>
	(set-goal gl-villagers-to-start-boar-hunt 16)
)

(defrule
	(strategic-number sn-boars-on-map != NONE)
	(dropsite-min-distance boar-hunting < 31)
	(or	(goal gl-normal-milling 0)
		(strategic-number sn-minimum-water-body-size-for-dock >= 1000))
	(up-compare-goal gl-villagers-to-start-boar-hunt > 9)
=>
	(set-goal gl-villagers-to-start-boar-hunt 9)
)

(defrule
	(strategic-number sn-boars-on-map != NONE)
	(dropsite-min-distance boar-hunting < 31)
	(research-available ri-loom)
	(strategic-number sn-sheep-count > 5)
	(up-compare-goal gl-villagers-to-start-boar-hunt < 11)
=>
	(set-goal gl-villagers-to-start-boar-hunt 11)
)

(defrule
	(strategic-number sn-boars-on-map != NONE)
	(dropsite-min-distance boar-hunting < 31)
	(research-available ri-loom)
	(strategic-number sn-sheep-count > 7)
	(up-compare-goal gl-villagers-to-start-boar-hunt < 14)
=>
	(set-goal gl-villagers-to-start-boar-hunt 14)
)

(defrule
	(or	(strategic-number sn-boars-on-map != NONE)
		(goal gl-strategy scrush))
	(dropsite-min-distance boar-hunting < 31)
	(or	(strategic-number sn-sheep-count < 5)
		(goal gl-strategy scrush))
	(game-time > 180)
	(up-compare-goal gl-villagers-to-start-boar-hunt > 12)
=>
	(set-goal gl-villagers-to-start-boar-hunt 12)
)

(defrule
	(strategic-number sn-boars-on-map != NONE)
	(dropsite-min-distance boar-hunting < 31)
	(or	(and	(strategic-number sn-sheep-count < 7)
			(and	(game-time > 220)
				(up-compare-goal gl-villagers-to-start-boar-hunt > 13)))
		(and	(game-time > 55)
			(and	(up-compare-const gv-aofe-game == 1)
				(up-compare-const gv-michi-style == 1))))
	(up-compare-goal gl-villagers-to-start-boar-hunt != 13)
=>
	(set-goal gl-villagers-to-start-boar-hunt 13)
)

(defrule
	(strategic-number sn-boars-on-map == NONE)
	(nand	(game-time >= 60)
		(goal gl-strategy scrush))
	(up-compare-goal gl-villagers-to-start-boar-hunt >= 0)
	(up-compare-goal gl-villagers-to-start-boar-hunt < 900)
=>
	(set-goal gl-villagers-to-start-boar-hunt 900)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(up-compare-goal gl-my-villager-count-total g:>= gl-villagers-to-start-boar-hunt)
	(dropsite-min-distance live-boar < gv-max-loomless-boar-distance)
	(strategic-number sn-nomad-style-start == 0)
	(nor	(map-type black-forest)
		(map-type gold-rush))
	(not	(up-player-distance target-player < 26))
	(up-compare-goal gl-loomless-boar-hunting != YES)
	(up-compare-goal gl-x-vs-one-challenge != YES)
	(unit-type-count villager-hunter == 0)
	(research-available ri-loom)
=>
	(set-goal gl-loomless-boar-hunting YES)
	(chat-to-player my-player-number "Allow loomless boar hunting")
	(disable-self)
)

(defrule
	(or	(and	(up-compare-goal gl-my-villager-count-total g:>= gl-villagers-to-start-boar-hunt)
			(and	(dropsite-min-distance live-boar >= gv-max-loomless-boar-distance)
				(and	(dropsite-min-distance live-boar s:<= sn-maximum-hunt-drop-distance)
					(goal gl-current-age gv-dark))))
		(current-age >= castle-age))
	(up-compare-goal gl-strategy != michi-boom)
	(goal gl-loomless-boar-hunting YES)
	(or	(up-remaining-boar-amount < 330); To have enough time to research loom
		(game-time > 360))
=>
	(set-goal gl-loomless-boar-hunting NO)
	(chat-to-player my-player-number "Disable loomless boar hunting")
)

(defrule
	(or	(and	(game-time < 10)
			(unit-type-count transport-ship > 0))
		(and	(up-compare-goal gl-my-villager-count-total >= imperial-villager-cap)
			(up-compare-const gv-maximum-age == dark-age)))
	(can-research ri-loom)
=>
	(research ri-loom)
	(enable-timer 2 22)
)

#load-if-not-defined WONDER-RACE
(defrule
	(or	(up-compare-goal gl-my-villager-count-total g:>= gl-villagers-to-start-boar-hunt)
		(or	(not	(can-train villager))
			(current-age >= castle-age)))
	(or	(up-compare-goal gl-loomless-boar-hunting != YES)
		(or	(not	(can-train villager))
			(up-compare-goal gl-current-age >= gv-castle-up)))
	(can-research ri-loom)
=>
	(research ri-loom)
	(enable-timer 2 22)
)
#else
(defrule
	(goal gl-current-age gv-dark)
	(or	(up-compare-goal gl-my-villager-count-total g:>= gl-villagers-to-start-boar-hunt)
		(not	(can-train villager)))
	(or	(up-compare-goal gl-loomless-boar-hunting != YES)
		(not	(can-train villager)))
	(can-research ri-loom)
=>
	(research ri-loom)
	(enable-timer 2 22)
)
#end-if

(defrule
	(goal gl-normal-milling 0)
	(or	(building-type-count-total lumber-camp > 0)
		(strategic-number sn-boars-on-map == NONE))
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
=>
	(set-goal gl-normal-milling 1)
)

(defrule
	(goal gl-normal-milling 0)
	(or	(unit-type-count-total sheep > 0)
		(unit-type-count villager-hunter > 0))
	(building-type-count town-center > 0)
	(strategic-number sn-percent-civilian-explorers > 0)
=>
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
	(set-strategic-number sn-percent-civilian-gatherers 100)
	(set-strategic-number sn-cap-civilian-gatherers 200)
	(set-strategic-number sn-cap-civilian-explorers 0)
	(set-strategic-number sn-percent-civilian-explorers 0)
	(set-strategic-number sn-target-evaluation-ally-proximity 50)
	(set-strategic-number sn-minimum-civilian-explorers 0)
)

(defrule
	(or	(strategic-number sn-boars-on-map != NONE)
		(goal gl-strategy scrush))
	(strategic-number sn-enable-boar-hunting == 2)
	(game-time < 600)
	(dropsite-min-distance hunting < 8)
	(dropsite-min-distance hunting >= 0)
	(unit-type-count villager-hunter > 0)
=>
	(set-goal gl-boar-eaten 1)
	(disable-self)
)

(defrule
	(game-time < 10)
	(cc-players-unit-type-count 0 forage-bush == 0)
=>
	(set-strategic-number sn-preferred-mill-placement 1)
	(set-strategic-number sn-start-with-forage 0)
	(disable-self)
)

#load-if-not-defined UP-NOMAD-RESOURCES
#load-if-not-defined NOMAD-MAP
(defrule
	(strategic-number sn-boars-on-map != NONE)
	(dropsite-min-distance hunting < 27)
	(dropsite-min-distance hunting >= 0)
	(or	(dropsite-min-distance food >= 10)
		(and	(strategic-number sn-nomad-style-start == 0)
			(and	(goal gl-normal-milling 0)
				(strategic-number sn-sheep-count < 5))))
	(game-time > 120)
	(or	(game-time > 480)
		(strategic-number sn-nomad-style-start == 0))
	(up-compare-goal gl-villagers-to-start-boar-hunt > 3)
=>
	(set-goal gl-villagers-to-start-boar-hunt 3)
)
#else
(defrule
	(strategic-number sn-boars-on-map != NONE)
	(dropsite-min-distance hunting < 27)
	(dropsite-min-distance hunting >= 0)
	(or	(unit-type-count villager-food == 0)
		(dropsite-min-distance food >= 10))
	(game-time > 300)
	(up-compare-goal gl-villagers-to-start-boar-hunt > 3)
=>
	(set-goal gl-villagers-to-start-boar-hunt 3)
)
#end-if
#else
(defrule
	(strategic-number sn-boars-on-map != NONE)
	(dropsite-min-distance hunting < 27)
	(dropsite-min-distance hunting >= 0)
	(or	(unit-type-count villager-food == 0)
		(dropsite-min-distance food >= 10))
	(game-time > 300)
	(up-compare-goal gl-villagers-to-start-boar-hunt > 3)
=>
	(set-goal gl-villagers-to-start-boar-hunt 3)
)
#end-if

(defrule
	(or	(strategic-number sn-preferred-mill-placement == 1)
		(and	(strategic-number sn-boars-on-map == NONE)
			(up-compare-goal gl-strategy != scrush)))
	(strategic-number sn-enable-boar-hunting == 2)
=>
	(set-strategic-number sn-enable-boar-hunting 1)
)

(defrule
	(or	(strategic-number sn-allow-new-build-order == 1)
		(and	(not	(goal gl-strategy grush))
			(strategic-number sn-allow-new-build-order == -2)))
	(not	(goal DOCK 0))
=>
	(set-strategic-number sn-allow-new-build-order 2)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal DOCK 0)
=>
	(set-strategic-number sn-allow-new-build-order 1)
)

(defrule
	(current-age == castle-age)
=>
	(set-strategic-number sn-preferred-mill-placement 2)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
=>
	(set-strategic-number sn-minimum-boar-hunt-group-size 0)
	(set-strategic-number sn-minimum-boar-lure-group-size 1)
	(disable-self)
)

(defrule
	(difficulty <= hard)
=>
	(set-strategic-number sn-enable-patrol-attack 1)
	(disable-self)
)

(defrule
	(true)
=>
	(set-strategic-number sn-enable-boar-hunting 0)
	(set-strategic-number sn-retreating 0)
	(set-strategic-number sn-percent-building-cancellation 30)
	(set-strategic-number sn-enable-new-building-system 1)
	(up-assign-builders c: town-center c: 4)
	(up-assign-builders c: unbuilt-town-center c: 4)
	(up-assign-builders c: castle c: castle-builders)
	(up-assign-builders c: market c: market-builders)
	(enable-timer 6 75)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(up-compare-goal gl-my-villager-count-total > 24)
	(starting-resources == high-resources)
=>
	(up-assign-builders c: castle c: 5)
	(disable-self)
)

; ============= BOAR HUNTING

#load-if-not-defined DEATH-MATCH
(defrule
	(current-age > feudal-age)
	(up-compare-goal gl-current-age > gv-feudal-up)
	(game-time > 1200)
=>
	(up-jump-rule 8)
)

(defrule
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-boar-hunting-stage <= 0)
	(or	(up-research-status c: ri-loom >= research-pending)
		(goal gl-loomless-boar-hunting YES))
	(up-compare-goal gl-my-villager-count g:>= gl-villagers-to-start-boar-hunt)
	(dropsite-min-distance live-boar <= 31)
=>
	(up-retask-gatherers food c: 1)
	(set-strategic-number sn-maximum-hunt-drop-distance 31)
	(set-strategic-number sn-minimum-number-hunters 1)
	(set-strategic-number sn-minimum-boar-lure-group-size 1)
	(set-strategic-number sn-minimum-boar-hunt-group-size 0)
	(set-strategic-number sn-enable-boar-hunting 2)
	(set-goal gl-boar-hunting-stage 1)
	(enable-timer 1 90)
	(disable-self)
)

(defrule
	(goal gl-boar-hunting-stage 1)
	(up-compare-goal gl-my-villager-count g:>= gl-villagers-to-start-boar-hunt)
	(strategic-number sn-minimum-number-hunters == 1)
	(unit-type-count villager-hunter > 0)
=>
	(set-strategic-number sn-minimum-number-hunters 0)
)

(defrule
	(goal gl-boar-hunting-stage 1)
	(goal gl-current-age gv-dark)
	(dropsite-min-distance live-boar < 8)
=>
	(set-strategic-number sn-minimum-number-hunters 8)
	(set-strategic-number sn-minimum-boar-hunt-group-size 6)
	(set-strategic-number sn-minimum-boar-lure-group-size 1000)
	(up-request-hunters c: 4)
	(set-goal gl-boar-hunting-stage 2)
	(disable-self)
)

(defrule
	(timer-triggered 1)
	(goal gl-boar-hunting-stage 2)
=>
	(up-retask-gatherers boar-food c: 2)
	(enable-timer 1 boar-time); 30 for mongols on michi, otherwise 40
	(set-strategic-number sn-minimum-boar-hunt-group-size boar-hunt-support-villagers); 0
	(set-strategic-number sn-minimum-number-hunters boar-hunt-support-villagers); 1
	(set-strategic-number sn-maximum-hunt-drop-distance 32)
	(set-strategic-number sn-minimum-boar-lure-group-size 0); 1
	(set-goal gl-boar-hunting-stage 3)
	(disable-self)
)

(defrule
	(dropsite-min-distance live-boar > 8)
	(goal gl-boar-hunting-stage 3)
	(unit-type-count villager-hunter == 1); The lurer of second boar
	(or	(up-remaining-boar-amount < 330)
		(up-remaining-boar-amount == 65535))
	(goal gl-boar-eaten 1)
=>
	(set-strategic-number sn-minimum-boar-hunt-group-size 0)
	(set-strategic-number sn-minimum-number-hunters 1)
	(set-strategic-number sn-minimum-boar-lure-group-size 0)
	(disable-self)
)

(defrule
	(dropsite-min-distance live-boar < 8)
	(timer-triggered 1)
	(goal gl-boar-hunting-stage 3)
	(or	(up-remaining-boar-amount < 330)
		(up-remaining-boar-amount == 65535))
	(goal gl-boar-eaten 1)
=>
	(up-retask-gatherers boar-food c: 2)
	(set-strategic-number sn-minimum-boar-hunt-group-size boar-hunt-support-villagers)
	(set-strategic-number sn-minimum-number-hunters boar-hunt-support-villagers)
	(up-modify-sn sn-minimum-boar-hunt-group-size c:+ 1)
	(up-modify-sn sn-minimum-number-hunters c:+ 1)
	(set-strategic-number sn-minimum-boar-lure-group-size 0)
	(up-request-hunters c: 4)
	(set-goal gl-boar-hunting-stage 4)
	(disable-self)
)

#load-if-defined UP-MICHI-STYLE
(defrule
	(up-compare-goal gl-my-villager-count g:>= gl-villagers-to-start-boar-hunt)
	(timer-triggered 1)
	(game-time > 500)
	(or	(game-time > 570)
		(dropsite-min-distance live-boar > 32))
	(strategic-number sn-maximum-hunt-drop-distance == 32)
=>
	(set-strategic-number sn-minimum-number-hunters 0)
	(set-strategic-number sn-minimum-boar-hunt-group-size 6)
	(set-strategic-number sn-maximum-hunt-drop-distance 17)
	(set-strategic-number sn-enable-boar-hunting 1)
	(disable-self)
)
#else
(defrule
	(game-time > 270)
	(or	(game-time > 420)
		(map-type migration))
	(or	(dropsite-min-distance live-boar s:> sn-maximum-hunt-drop-distance)
		(game-time > 600))
=>
	(set-strategic-number sn-minimum-number-hunters 0)
	(set-strategic-number sn-minimum-boar-hunt-group-size 6)
	(set-strategic-number sn-maximum-hunt-drop-distance 17)
	(set-strategic-number sn-enable-boar-hunting 1)
	(disable-self)
)
#end-if

(defrule
	(up-compare-goal gl-my-villager-count g:>= gl-villagers-to-start-boar-hunt)
	(game-time < 900)
	(strategic-number sn-enable-boar-hunting == 1)
	(dropsite-min-distance deer-hunting < 27)
	(or	(unit-type-count villager-forager > 6)
		(and	(building-type-count-total farm > 2)
			(and	(up-pending-placement c: mill)
				(building-type-count-total mill == 1))))
	(unit-type-count villager-hunter < 5)
	(strategic-number sn-minimum-number-hunters < 5)
=>
	(up-modify-sn sn-minimum-number-hunters c:+ 1)
)

(defrule
	(strategic-number sn-minimum-number-hunters > 0)
	(or	(and	(unit-type-count villager-hunter > 4)
			(strategic-number sn-enable-boar-hunting == 1))
		(game-time > 900))
=>
	(set-strategic-number sn-minimum-number-hunters 0)
)
#end-if

; ================ POSITION ETC.

(defrule
	(true)
=>
	(set-goal POSITION UNKNOWN)
	(set-goal gl-market-placed NO)
	(set-goal gl-monastery-placed NO)
	(set-goal gl-villagers-to-start-boar-hunt 16)
	(set-goal gl-units-required-to-spreading 25)
	(set-goal gl-boats-required-to-spreading 4)
	(set-goal gl-fixed-eco-balancing YES)
	(set-goal gl-TC-lost NO)
	(set-goal gl-enemy-flush-vills 20)
	(set-strategic-number sn-build-towers-at-home 0)
	(set-strategic-number sn-do-not-scale-for-difficulty-level 1)
	(set-strategic-number sn-local-targeting-mode 1)
	(disable-self)
)

#load-if-defined UP-ALLY-IN-GAME
#load-if-not-defined UP-POCKET-POSITION
(defrule
	(game-time > 20)
=>
	(set-goal POSITION FLANK)
	(chat-to-player my-player-number "I'm a flank")
	(disable-self)
)
#else
(defrule
	(game-time > 20)
=>
	(set-goal POSITION POCKET)
	(chat-to-player my-player-number "I'm a pocket")
	(disable-self)
)
#end-if
#end-if

(defrule
	(or	(current-age >= castle-age)
		(or	(not	(player-valid any-enemy)); Wonder race
			(or	(goal gl-nothing-style-map YES)
				(population >= imperial-villager-cap))))
	(up-compare-goal gl-my-villager-count-total > 19)
	(can-research ri-wheel-barrow)
=>
	(research ri-wheel-barrow)
)

; ============== RULES

(defrule
	(strategic-number sn-cap-civilian-builders != 200)
=>
	(set-strategic-number sn-cap-civilian-builders 200)
	(set-strategic-number sn-retask-gather-amount 0)
	(set-difficulty-parameter ability-to-maintain-distance 0)
	(set-difficulty-parameter ability-to-dodge-missiles 0)
	(set-strategic-number sn-attack-intelligence 1)
	(set-strategic-number sn-intelligent-gathering 1)
	(set-strategic-number sn-food-gatherer-percentage 100)
	(set-strategic-number sn-lumber-camp-escrow 0)
	(set-strategic-number sn-ignore-attack-group-under-attack 0)
	(set-strategic-number sn-nomad-style-start 0)
	(set-strategic-number sn-sling-control 0)
	(set-goal gl-range-placed NO)
	(set-goal gl-stable-placed NO)
	(set-goal FFA NO)
)

(defrule
	(or	(and	(up-compare-const gv-nomad-style == 0)
			(not	(map-type nomad)))
		(and	(strategic-number sn-cap-civilian-explorers == 0)
			(game-time > 1500)))
=>
	(up-jump-rule 4)
)

(defrule
	(game-time < 8)
=>
	(set-strategic-number sn-cap-civilian-explorers 100)
	(set-strategic-number sn-percent-civilian-explorers 100)
	(set-strategic-number sn-percent-civilian-builders 0)
	(set-strategic-number sn-percent-civilian-gatherers 0)
	(set-strategic-number sn-cap-civilian-gatherers 0)
	(set-strategic-number sn-number-explore-groups 6)
	(set-strategic-number sn-total-number-explorers 6)
	(set-strategic-number sn-nomad-style-start 1)
)

(defrule
	(building-type-count town-center > 0)
=>
	(set-strategic-number sn-cap-civilian-explorers 0)
	(set-strategic-number sn-percent-civilian-explorers 0)
	(set-strategic-number sn-percent-civilian-builders 0)
	(set-strategic-number sn-percent-civilian-gatherers 100)
	(set-strategic-number sn-cap-civilian-gatherers 200)
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(set-strategic-number sn-target-evaluation-range 1)
	(set-strategic-number sn-town-center-start 1)
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(disable-self)
)

(defrule
	(up-compare-const gv-multiplayer-game == 0); MP+rec bugs villager explorers
	(or	(up-compare-goal gl-my-villager-count-total >= 17)
		(and	(wood-amount > 250)
			(building-type-count town-center > 0)))
	(goal gl-current-age gv-feudal)
	(soldier-count == 0)
=>
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
	(set-strategic-number sn-cap-civilian-explorers 1)
	(set-strategic-number sn-percent-civilian-explorers 65); Ensure someone goes to explore
)

(defrule
	(or	(soldier-count > 0)
		(up-compare-goal gl-current-age >= gv-feudal-up))
	(strategic-number sn-cap-civilian-explorers > 0)
=>
	(set-strategic-number sn-cap-civilian-explorers 0)
	(set-strategic-number sn-percent-civilian-explorers 0)
	(set-strategic-number sn-target-evaluation-range 0)
)

; ...

(defrule
	(strategic-number sn-initial-exploration-required != 0)
=>
	(set-strategic-number sn-cap-civilian-explorers 0)
	(set-strategic-number sn-percent-civilian-explorers 0)
	(set-strategic-number sn-percent-civilian-builders 0)
	(set-strategic-number sn-percent-civilian-gatherers 100)
	(set-strategic-number sn-cap-civilian-gatherers 0)
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
	(set-strategic-number sn-maximum-food-drop-distance default-food-drop-distance)
	(set-strategic-number sn-maximum-hunt-drop-distance 0)
	(set-strategic-number sn-maximum-wood-drop-distance 6)
	(set-strategic-number sn-maximum-gold-drop-distance 6)
	(set-strategic-number sn-maximum-stone-drop-distance 6)
	(set-strategic-number sn-camp-max-distance 20)
	(set-strategic-number sn-initial-exploration-required 0)
	(set-strategic-number sn-threat-level 0)
)

(defrule
	(true)
=>
	(set-strategic-number sn-allow-new-build-order 1)
	(set-strategic-number sn-preferred-mill-placement 0)
	(set-goal gl-boar-eaten 0)
	(set-goal gl-required-current-age-time 70)
	(set-goal gl-trash-war-vill-limit-pop almost-full-pop)
	(up-modify-goal gl-trash-war-vill-limit-pop c:* 9)
	(up-modify-goal gl-trash-war-vill-limit-pop c:/ 10)
	(set-goal gl-chat-sent NO)
	(set-goal gl-enemy-sling 10)
	(set-goal gl-castle-sling-order castle-sling-priority)
	(set-goal gl-sling-towers 1)
	(up-set-defense-priority c: wonder c: 30000)
	(up-set-offense-priority c: wonder c: 11)
	(set-strategic-number sn-minimum-boar-lure-group-size 1000)
	(disable-self)
)

#load-if-not-defined SCANDANAVIA-MAP
(defrule
	(soldier-count > 0)
	(game-time s:> sn-home-exploration-time)
	(goal gl-boar-stealing -1)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(nand	(game-time < 320)
		(and	(goal gl-DRUSH NO)
			(and	(up-compare-goal gl-strategy-aggressiveness-level <= LOW)
				(goal POSITION POCKET)))); We don't have to scout for ally flank to find its opponent
=>
	(up-send-scout group-type-land-explore gv-scouting-type); Flank for flanks, mirror for pockets
	(disable-self)
)
#else
(defrule
	(soldier-count > 0)
	(goal gl-boar-stealing -1)
	(building-type-count-total dock == 0)
	(game-time > 300)
	(game-time < 310)
=>
	(set-strategic-number sn-home-exploration-time 300)
	(up-send-scout group-type-land-explore scout-corner)
	(chat-to-player my-player-number "Attempting to find a place for the dock")
	(disable-self)
)

(defrule
	(soldier-count > 0)
	(goal gl-boar-stealing -1)
	(building-type-count-total dock > 0)
	(game-time s:> sn-home-exploration-time)
	(nand	(game-time < 320)
		(and	(goal gl-DRUSH NO)
			(and	(up-compare-goal gl-strategy-aggressiveness-level <= LOW)
				(goal POSITION POCKET)))); We don't have to scout for ally flank to find its opponent
=>
	(up-send-scout group-type-land-explore gv-scouting-type)
	(disable-self)
)
#end-if

(defrule
	(goal gl-boar-stealing -1)
	(or	(game-time > 1500)
		(and	(death-match-game)
			(player-in-game any-ally)))
	(game-time > 200)
	(players-building-count every-enemy > 0)
=>
	(up-send-scout group-type-land-explore scout-corner)
	(disable-self)
)

(defrule
	(warboat-count > 0)
	(strategic-number sn-number-boat-explore-groups > 0)
=>
	(up-send-scout group-type-water-explore gv-scouting-type)
	(disable-self)
)

#load-if-not-defined DEATH-MATCH
(defrule
	(or	(and	(strategic-number sn-camp-max-distance >= 27)
			(game-time >= 3000))
		(up-compare-goal gl-scattered-islets-style >= 1))
=>
	(up-jump-rule 3)
)

(defrule
	(game-time > backup-lumber-time); 90 in defend the wonder, otherwise 360
	(strategic-number sn-maximum-wood-drop-distance < 19)
	(or	(and	(unit-type-count villager-wood == 0)
			(building-type-count-total lumber-camp == 0))
		(and	(dropsite-min-distance wood > 4)
			(wood-amount < 100)))
	(or	(strategic-number sn-defer-dropsite-update == 0)
		(up-pending-objects c: lumber-camp < 1))
	(strategic-number sn-camp-max-distance < 27)
=>
	(set-strategic-number sn-camp-max-distance 30)
	(set-strategic-number sn-maximum-wood-drop-distance 19)
	(chat-to-player my-player-number "Try to save the day with high wood drop distance")
)

(defrule
	(game-time > backup-lumber-time)
	(strategic-number sn-maximum-wood-drop-distance < 19)
	(or	(and	(unit-type-count villager-wood == 0)
			(building-type-count-total lumber-camp == 0))
		(and	(dropsite-min-distance wood > 4)
			(wood-amount < 100)))
	(or	(strategic-number sn-defer-dropsite-update == 0)
		(up-pending-objects c: lumber-camp < 1))
	(strategic-number sn-camp-max-distance >= 27)
=>
	(set-strategic-number sn-camp-max-distance 37)
	(set-strategic-number sn-maximum-wood-drop-distance 19)
	(chat-to-player my-player-number "Try to save the day with high wood drop distance")
)

(defrule
	(game-time < 3000)
	(dropsite-min-distance wood < 4)
	(strategic-number sn-maximum-wood-drop-distance == 19)
=>
	(set-strategic-number sn-maximum-wood-drop-distance 5)
)
#end-if

(defrule
	(strategic-number sn-lumber-camp-escrow == 0)
	(up-compare-goal gl-scattered-islets-style <= 0)
	(game-time > 420)
	(or	(strategic-number sn-defer-dropsite-update == 0)
		(up-pending-objects c: lumber-camp < 1))
	(resource-found wood)
	(dropsite-min-distance wood > 4)
	(dropsite-min-distance wood < 255)
	(wood-amount < 100)
=>
	(set-escrow-percentage wood 100)
	(set-strategic-number sn-lumber-camp-escrow 1)
)

(defrule
	(strategic-number sn-lumber-camp-escrow == 1)
	(or	(and	(dropsite-min-distance wood < 5)
			(dropsite-min-distance wood < 255))
		(wood-amount >= 100))
=>
	(set-escrow-percentage wood 0)
	(release-escrow wood)
	(set-strategic-number sn-lumber-camp-escrow 0)
)

(defrule
	(game-time > 420)
	(up-compare-goal gl-scattered-islets-style <= 0)
	(or	(up-pending-objects c: lumber-camp < 1)
		(and	(building-type-count-total lumber-camp < 20)
			(strategic-number sn-defer-dropsite-update == 0)))
	(dropsite-min-distance wood > 4)
	(dropsite-min-distance wood < 255)
	(can-build-with-escrow lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-escrow-percentage wood 0)
	(release-escrow wood)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(build lumber-camp)
)

#load-if-not-defined DEATH-MATCH
(defrule
	(or	(game-time > 600)
		(goal gl-nothing-style-map YES))
	(strategic-number sn-percent-civilian-explorers == 0)
	(or	(and	(building-type-count town-center == 0)
			(goal gl-TC-lost YES))
		(or	(and	(building-type-count-total mill > 0)
				(game-time > 1800))
			(goal gl-nothing-style-map YES)))
=>
	(up-jump-rule 7)
)

(defrule
	(building-type-count-total town-center > 0)
	(not	(resource-found food))
	(building-type-count-total mill == 0)
	(wood-amount >= 100)
	(unit-type-count-total sheep == 0)
	(or	(dropsite-min-distance food == -1)
		(dropsite-min-distance food > 7))
=>
	(set-strategic-number sn-cap-civilian-explorers 100)
	(set-strategic-number sn-percent-civilian-explorers 100)
	(set-strategic-number sn-percent-civilian-gatherers 0)
	(set-strategic-number sn-number-explore-groups 7)
	(set-strategic-number sn-total-number-explorers 7)
	(set-strategic-number sn-target-evaluation-ally-proximity 100)
	(disable-self)
)

(defrule
	(game-time > 7)
	(building-type-count-total town-center > 0)
	(or	(resource-found food)
		(unit-type-count-total sheep > 0))
=>
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
	(set-strategic-number sn-percent-civilian-gatherers 100)
	(set-strategic-number sn-cap-civilian-gatherers 200)
	(set-strategic-number sn-cap-civilian-explorers 0)
	(set-strategic-number sn-percent-civilian-explorers 0)
	(set-strategic-number sn-target-evaluation-ally-proximity 100)
	(disable-self)
)

(defrule
	(game-time > 15)
	(building-type-count-total town-center > 0)
	(building-type-count-total mill == 0)
	(wood-amount >= 100)
	(strategic-number sn-target-evaluation-ally-proximity == 100)
	(unit-type-count-total sheep == 0)
	(or	(dropsite-min-distance food == -1)
		(dropsite-min-distance food > 7))
=>
	(set-strategic-number sn-cap-civilian-explorers 100)
	(set-strategic-number sn-percent-civilian-explorers 100)
	(set-strategic-number sn-percent-civilian-gatherers 0)
	(set-strategic-number sn-cap-civilian-gatherers 0)
	(set-strategic-number sn-number-explore-groups 7)
	(set-strategic-number sn-total-number-explorers 7)
	(disable-self)
)

(defrule
	(or	(and	(or	(resource-found food)
				(cc-players-unit-type-count 0 forage-bush == 0))
			(building-type-count-total mill > 0))
		(or	(unit-type-count-total sheep > 0)
			(or	(and	(dropsite-min-distance food >= 0)
					(dropsite-min-distance food < 5))
				(up-compare-goal gl-scattered-islets-style >= 3))))
	(strategic-number sn-target-evaluation-ally-proximity == 100)
=>
	(set-strategic-number sn-target-evaluation-ally-proximity 50)
)

(defrule
	(current-age != dark-age)
=>
	(up-jump-rule 1)
)

(defrule
	(goal gl-normal-milling 1)
	(up-compare-goal gl-scattered-islets-style <= 0)
	(up-compare-goal gl-my-villager-count-total > 7)
	(building-type-count-total mill == 0)
	(wood-amount >= 100)
	(cc-players-unit-type-count 0 forage-bush > 0)
	(game-time > 200)
=>
	(set-strategic-number sn-cap-civilian-explorers 100)
	(set-strategic-number sn-percent-civilian-explorers 100)
	(set-strategic-number sn-percent-civilian-gatherers 0)
	(set-strategic-number sn-cap-civilian-gatherers 0)
	(set-strategic-number sn-number-explore-groups 7)
	(set-strategic-number sn-total-number-explorers 7)
	(set-strategic-number sn-minimum-civilian-explorers 6)
	(set-strategic-number sn-target-evaluation-ally-proximity 80)
	(disable-self)
)

(defrule
	(building-type-count-total mill > 0)
	(strategic-number sn-target-evaluation-ally-proximity < 9999)
	(strategic-number sn-target-evaluation-ally-proximity != 20)
	(strategic-number sn-target-evaluation-ally-proximity != 30)
	(strategic-number sn-target-evaluation-ally-proximity != 40)
	(strategic-number sn-target-evaluation-ally-proximity != 50)
	(or	(strategic-number sn-target-evaluation-ally-proximity == 80)
		(game-time > 420))
=>
	(set-strategic-number sn-target-evaluation-ally-proximity 50)
	(set-strategic-number sn-minimum-civilian-explorers 0)
	(chat-to-player my-player-number "Stop scouting for mill")
)

(defrule
	(strategic-number sn-target-evaluation-ally-proximity == 50)
=>
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
	(set-strategic-number sn-percent-civilian-gatherers 100)
	(set-strategic-number sn-cap-civilian-gatherers 200)
	(set-strategic-number sn-cap-civilian-explorers 0)
	(set-strategic-number sn-percent-civilian-explorers 0)
	(set-strategic-number sn-minimum-civilian-explorers 0)
	(set-strategic-number sn-target-evaluation-ally-proximity 20)
)
#end-if

(defrule
	(strategic-number sn-consecutive-idle-unit-limit != 0)
=>
	(set-strategic-number sn-target-evaluation-ally-proximity 20)
	(set-strategic-number sn-task-ungrouped-soldiers 0)
	(set-strategic-number sn-consecutive-idle-unit-limit 0)
	(set-strategic-number sn-mill-max-distance gv-starting-mill-distance)
	(set-strategic-number sn-zero-priority-distance 144)
	(set-goal gl-unit-spreading NO)
	(set-goal gl-unit-spreading-count 0)
	(enable-timer 1 0)
)

(defrule
	(goal gl-unit-spreading YES)
=>
	(set-goal gl-unit-spreading NO)
	(set-strategic-number sn-task-ungrouped-soldiers 0)
)

(defrule
	(up-timer-status 50 != timer-running)
	(or	(goal TSA 0)
		(and	(up-compare-const gv-michi-style == 1)
			(players-building-count every-enemy == 0)))
	(military-population g:> gl-units-required-to-spreading)
	(up-compare-goal gl-unit-spreading-count < 3)
	(goal gl-unit-spreading NO)
=>
	(set-goal gl-unit-spreading YES)
	(up-modify-goal gl-unit-spreading-count c:+ 1)
	(up-modify-goal gl-units-required-to-spreading c:+ 15)
	(set-strategic-number sn-task-ungrouped-soldiers 1)
	(chat-to-player my-player-number "Spread units!")
)

(defrule
	(goal TSA 0)
	(warboat-count g:> gl-boats-required-to-spreading)
	(up-compare-goal gl-unit-spreading-count < 7)
	(goal gl-unit-spreading NO)
=>
	(set-goal gl-unit-spreading YES)
	(up-modify-goal gl-unit-spreading-count c:+ 1)
	(up-modify-goal gl-boats-required-to-spreading c:+ 8)
	(set-strategic-number sn-task-ungrouped-soldiers 1)
	(chat-to-player my-player-number "Spread units!")
)

(defrule
	(strategic-number sn-target-evaluation-in-progress != 0)
=>
	(set-strategic-number sn-garrison-rams 0)
	(set-strategic-number sn-sentry-distance 12)
	(set-strategic-number sn-sentry-distance-variation 0)
	(set-strategic-number sn-town-center-placement 0)
	(set-strategic-number sn-minimum-water-body-size-for-dock 998)
	(set-strategic-number sn-target-evaluation-in-progress 0)
	(set-strategic-number sn-age-up-castle 0)
	(set-strategic-number sn-unit-spreading 0)
	(set-strategic-number sn-threat-level 0)
	(set-strategic-number sn-allow-resource-spending 0)
	(set-strategic-number sn-upgrade-eagles 0)
)

(defrule
	(current-age >= castle-age)
	(current-age-time > 50)
	(game-time > 310)
	(strategic-number sn-coop-share-information == 1)
=>
	(up-jump-rule 5)
)

(defrule
	(true)
=>
	(set-strategic-number sn-maximum-town-size 9)
	(set-strategic-number sn-garrison-rams 0)
	(set-strategic-number sn-blot-size 1)
	(set-strategic-number sn-blot-exploration-map 0)
	(disable-self)
)

(defrule
	(game-time < 40)
	(building-type-count-total lumber-camp == 0)
	(building-type-count-total town-center == 0)
	(players-building-type-count any-ally lumber-camp == 0)
=>
	(up-jump-rule 1)
)

(defrule
	(strategic-number sn-stone-defend-priority != 2)
=>
	(set-strategic-number sn-percent-enemy-sighted-response 100)
	(set-strategic-number sn-enemy-sighted-response-distance 7)
	(set-strategic-number sn-scale-minimum-attack-group-size 0)
	(set-strategic-number sn-scale-maximum-attack-group-size 0)
	(set-strategic-number sn-group-form-distance 0)
	(set-strategic-number sn-attack-group-gather-spacing 3)
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-gold-defend-priority 1)
	(set-strategic-number sn-stone-defend-priority 2)
	(set-strategic-number sn-heresy-escrow 1)
	(set-strategic-number sn-coop-share-attacking 1)
	(set-strategic-number sn-coop-share-information 1)
	(enable-timer 2 0)
	(set-goal D-TSA 0)
)

(defrule
	(wood-amount >= 50)
	(or	(not	(resource-found food))
		(building-type-count-total mill > 0))
	(or	(civ-selected japanese)
		(wood-amount >= 100))
	(game-time > 50)
	(up-compare-const gv-grouped-by-team == 1)
	(strategic-number sn-mill-max-distance != 20)
=>
	(set-strategic-number sn-mill-max-distance 30)
	(disable-self)
)

(defrule
	(or	(current-age == castle-age)
		(and	(current-age == feudal-age)
			(or	(and	(building-type-count-total town-center > 1)
					(current-age-time > 120))
				(game-time > 1500))))
	(game-time > 300)
=>
	(set-strategic-number sn-camp-max-distance 26)
	(set-strategic-number sn-mill-max-distance 20)
	(set-strategic-number sn-livestock-defend-priority 0)
	(enable-timer 5 0)
	(disable-self)
)

(defrule
	(up-compare-goal MILITARY != 1)
	(or	(and	(strategic-number sn-minimum-water-body-size-for-dock != 1999)
			(and	(strategic-number sn-minimum-water-body-size-for-dock != 2001)
				(and	(up-compare-goal gl-strategy != war-galley-rush)
					(up-compare-goal gl-strategy != fire-ship-rush))))
		(warboat-count < 7))
	(strategic-number sn-enemy-sighted-response-distance != 7)
	(current-age >= castle-age)
=>
	(set-strategic-number sn-percent-enemy-sighted-response 100)
	(set-strategic-number sn-enemy-sighted-response-distance 7)
)

(defrule
	(or	(and	(goal gl-strategy eew-strategy)
			(and	(current-age >= castle-age)
				(goal MILITARY 1)))
		(and	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
			(warboat-count > 6)))
	(strategic-number sn-enemy-sighted-response-distance != 27)
=>
	(set-strategic-number sn-percent-enemy-sighted-response 100)
	(set-strategic-number sn-enemy-sighted-response-distance 27)
)

(defrule
	(or	(strategic-number sn-minimum-water-body-size-for-dock == 1999)
		(or	(strategic-number sn-minimum-water-body-size-for-dock == 2001)
			(or	(goal MILITARY 0)
				(or	(and	(hold-koh-ruin)
						(game-time > 2300))
					(players-military-population any-enemy > 34)))))
=>
	(up-jump-rule 4)
)

(defrule
	(or	(population > almost-full-pop)
		(soldier-count > 80))
	(strategic-number sn-allow-resource-spending > 5)
	(or	(unit-type-count-total battering-ram-line > 2)
		(unit-type-count-total trebuchet-set > 0))
	(players-military-population every-enemy < 5)
	(strategic-number sn-maximum-town-size < 255)
=>
	(set-strategic-number sn-number-explore-groups 10)
	(set-strategic-number sn-total-number-explorers 10)
	(set-strategic-number sn-task-ungrouped-soldiers 1)
	(set-strategic-number sn-maximum-town-size 254)
	(set-strategic-number sn-disable-attack-groups 0)
)

(defrule
	(goal MILITARY 1)
	(soldier-count > 60)
	(or	(unit-type-count-total battering-ram-line > 2)
		(unit-type-count-total trebuchet-set > 0))
	(current-age == imperial-age)
	(strategic-number sn-allow-resource-spending > 5)
	(players-current-age target-player <= castle-age)
	(players-current-age focus-player <= castle-age)
	(players-military-population target-player < 35)
	(players-military-population focus-player < 35)
	(strategic-number sn-maximum-town-size < 254)
=>
	(set-strategic-number sn-maximum-town-size 255)
)

(defrule
	(goal MILITARY 1)
	(soldier-count > 60)
	(or	(unit-type-count-total battering-ram-line > 2)
		(unit-type-count-total trebuchet-set > 0))
	(players-military-population target-player < 10)
	(players-military-population focus-player < 10)
	(strategic-number sn-maximum-town-size < 254)
=>
	(set-strategic-number sn-maximum-town-size 255)
)

(defrule
	(gold-amount > 1200)
	(population > 190)
	(players-population any-ally > 180)
	(unit-type-count-total battering-ram-line > 5)
	(not	(player-in-game every-enemy))
	(players-military-population every-enemy < 25)
	(strategic-number sn-maximum-town-size < 254)
=>
	(set-strategic-number sn-number-explore-groups 10)
	(set-strategic-number sn-total-number-explorers 10)
	(set-strategic-number sn-task-ungrouped-soldiers 1)
	(set-strategic-number sn-maximum-town-size 254)
	(set-strategic-number sn-disable-attack-groups 0)
)

(defrule
	(or	(up-compare-goal gl-current-age >= gv-feudal-up)
		(game-time > 1200))
=>
	(set-strategic-number sn-maximum-hunt-drop-distance 14)
	(set-strategic-number sn-monk-trained 0)
	(disable-self)
)

(defrule
	(not	(death-match-game))
	(game-time > 900)
	(or	(game-time > 1500)
		(unit-type-count villager-wood < 10))
	(game-time < 3000)
	(strategic-number sn-maximum-wood-drop-distance < 15)
	(strategic-number sn-maximum-wood-drop-distance >= 0)
	(goal gl-TC-lost NO)
=>
	(set-strategic-number sn-maximum-gold-drop-distance 12)
	(set-strategic-number sn-maximum-wood-drop-distance 15)
	(set-strategic-number sn-maximum-food-drop-distance 12)
	(set-strategic-number sn-maximum-hunt-drop-distance 17)
	(set-strategic-number sn-maximum-stone-drop-distance 12)
	(disable-self)
)

#load-if-defined TINY-MAP
(defrule
	(not	(death-match-game))
	(game-time > 3000)
	(goal gl-TC-lost NO)
=>
	(set-strategic-number sn-maximum-gold-drop-distance 15)
	(set-strategic-number sn-maximum-wood-drop-distance 15)
	(set-strategic-number sn-maximum-food-drop-distance 15)
	(set-strategic-number sn-maximum-hunt-drop-distance 27)
	(set-strategic-number sn-maximum-stone-drop-distance 15)
	(set-strategic-number sn-allow-civilian-defense 1)
	(disable-self)
)

(defrule
	(or	(game-time > 4200)
		(death-match-game))
	(goal gl-TC-lost NO)
=>
	(set-strategic-number sn-maximum-gold-drop-distance 25)
	(set-strategic-number sn-maximum-wood-drop-distance 40)
	(set-strategic-number sn-maximum-food-drop-distance 25)
	(set-strategic-number sn-maximum-hunt-drop-distance 40)
	(set-strategic-number sn-maximum-stone-drop-distance 25)
	(disable-self)
)
#else
(defrule
	(not	(death-match-game))
	(game-time > 3600)
	(goal gl-TC-lost NO)
=>
	(set-strategic-number sn-maximum-gold-drop-distance 15)
	(set-strategic-number sn-maximum-wood-drop-distance 15)
	(set-strategic-number sn-maximum-food-drop-distance 15)
	(set-strategic-number sn-maximum-hunt-drop-distance 27)
	(set-strategic-number sn-maximum-stone-drop-distance 15)
	(set-strategic-number sn-allow-civilian-defense 1)
	(disable-self)
)

(defrule
	(or	(game-time > 4800)
		(death-match-game))
	(goal gl-TC-lost NO)
=>
	(set-strategic-number sn-maximum-gold-drop-distance 25)
	(set-strategic-number sn-maximum-wood-drop-distance 40)
	(set-strategic-number sn-maximum-food-drop-distance 25)
	(set-strategic-number sn-maximum-hunt-drop-distance 40)
	(set-strategic-number sn-maximum-stone-drop-distance 25)
	(disable-self)
)
#end-if

#load-if-not-defined MIGRATION-MAP
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age <= castle-age)
	(or	(and	(town-under-attack)
			(goal gl-strategy-control eew-strategy))
		(and	(unit-type-count eagle-warrior-line < 1)
			(unit-type-count scout-cavalry-line < 1)))
	(players-building-count any-enemy > 0)
	(players-military-population any-enemy > 1)
=>
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(up-reset-scouts)
	(disable-self)
)
#end-if

(defrule
	(up-compare-goal MILITARY < 1)
	(up-compare-goal TSA < 1)
	(game-time > 1700)
	(nand	(map-type migration)
		(strategic-number sn-minimum-water-body-size-for-dock >= 1999))
	(players-building-count any-enemy > 0)
	(or	(current-age == imperial-age)
		(players-building-count any-enemy > 4))
	(strategic-number sn-number-explore-groups != 0)
=>
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
)

(defrule
	(game-time > 1200)
	(players-building-count every-enemy == 0)
	(strategic-number sn-number-explore-groups < 1)
=>
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
)

(defrule
	(or	(and	(current-age-time > 360)
			(or	(current-age == imperial-age)
				(game-time > 1800)))
		(or	(timer-triggered 8)
			(and	(up-compare-goal gl-current-age >= gv-dark-up)
				(strategic-number sn-nomad-style-start == 1))))
	(strategic-number sn-town-center-placement == 0)
	(strategic-number sn-camp-max-distance < 40)
=>
	(set-strategic-number sn-camp-max-distance 40)
	(set-difficulty-parameter ability-to-maintain-distance 90)
)

(defrule
	(game-time > 1800)
	(or	(building-type-count-total mining-camp > 5)
		(and	(game-time > 2100)
			(building-type-count-total town-center > 2)))
	(strategic-number sn-defer-dropsite-update == 0)
=>
	(set-strategic-number sn-defer-dropsite-update 1)
)

(defrule
	(or	(game-time > 2000)
		(death-match-game))
	(game-time > 700)
	(strategic-number sn-town-center-placement == 0)
	(strategic-number sn-camp-max-distance < 63)
=>
	(set-strategic-number sn-camp-max-distance 63)
)

#load-if-not-defined BLACK-FOREST-MAP
(defrule
	(or	(game-time > 2400)
		(death-match-game))
	(game-time > 600)
	(strategic-number sn-town-center-placement == 0)
	(strategic-number sn-camp-max-distance < 75)
=>
	(set-strategic-number sn-camp-max-distance 75)
)

(defrule
	(or	(game-time > 3000)
		(death-match-game))
	(game-time > 1500)
	(strategic-number sn-town-center-placement == 0)
	(strategic-number sn-camp-max-distance < 100)
=>
	(set-strategic-number sn-camp-max-distance 100)
)

(defrule
	(or	(game-time > 4000)
		(death-match-game))
	(game-time > 3000)
	(strategic-number sn-town-center-placement == 0)
	(strategic-number sn-camp-max-distance < 150)
=>
	(set-strategic-number sn-camp-max-distance 150)
)
#else
(defrule
	(or	(game-time > 3600)
		(death-match-game))
	(game-time > 600)
	(strategic-number sn-town-center-placement == 0)
	(strategic-number sn-camp-max-distance < 75)
=>
	(set-strategic-number sn-camp-max-distance 75)
)

(defrule
	(game-time > 4800)
	(strategic-number sn-town-center-placement == 0)
	(strategic-number sn-camp-max-distance < 100)
=>
	(set-strategic-number sn-camp-max-distance 100)
)

(defrule
	(game-time > 7200)
	(strategic-number sn-town-center-placement == 0)
	(strategic-number sn-camp-max-distance < 150)
=>
	(set-strategic-number sn-camp-max-distance 150)
)
#end-if

#load-if-not-defined DEATH-MATCH
#load-if-defined ARENA-MAP
(load-random 40 "Barbarian_2.0\ScoutDefence")
#end-if
#load-if-not-defined UP-GROUPED-BY-TEAM
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(goal D-TSA 0)
	(or	(and	(current-age >= feudal-age)
			(current-age-time > 7))
		(and	(game-time > 700)
			(up-compare-const gv-dark-age-end == 1)))
=>
	(up-modify-goal gl-my-maximum-town-size c:= basic-town-size)
	(set-goal gl-town-size-increasing-time 140)
	(up-modify-goal gl-town-size-increasing-time c:* relative-gt-multiplier)
	(up-modify-goal gl-town-size-increasing-time c:/ relative-gt-divider)
	(disable-self)
)
#else
(defrule
	(goal D-TSA 0)
	(or	(and	(current-age >= feudal-age)
			(current-age-time > 7))
		(and	(game-time > 700)
			(up-compare-const gv-dark-age-end == 1)))
=>
	(up-modify-goal gl-my-maximum-town-size c:= basic-town-size)
	(set-goal gl-town-size-increasing-time 70)
	(up-modify-goal gl-town-size-increasing-time c:* relative-gt-multiplier)
	(up-modify-goal gl-town-size-increasing-time c:/ relative-gt-divider)
	(disable-self)
)
#end-if

(defrule
	(goal D-TSA 0)
	(current-age == feudal-age)
	(current-age-time > 7)
	(game-time < 1200)
	(or	(goal gl-strategy fi-monk-rush)
		(or	(goal gl-eew-strategy-type fast-imp)
			(or	(goal gl-strategy heavy-krush)
				(goal gl-strategy turkish-fast-imp))))
=>
	(up-modify-goal gl-town-size-increasing-time c:+ 30)
	(disable-self)
)
#else
(defrule
	(goal D-TSA 0)
	(or	(and	(current-age >= feudal-age)
			(current-age-time > 7))
		(and	(game-time > 700)
			(up-compare-const gv-dark-age-end == 1)))
=>
	(up-modify-goal gl-my-maximum-town-size c:= basic-town-size)
	(set-goal gl-town-size-increasing-time 70)
	(up-modify-goal gl-town-size-increasing-time c:* relative-gt-multiplier)
	(up-modify-goal gl-town-size-increasing-time c:/ relative-gt-divider)
	(disable-self)
)
#end-if
#else
(defrule
	(true)
=>
	(up-modify-goal gl-my-maximum-town-size c:= basic-town-size)
	(set-goal gl-town-size-increasing-time 20)
	(up-modify-goal gl-town-size-increasing-time c:* relative-gt-multiplier)
	(up-modify-goal gl-town-size-increasing-time c:/ relative-gt-divider)
	(disable-self)
)

(defrule
	(game-time > 300)
=>
	(set-goal gl-town-size-increasing-time 80)
	(up-modify-goal gl-town-size-increasing-time c:* relative-gt-multiplier)
	(up-modify-goal gl-town-size-increasing-time c:/ relative-gt-divider)
	(disable-self)
)
#end-if

#load-if-not-defined DARK-AGE-END
(defrule
	(goal D-TSA 0)
	(current-age >= feudal-age)
	(current-age-time > 7)
	(game-time g:> gl-game-time-required)
	(or	(up-compare-goal gl-my-maximum-town-size < 35)
		(or	(population > 350)
			(and	(map-type migration)
				(up-compare-goal gl-migration-progress >= 4))))
	(up-compare-goal gl-my-maximum-town-size < 41)
=>
	(up-modify-goal gl-my-maximum-town-size c:+ 1)
	(up-modify-goal gl-game-time-required g:+ gl-town-size-increasing-time)
)
#else
(defrule
	(goal D-TSA 0)
	(game-time > 700)
	(game-time g:> gl-game-time-required)
	(or	(up-compare-goal gl-my-maximum-town-size < 35)
		(population > 350))
	(up-compare-goal gl-my-maximum-town-size < 41)
=>
	(up-modify-goal gl-my-maximum-town-size c:+ 1)
	(up-modify-goal gl-game-time-required g:+ gl-town-size-increasing-time)
)
#end-if

(defrule
	(goal D-TSA 0)
	(or	(and	(current-age >= feudal-age)
			(current-age-time > 7))
		(and	(game-time > 700)
			(up-compare-const gv-dark-age-end == 1)))
	(population < 30)
	(players-military-population any-enemy > 50)
	(players-population any-enemy > 120)
	(population-headroom > 7)
	(up-compare-goal gl-my-maximum-town-size > 15)
=>
	(up-modify-goal gl-my-maximum-town-size c:= 15)
	(set-goal gl-town-size-increasing-time 100)
)

(defrule
	(goal D-TSA 0)
	(or	(and	(current-age >= feudal-age)
			(current-age-time > 7))
		(and	(game-time > 700)
			(up-compare-const gv-dark-age-end == 1)))
	(strategic-number sn-maximum-town-size g:< gl-my-maximum-town-size)
	(nand	(goal gl-eew-strategy-type fast-imp)
		(and	(goal gl-enemy-strategy EAGLERUSH)
			(strategic-number sn-maximum-town-size == 10)))
=>
	(up-modify-sn sn-maximum-town-size g:= gl-my-maximum-town-size)
	(up-chat-data-to-player my-player-number "TS %d" g: gl-my-maximum-town-size)
)

(defrule
	(or	(current-age >= feudal-age)
		(up-compare-const gv-dark-age-end == 1))
	(or	(and	(timer-triggered 9)
			(nor	(town-under-attack)
				(goal D-TSA 2)))
		(and	(current-age >= castle-age)
			(timer-triggered 2)))
	(up-compare-goal D-TSA != 0)
=>
	(set-goal D-TSA 0)
	(chat-to-player my-player-number "Reset D-TSA")
	(set-strategic-number sn-maximum-town-size 8)
)

#load-if-defined KING-OF-THE-HILL
(defrule
	(game-time > 2200)
=>
	(up-jump-rule 1)
	(set-strategic-number sn-disable-defend-groups 1)
	(set-goal TSA 0)
	(set-strategic-number sn-maximum-town-size 36)
)
#else
(load "Barbarian_2.0/RaidTheCamps")
#end-if
(defrule
	(or	(current-age >= castle-age)
		(up-compare-const gv-dark-age-end == 1))
	(goal MILITARY 1)
	(or	(strategic-number sn-percent-attack-soldiers != 0)
		(population > 190))
	(up-compare-goal TSA <= 0)
	(not	(town-under-attack))
	(players-building-count any-enemy > 0)
=>
	(set-goal TSA 1)
	(set-difficulty-parameter ability-to-maintain-distance 90)
	(set-strategic-number sn-hit-and-run 0)
)

(defrule
	(goal MILITARY 0)
	(not	(goal TSA 0))
=>
	(set-goal TSA 0)
	(up-disband-group-type group-type-land-attack)
	(up-disband-group-type group-type-water-attack)
	(set-strategic-number sn-maximum-town-size 10)
	(set-strategic-number sn-percent-attack-soldiers 1)
	(set-strategic-number sn-number-attack-groups 0)
)

(defrule
	(or	(current-age == feudal-age)
		(or	(goal gl-strategy xbow-rush)
			(or	(goal gl-strategy scorpion-rush)
				(goal gl-strategy turkish-fast-imp))))
	(goal MILITARY 0)
	(strategic-number sn-enemy-sighted-response-distance == 0)
	(nand	(players-military-population any-enemy > 7)
		(soldier-count < 6))
=>
	(set-strategic-number sn-enemy-sighted-response-distance 7)
)

(defrule
	(nor	(goal gl-strategy scrush)
		(goal gl-MICRO-CONTROL YES))
	(current-age == feudal-age)
	(goal MILITARY 1)
	(nor	(strategic-number sn-maximum-town-size == 31)
		(enemy-buildings-in-town))
	(nor	(goal TSA 1)
		(goal TSA 2))
	(players-building-count any-enemy > 0)
	(not	(town-under-attack))
=>
	(set-goal TSA 1)
	(set-strategic-number sn-enemy-sighted-response-distance 0)
)

(defrule
	(up-compare-goal gl-MICRO-CONTROL != YES)
	(goal TSA 1)
	(or	(enemy-buildings-in-town)
		(and	(town-under-attack)
			(and	(goal gl-strategy fi-monk-rush)
				(strategic-number sn-minimum-water-body-size-for-dock == 998))))
=>
	(set-goal TSA 2)
)

(defrule
	(goal TSA 2)
	(not	(enemy-buildings-in-town))
	(nand	(town-under-attack)
		(and	(goal gl-strategy fi-monk-rush)
			(strategic-number sn-minimum-water-body-size-for-dock == 998)))
=>
	(set-goal TSA 1)
)

(defrule
	(goal TSA 0)
	(building-type-count-total town-center > 0)
	(up-compare-goal MILITARY != 1)
	(up-compare-goal gl-DRUSH != YES)
	(goal D-TSA 0)
	(or	(strategic-number sn-maximum-town-size > 41)
		(and	(enemy-buildings-in-town)
			(and	(up-compare-goal gl-anti-trush != YES)
				(up-compare-goal gl-anti-castle-drop != YES))))
	(strategic-number sn-maximum-town-size > gl-my-maximum-town-size)
=>
	(up-modify-sn sn-maximum-town-size g:= gl-my-maximum-town-size)
	(up-chat-data-to-player my-player-number "TS %d" g: gl-my-maximum-town-size)
)

(defrule
	(goal TSA 1)
	(not	(enemy-buildings-in-town))
	(nand	(town-under-attack)
		(and	(goal gl-strategy fi-monk-rush)
			(strategic-number sn-minimum-water-body-size-for-dock == 998)))
	(or	(strategic-number sn-maximum-town-size >= 43)
		(up-player-distance target-player < 43))
	(strategic-number sn-maximum-town-size < 253)
=>
	(up-modify-sn sn-maximum-town-size c:+ 2)
)

(defrule
	(goal TSA 1)
	(not	(enemy-buildings-in-town))
	(nand	(town-under-attack)
		(and	(goal gl-strategy fi-monk-rush)
			(strategic-number sn-minimum-water-body-size-for-dock == 998)))
	(strategic-number sn-maximum-town-size < 43)
	(up-player-distance target-player >= 43)
=>
	(set-strategic-number sn-maximum-town-size 43)
)

#load-if-defined DIFFICULTY-HARDEST
#load-if-not-defined DARK-AGE-END
(defrule
	(or	(up-compare-goal gl-strategy-type <= controlled-flush)
		(game-time > 490))
	(nand	(goal gl-DRUSH YES)
		(game-time < 570))
	(game-time > 430)
	(current-age == dark-age)
	(strategic-number sn-enable-training-queue == 1)
=>
	(set-strategic-number sn-enable-training-queue 0)
)
#end-if
(defrule
	(or	(up-compare-goal gl-strategy-type <= controlled-flush)
		(game-time > 520))
	(game-time > 460)
	(can-research feudal-age)
=>
	(research feudal-age)
	(set-goal gl-current-age gv-dark-up)
	(enable-timer 10 0)
	(set-strategic-number sn-sling-control 0)
)

(load "Barbarian_2.0\HardestCheats")
#end-if

#load-if-not-defined DEATH-MATCH
#load-if-not-defined DEFEND-WONDER
#load-if-not-defined KING-OF-THE-HILL
#load-if-not-defined TURBO-RANDOM-MAP
#load-if-not-defined REGICIDE
#load-if-not-defined WONDER-RACE
#load-if-defined MEDIUM-RESOURCES-START
(defrule
	(or	(up-compare-goal gl-my-villager-count-total > 24)
		(up-compare-goal gl-strategy-type <= controlled-flush))
	(up-compare-goal gl-my-villager-count-total > 19)
	(goal gl-current-age gv-dark)
	(strategic-number sn-enable-training-queue == 1)
=>
	(set-strategic-number sn-enable-training-queue 0)
)
#end-if
#load-if-defined HIGH-RESOURCES-START
(defrule
	(or	(up-compare-goal gl-my-villager-count-total > 18)
		(up-compare-goal gl-strategy-type <= controlled-flush))
	(up-compare-goal gl-my-villager-count-total > 13)
	(goal gl-current-age gv-dark)
	(strategic-number sn-enable-training-queue == 1)
=>
	(set-strategic-number sn-enable-training-queue 0)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if

#load-if-defined TURBO-RANDOM-MAP
(defrule
	(or	(up-compare-goal gl-my-villager-count-total > 19)
		(or	(and	(starting-resources == medium-resources)
				(up-compare-goal gl-my-villager-count-total > 17))
			(starting-resources == high-resources)))
	(up-compare-goal gl-my-villager-count-total > 15)
	(current-age == dark-age)
	(strategic-number sn-enable-training-queue == 1)
=>
	(set-strategic-number sn-enable-training-queue 0)
)

(defrule
	(or	(up-compare-goal gl-my-villager-count-total > 19)
		(or	(and	(starting-resources == medium-resources)
				(up-compare-goal gl-my-villager-count-total > 17))
			(starting-resources == high-resources)))
	(up-compare-goal gl-my-villager-count-total > 15)
	(can-research feudal-age)
=>
	(research feudal-age)
	(set-goal gl-current-age gv-dark-up)
	(enable-timer 10 0)
	(set-strategic-number sn-sling-control 0)
)
#end-if

; ================ CALCULATED ECO BALANCING

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-TC-lost NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal gl-strategy default)
		(and	(up-compare-goal gl-current-age >= gv-castle)
			(and	(current-age-time > 180)
				(goal gl-strategy skirm-boom))))
=>
	(set-goal gl-fixed-eco-balancing NO)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(up-timer-status 3 != timer-disabled)
=>
	(disable-timer 3)
)

(defrule
	(or	(goal gl-fixed-eco-balancing YES)
		(up-timer-status 3 == timer-running))
=>
	(up-jump-rule 58)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal gl-fixed-eco-balancing NO)
	(up-timer-status 3 == timer-disabled)
=>
	(enable-timer 3 2)
	(chat-to-player my-player-number "1Enable new eco balancing")
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
=>
	(set-goal gl-food-gp-points 0)
	(set-goal gl-wood-gp-points 0)
	(set-goal gl-gold-gp-points 0)
	(set-goal gl-gp-points-total 0)
	(set-goal gl-peace-in-town NO)
	(up-get-fact food-amount 0 gl-available-food-amount)
	(up-get-fact wood-amount 0 gl-available-wood-amount)
	(up-get-fact stone-amount 0 gl-available-stone-amount)
	(up-get-fact gold-amount 0 gl-available-gold-amount)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(not	(enemy-buildings-in-town))
	(or	(and	(up-compare-goal threat-time > 10000)
			(and	(up-compare-goal MILITARY != 1)
				(and	(up-defender-count < 3)
					(up-enemy-units-in-town < 2))))
		(goal gl-strategy castle-drop)); To keep gatherer percentages stable
	(timer-triggered 3)
=>
	(set-goal gl-peace-in-town YES)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal gl-advanced-infantry heavy-swordsmen)
		(goal CASTLE 4))
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 14)
	(up-modify-goal gl-wood-gp-points c:+ 6)
	(up-modify-goal gl-gold-gp-points c:+ 6)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(or	(and	(or	(up-compare-goal gl-current-age >= gv-castle-up)
				(game-time > 3000))
			(and	(food-amount < 200)
				(civ-selected gothic)))
		(and	(game-time < 3000)
			(and	(gold-amount > 400)
				(goal gl-current-age gv-castle-up))))
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 6)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal gl-advanced-archery heavy-archers)
		(or	(goal gl-advanced-archery CAs)
			(or	(goal gl-advanced-archery scorpions)
				(and	(goal gl-advanced-archery archer-to-gun-transfer)
					(up-research-status c: ri-chemistry <= research-pending)))))
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 6)
	(up-modify-goal gl-wood-gp-points c:+ 10)
	(up-modify-goal gl-gold-gp-points c:+ 11)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal CASTLE 8)
	(up-research-status c: ri-chemistry <= research-pending)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 6)
	(up-modify-goal gl-wood-gp-points c:+ 10)
	(up-modify-goal gl-gold-gp-points c:+ 11)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal gl-advanced-archery heavy-cannoneers)
		(and	(or	(goal gl-advanced-archery archer-to-gun-transfer)
				(goal CASTLE 8))
			(research-completed ri-chemistry)))
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 11)
	(up-modify-goal gl-wood-gp-points c:+ 6)
	(up-modify-goal gl-gold-gp-points c:+ 10)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal gl-advanced-archery light-cannoneers)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 7)
	(up-modify-goal gl-wood-gp-points c:+ 4)
	(up-modify-goal gl-gold-gp-points c:+ 7)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal gl-advanced-cavalry heavy-knights)
		(research-completed ri-paladin))
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 14)
	(up-modify-goal gl-wood-gp-points c:+ 7)
	(up-modify-goal gl-gold-gp-points c:+ 14)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal gl-advanced-cavalry knight-CA)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 10)
	(up-modify-goal gl-wood-gp-points c:+ 11)
	(up-modify-goal gl-gold-gp-points c:+ 12)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal gl-advanced-cavalry knight-LC)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 15)
	(up-modify-goal gl-wood-gp-points c:+ 7)
	(up-modify-goal gl-gold-gp-points c:+ 13)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal gl-eagles extra-eagles)
		(goal CASTLE 6))
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 12)
	(up-modify-goal gl-wood-gp-points c:+ 5)
	(up-modify-goal gl-gold-gp-points c:+ 13)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(not	(goal CASTLE 0))
	(nand	(civ-selected persian)
		(and	(current-age == castle-age)
			(current-age-time < 200)))
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ castle-drop-food-gp-points)
	(up-modify-goal gl-wood-gp-points c:+ castle-drop-wood-gp-points)
	(up-modify-goal gl-gold-gp-points c:+ castle-drop-gold-gp-points)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(not	(goal CASTLE 0))
	(civ-selected persian)
	(current-age == castle-age)
	(current-age-time < 200)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 12)
	(up-modify-goal gl-wood-gp-points c:+ 14)
	(up-modify-goal gl-gold-gp-points c:+ 1)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal CASTLE 1)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 13)
	(up-modify-goal gl-wood-gp-points c:+ 14)
	(up-modify-goal gl-gold-gp-points c:+ 3)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal CASTLE 5)
		(goal gl-strategy skirm-boom))
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 11)
	(up-modify-goal gl-wood-gp-points c:+ 16)
	(up-modify-goal gl-gold-gp-points c:+ 3)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal CASTLE 9)
		(goal gl-advanced-trash YES))
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 12)
	(up-modify-goal gl-wood-gp-points c:+ 17)
	(up-modify-goal gl-gold-gp-points c:+ 3)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal gl-strategy CA-boom)
		(goal gl-strategy xbow-boom))
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 7)
	(up-modify-goal gl-wood-gp-points c:+ 11)
	(up-modify-goal gl-gold-gp-points c:+ 7)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal gl-strategy krush)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 15)
	(up-modify-goal gl-wood-gp-points c:+ 9)
	(up-modify-goal gl-gold-gp-points c:+ 12)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal gl-strategy castle-drop)
		(and	(game-time < 2400)
			(and	(not	(goal CASTLE 0))
				(goal gl-current-age gv-castle-up))))
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 4)
	(up-modify-goal gl-wood-gp-points c:+ 5)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal MILITARY 0)
		(gold-amount > 100))
	(or	(goal gl-strategy castle-drop)
		(and	(game-time < 2400)
			(and	(up-compare-goal CASTLE != 0)
				(goal gl-current-age gv-castle-up))))
	(timer-triggered 3)
=>
	(up-modify-goal gl-wood-gp-points c:+ 5)
	(up-modify-goal gl-gold-gp-points c:- 3)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(and	(building-type-count-total town-center < 2)
			(building-type-count-total town-center < preferred-TC-number))
		(and	(goal gl-advanced-cavalry heavy-knights)
			(building-type-count-total stable < 3)))
	(timer-triggered 3)
=>
	(up-modify-goal gl-wood-gp-points c:+ 5)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(and	(building-type-count-total town-center < 3)
			(and	(goal gl-peace-in-town YES)
				(building-type-count-total town-center < preferred-TC-number)))
		(and	(goal gl-advanced-cavalry heavy-knights)
			(building-type-count-total stable < 2)))
	(timer-triggered 3)
=>
	(up-modify-goal gl-wood-gp-points c:+ 3)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal gl-peace-in-town YES)
	(building-type-count-total town-center < preferred-TC-number)
	(building-type-count-total town-center < 4)
	(timer-triggered 3)
=>
	(up-modify-goal gl-wood-gp-points c:+ 4)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(building-type-count-total town-center > 1)
	(or	(and	(building-type-count-total town-center < 4)
			(and	(food-amount > 100)
				(goal gl-peace-in-town YES)))
		(and	(building-type-count-total town-center > 2)
			(and	(goal MILITARY 1)
				(building-type-count-total siege-workshop < 1))))
	(timer-triggered 3)
=>
	(up-modify-goal gl-wood-gp-points c:+ 5)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(goal gl-current-age gv-castle)
	(or	(goal gl-peace-in-town YES)
		(civilian-population > 100))
	(or	(civilian-population > 85)
		(building-type-count-total town-center > 3))
	(or	(civilian-population > 95)
		(population >= almost-full-pop))
	(building-type-count-total town-center > 2)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 10)
	(up-modify-goal gl-wood-gp-points c:+ 5)
	(up-modify-goal gl-gold-gp-points c:+ 8)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(and	(building-type-count-total farm < 20)
			(and	(up-compare-goal gl-my-villager-count-total > 50)
				(wood-amount < 150)))
		(goal gl-strategy skirm-boom))
	(timer-triggered 3)
=>
	(up-modify-goal gl-wood-gp-points c:+ 10)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-castle)
	(goal MILITARY 1)
	(wood-amount < 200)
	(or	(building-type-count-total siege-workshop < 1)
		(or	(unit-type-count-total battering-ram-line < 3)
			(and	(population > 180)
				(unit-type-count-total battering-ram-line < 6))))
	(timer-triggered 3)
=>
	(up-modify-goal gl-wood-gp-points c:+ 9)
	(up-modify-goal gl-gold-gp-points c:+ 3)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(up-compare-goal gl-my-villager-count-total < difficulty-villager-cap)
	(food-amount < 150)
	(timer-triggered 3)
	(population < almost-full-pop)
=>
	(up-modify-goal gl-food-gp-points c:+ 20)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(game-time < 1600)
	(up-compare-goal gl-my-villager-count-total < imperial-villager-cap)
	(up-compare-goal gl-my-villager-count-total < difficulty-villager-cap)
	(up-compare-goal gl-my-villager-count-total < 75)
	(food-amount >= 150)
	(food-amount < 300)
	(timer-triggered 3)
	(population < almost-full-pop)
=>
	(up-modify-goal gl-food-gp-points c:+ 7)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(goal gl-current-age gv-castle)
	(research-completed ri-required-armor-upgrade); Chain barding for non-byz
	(strategic-number sn-allow-resource-spending > 1)
	(or	(up-compare-goal gl-my-villager-count-total > 80)
		(or	(up-compare-goal gl-my-villager-count-total >= difficulty-villager-cap)
			(up-compare-goal gl-my-villager-count-total >= imperial-villager-cap)))
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 9)
	(up-modify-goal gl-gold-gp-points c:+ 10)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(building-type-count monastery > 0)
	(nand	(population > almost-full-pop)
		(population-cap < 65))
	(players-unit-type-count focus-player knight-line > 2)
	(unit-type-count-total monk < 6)
	(gold-amount < 150)
	(timer-triggered 3)
=>
	(up-modify-goal gl-gold-gp-points c:+ 7)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(building-type-count monastery > 0)
	(goal gl-strategy default)
	(up-research-status c: ri-paladin <= research-available)
	(or	(research-completed ri-champion)
		(or	(research-completed ri-elite-eagle-warrior)
			(civ-selected gothic)))
	(players-current-age focus-player == imperial-age)
	(players-unit-type-count focus-player cataphract-line > 5)
	(up-research-status c: ri-theocracy >= research-available)
	(unit-type-count-total monk < 11)
	(timer-triggered 3)
=>
	(up-modify-goal gl-gold-gp-points c:+ 9)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(or	(and	(research-completed ri-elite-skirmisher)
			(or	(players-unit-type-count focus-player archer-line > 10)
				(players-unit-type-count focus-player skirmisher-line > 13)))
		(and	(goal gl-advanced-archery heavy-archers)
			(or	(players-unit-type-count focus-player skirmisher-line > 4)
				(strategic-number sn-allow-resource-spending > 0))))
=>
	(up-modify-goal gl-food-gp-points c:+ 7)
	(up-modify-goal gl-wood-gp-points c:+ 15)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(goal gl-strategy xbow-boom)
	(building-type-count-total town-center > 2)
	(or	(unit-type-count-total skirmisher-line < 10)
		(not	(research-available ri-elite-skirmisher)))
	(or	(unit-type-count-total skirmisher-line < 26)
		(strategic-number sn-allow-resource-spending > 1))
	(unit-type-count-total skirmisher-line < 40)
=>
	(up-modify-goal gl-food-gp-points c:+ 8)
	(up-modify-goal gl-wood-gp-points c:+ 16)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-castle)
	(game-time > 1800)
	(timer-triggered 3)
	(goal gl-strategy default)
	(unit-type-count-total skirmisher-line > 4)
=>
	(up-modify-goal gl-food-gp-points c:+ 3)
	(up-modify-goal gl-wood-gp-points c:+ 8)
)

; Trash wars
(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(game-time > 3000)
	(timer-triggered 3)
	(goal gl-strategy default)
	(or	(dropsite-min-distance gold == -1)
		(dropsite-min-distance gold > 35))
	(unit-type-count-total trade-cart == 0)
	(unit-type-count-total scout-cavalry-line > 10)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 27)
	(up-modify-goal gl-wood-gp-points c:+ 10)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(game-time > 3000)
	(timer-triggered 3)
	(goal gl-strategy default)
	(or	(dropsite-min-distance gold == -1)
		(dropsite-min-distance gold > 35))
	(unit-type-count-total trade-cart == 0)
	(unit-type-count-total scout-cavalry-line > 22)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 22)
	(up-modify-goal gl-wood-gp-points c:+ 8)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-castle)
	(game-time > 3000)
	(timer-triggered 3)
	(goal gl-strategy default)
	(or	(dropsite-min-distance gold == -1)
		(dropsite-min-distance gold > 35))
	(unit-type-count-total trade-cart == 0)
	(unit-type-count-total spearman-line > 17)
=>
	(up-modify-goal gl-food-gp-points c:+ 28)
	(up-modify-goal gl-wood-gp-points c:+ 18)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-castle)
	(game-time > 3000)
	(timer-triggered 3)
	(goal gl-strategy default)
	(or	(dropsite-min-distance gold == -1)
		(dropsite-min-distance gold > 35))
	(unit-type-count-total trade-cart == 0)
	(unit-type-count-total spearman-line > 35)
=>
	(up-modify-goal gl-food-gp-points c:+ 14)
	(up-modify-goal gl-wood-gp-points c:+ 8)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-castle)
	(game-time > 3000)
	(timer-triggered 3)
	(goal gl-strategy default)
	(or	(dropsite-min-distance gold == -1)
		(dropsite-min-distance gold > 35))
	(unit-type-count-total trade-cart == 0)
	(unit-type-count-total skirmisher-line > 24)
=>
	(up-modify-goal gl-food-gp-points c:+ 17)
	(up-modify-goal gl-wood-gp-points c:+ 22)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-castle)
	(game-time > 3000)
	(timer-triggered 3)
	(goal gl-strategy default)
	(or	(dropsite-min-distance gold == -1)
		(dropsite-min-distance gold > 35))
	(unit-type-count-total trade-cart == 0)
	(unit-type-count-total skirmisher-line > 44)
=>
	(up-modify-goal gl-food-gp-points c:+ 10)
	(up-modify-goal gl-wood-gp-points c:+ 14)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(strategic-number sn-allow-resource-spending > 0)
	(or	(players-unit-type-count focus-player scout-cavalry-line > 6)
		(or	(players-unit-type-count focus-player knight-line > 4)
			(players-unit-type-count focus-player boyar > 5)))
	(unit-type-count-total camel-line < 13)
	(unit-available camel-line)
=>
	(up-modify-goal gl-food-gp-points c:+ 8)
	(up-modify-goal gl-gold-gp-points c:+ 8)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(or	(or	(players-unit-type-count any-enemy monk > 5)
			(and	(research-completed ri-light-cavalry)
				(players-unit-type-count any-enemy monk > 3)))
		(players-unit-type-count any-enemy missionary > 5))
	(building-type-count stable > 0)
=>
	(up-modify-goal gl-food-gp-points c:+ 13)
	(up-modify-goal gl-wood-gp-points c:+ 7)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(or	(up-allied-sn any-ally gl-islands-style != YES); Don't set eco for trade if trading isn't possible
		(player-valid any-human-ally))
	(strategic-number sn-allow-resource-spending >= 0)
	(players-building-type-count any-ally market > 0)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(game-time > 1800)
	(unit-type-count-total trade-cart < 25)
	(wood-amount < 350)
=>
	(up-modify-goal gl-wood-gp-points c:+ 14)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(or	(up-allied-sn any-ally gl-islands-style != YES)
		(player-valid any-human-ally))
	(strategic-number sn-allow-resource-spending >= 0)
	(players-building-type-count any-ally market > 0)
	(game-time > 1800)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(unit-type-count-total trade-cart < 25)
	(gold-amount < 100)
=>
	(up-modify-goal gl-gold-gp-points c:+ 7)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(strategic-number sn-allow-resource-spending >= 0)
	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(wood-amount < 400)
=>
	(up-modify-goal gl-food-gp-points c:+ 3)
	(up-modify-goal gl-wood-gp-points c:+ 30)
	(up-modify-goal gl-gold-gp-points c:+ 10)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal gl-islands-style YES)
	(timer-triggered 3)
	(strategic-number sn-allow-resource-spending >= 0)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(wood-amount >= 400)
=>
	(up-modify-goal gl-food-gp-points c:+ 3)
	(up-modify-goal gl-wood-gp-points c:+ 12)
	(up-modify-goal gl-gold-gp-points c:+ 4)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(strategic-number sn-allow-resource-spending >= 0)
	(or	(and	(up-compare-goal gl-current-age >= gv-feudal-up)
			(and	(strategic-number sn-minimum-water-body-size-for-dock == 1000)
				(building-type-count dock > 0)))
		(goal gl-panic-xbow-counter YES))
=>
	(up-modify-goal gl-wood-gp-points c:+ 10)
	(up-modify-goal gl-gold-gp-points c:+ 4)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(strategic-number sn-allow-resource-spending >= 0)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(strategic-number sn-minimum-water-body-size-for-dock == 1000)
	(building-type-count dock > 1)
=>
	(up-modify-goal gl-wood-gp-points c:+ 8)
	(up-modify-goal gl-gold-gp-points c:+ 3)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-castle-up)
	(building-type-count barracks < 4)
	(building-type-count stable < 4)
	(building-type-count archery-range < 4)
	(timer-triggered 3)
	(wood-amount < 300)
	(game-time < 3000)
=>
	(up-modify-goal gl-wood-gp-points c:+ 9)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(research-available imperial-age)
	(up-compare-goal gl-my-villager-count-total > 90)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 12)
	(up-modify-goal gl-gold-gp-points c:+ 9)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(strategic-number sn-allow-resource-spending >= 0)
	(strategic-number sn-allow-resource-spending < 6)
	(game-time < 2400)
	(up-compare-const gv-michi-style == 1)
	(wood-amount > 600)
	(food-amount > 600)
	(or	(gold-amount < 500)
		(and	(wood-amount > 1500)
			(food-amount > 1500)))
	(gold-amount < 1200)
=>
	(up-modify-goal gl-gold-gp-points c:+ 6)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(strategic-number sn-allow-resource-spending == -1)
	(research-available ri-heresy)
=>
	(up-modify-goal gl-gold-gp-points c:+ 20)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(strategic-number sn-allow-resource-spending >= 0)
	(up-compare-goal gl-gathered-relics > 0)
	(or	(up-compare-goal gl-gold-gp-points > 10)
		(up-compare-goal gl-gathered-relics > 4))
=>
	(up-modify-goal gl-gold-gp-points g:- gl-gathered-relics)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(strategic-number sn-allow-resource-spending >= 0)
	(unit-type-count trade-cart > 10)
	(up-compare-goal gl-gold-gp-points > 12)
=>
	(up-modify-goal gl-gold-gp-points c:- 3)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(strategic-number sn-allow-resource-spending >= 0)
	(unit-type-count trade-cart > 20)
	(up-compare-goal gl-gold-gp-points > 12)
=>
	(up-modify-goal gl-gold-gp-points c:- 3)
)

; Rules under load-blocks

#load-if-not-defined HUN-CIV
(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal gl-advanced-cavalry LC)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 16)
	(up-modify-goal gl-wood-gp-points c:+ 8)
	(up-modify-goal gl-gold-gp-points c:+ 4)
)
#else
(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal gl-advanced-cavalry LC)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 16)
	(up-modify-goal gl-wood-gp-points c:+ 16)
	(up-modify-goal gl-gold-gp-points c:+ 17)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal gl-advanced-cavalry LC)
		(and	(game-time > 3000)
			(research-completed ri-light-cavalry)))
	(unit-type-count-total trade-cart < 5)
	(or	(dropsite-min-distance gold > 15)
		(dropsite-min-distance gold == -1))
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 16)
)
#end-if

#load-if-not-defined TURKISH-CIV
(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(building-type-count barracks > 0)
	(or	(players-unit-type-count focus-player knight-line > 6)
		(players-unit-type-count focus-player boyar > 5))
	(unit-type-count-total spearman-line < 20)
	(timer-triggered 3)
	(game-time < 2700)
=>
	(up-modify-goal gl-food-gp-points c:+ 10)
	(up-modify-goal gl-wood-gp-points c:+ 8)
)
#else
(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(building-type-count stable > 0)
	(or	(players-unit-type-count focus-player knight-line > 6)
		(players-unit-type-count focus-player boyar > 5))
	(unit-type-count-total camel-line < 8)
	(timer-triggered 3)
	(game-time < 2700)
=>
	(up-modify-goal gl-food-gp-points c:+ 10)
	(up-modify-goal gl-gold-gp-points c:+ 8)
)
#end-if

#load-if-not-defined SPANISH-CIV
(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal gl-strategy knight-archer)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 14)
	(up-modify-goal gl-wood-gp-points c:+ 8)
	(up-modify-goal gl-gold-gp-points c:+ 9)
)
#else
(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal gl-strategy knight-archer)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 14)
	(up-modify-goal gl-wood-gp-points c:+ 11)
	(up-modify-goal gl-gold-gp-points c:+ 7)
)
#end-if

#load-if-defined MONGOL-CIV
#load-if-defined UP-ALLY-IN-GAME
(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(research-completed my-unique-unit-upgrade)
	(unit-type-count trade-cart > 7)
	(building-type-count castle > 0)
	(players-building-type-count any-ally market > 0)
	(or	(wood-amount < 500)
		(food-amount > 500))
	(wood-amount < 1000)
	(timer-triggered 3)
=>
	(up-modify-goal gl-wood-gp-points c:+ 18)
)
#end-if
#end-if

#load-if-defined KOREAN-CIV
(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-castle)
	(game-time > 3000)
	(timer-triggered 3)
	(goal gl-strategy default)
	(or	(dropsite-min-distance gold == -1)
		(dropsite-min-distance gold > 35))
	(unit-type-count-total trade-cart == 0)
=>
	(up-modify-goal gl-food-gp-points c:+ 7)
)
#end-if

#load-if-defined INCAN-CIV
(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-castle)
	(goal gl-advanced-archery slingers)
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 10)
	(up-modify-goal gl-wood-gp-points c:+ 4)
	(up-modify-goal gl-gold-gp-points c:+ 6)
)
#end-if

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-castle-up)
	(or	(and	(up-compare-goal gl-food-gp-points <= 0); Something is broken, so these rules shall back up it
			(food-amount < 1000))
		(and	(up-compare-goal gl-wood-gp-points <= 0)
			(wood-amount < 1000)))
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 5)
	(up-modify-goal gl-wood-gp-points c:+ 5)
	(up-modify-goal gl-gold-gp-points c:+ 5)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age < gv-castle-up)
	(or	(and	(up-compare-goal gl-food-gp-points <= 0)
			(food-amount < 1000))
		(and	(up-compare-goal gl-wood-gp-points <= 0)
			(wood-amount < 1000)))
	(timer-triggered 3)
=>
	(up-modify-goal gl-food-gp-points c:+ 10)
	(up-modify-goal gl-wood-gp-points c:+ 5)
	(up-modify-goal gl-gold-gp-points c:+ 5)
)

; ================ FIXED ECO BALANCING

#load-if-not-defined DEATH-MATCH
(defrule
	(or	(strategic-number sn-wood-gatherer-percentage != 100)
		(game-time > 600))
	(or	(current-age > dark-age)
		(up-compare-goal gl-my-villager-count > 9))
	(game-time > 600)
	(up-compare-goal gl-current-age > gv-dark-up)
=>
	(up-jump-rule 70)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(strategic-number sn-nomad-style-start == 1)
	(building-type-count-total town-center > 0)
	(strategic-number sn-wood-gatherer-percentage == 100)
=>
	(set-strategic-number sn-food-gatherer-percentage 84)
	(set-strategic-number sn-wood-gatherer-percentage 16)
	(disable-self)
)

(defrule
	(strategic-number sn-town-center-start == 1)
	(strategic-number sn-allow-new-build-order >= 1)
	(strategic-number sn-nomad-style-start == 1)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 5)
=>
	(set-strategic-number sn-food-gatherer-percentage 80)
	(set-strategic-number sn-wood-gatherer-percentage 20)
	(disable-self)
)

(defrule
	(strategic-number sn-town-center-start == 1)
	(strategic-number sn-allow-new-build-order >= 1)
	(strategic-number sn-nomad-style-start == 1)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 6)
=>
	(set-strategic-number sn-food-gatherer-percentage 83)
	(set-strategic-number sn-wood-gatherer-percentage 17)
	(disable-self)
)

(defrule
	(strategic-number sn-town-center-start == 1)
	(strategic-number sn-allow-new-build-order >= 1)
	(or	(strategic-number sn-nomad-style-start == 1)
		(civ-selected persian))
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 7)
=>
	(set-strategic-number sn-food-gatherer-percentage 86)
	(set-strategic-number sn-wood-gatherer-percentage 14)
	(disable-self)
)

(defrule
	(strategic-number sn-town-center-start == 1)
	(strategic-number sn-allow-new-build-order >= 1)
	(or	(strategic-number sn-nomad-style-start == 1)
		(civ-selected persian))
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 8)
=>
	(set-strategic-number sn-food-gatherer-percentage 75)
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(disable-self)
)

(defrule
	(strategic-number sn-town-center-start == 1)
	(strategic-number sn-allow-new-build-order >= 1)
	(or	(strategic-number sn-nomad-style-start == 1)
		(civ-selected persian))
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 9)
=>
	(set-strategic-number sn-food-gatherer-percentage 78)
	(set-strategic-number sn-wood-gatherer-percentage 22)
	(disable-self)
)

(defrule
	(strategic-number sn-town-center-start == 1)
	(or	(strategic-number sn-allow-new-build-order == 1)
		(strategic-number sn-allow-new-build-order == 4))
	(not	(civ-selected persian))
	(strategic-number sn-nomad-style-start == 0)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 9)
=>
	(set-strategic-number sn-food-gatherer-percentage 89)
	(set-strategic-number sn-wood-gatherer-percentage 11)
	(disable-self)
)

(defrule
	(strategic-number sn-town-center-start == 1)
	(or	(strategic-number sn-allow-new-build-order == 1)
		(strategic-number sn-allow-new-build-order == 4))
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 10)
=>
	(set-strategic-number sn-food-gatherer-percentage 80)
	(set-strategic-number sn-wood-gatherer-percentage 20)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 11)
=>
	(set-strategic-number sn-food-gatherer-percentage 73)
	(set-strategic-number sn-wood-gatherer-percentage 27)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 12)
=>
	(set-strategic-number sn-food-gatherer-percentage 75)
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 13)
=>
	(set-strategic-number sn-food-gatherer-percentage 69)
	(set-strategic-number sn-wood-gatherer-percentage 31)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 14)
=>
	(set-strategic-number sn-food-gatherer-percentage 64)
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 15)
=>
	(set-strategic-number sn-food-gatherer-percentage 67)
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 16)
=>
	(set-strategic-number sn-food-gatherer-percentage 69)
	(set-strategic-number sn-wood-gatherer-percentage 31)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 17)
=>
	(set-strategic-number sn-food-gatherer-percentage 71)
	(set-strategic-number sn-wood-gatherer-percentage 29)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 18)
=>
	(set-strategic-number sn-food-gatherer-percentage 67)
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 19)
=>
	(set-strategic-number sn-food-gatherer-percentage 68)
	(set-strategic-number sn-wood-gatherer-percentage 32)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 70)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 21)
=>
	(set-strategic-number sn-food-gatherer-percentage 71)
	(set-strategic-number sn-wood-gatherer-percentage 29)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 22)
=>
	(set-strategic-number sn-food-gatherer-percentage 73)
	(set-strategic-number sn-wood-gatherer-percentage 27)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 23)
=>
	(set-strategic-number sn-food-gatherer-percentage 70)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(nor	(goal gl-eew-strategy-type fast-imp)
		(or	(goal gl-strategy korean-boom)
			(goal gl-strategy castle-drop)))
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 24)
=>
	(set-strategic-number sn-food-gatherer-percentage 67)
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(nor	(goal gl-eew-strategy-type fast-imp)
		(or	(goal gl-strategy korean-boom)
			(goal gl-strategy castle-drop)))
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 25)
=>
	(set-strategic-number sn-food-gatherer-percentage 68)
	(set-strategic-number sn-wood-gatherer-percentage 32)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(nor	(goal gl-eew-strategy-type fast-imp)
		(or	(goal gl-strategy korean-boom)
			(goal gl-strategy castle-drop)))
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 26)
=>
	(set-strategic-number sn-food-gatherer-percentage 65)
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(nor	(goal gl-eew-strategy-type fast-imp)
		(or	(goal gl-strategy korean-boom)
			(goal gl-strategy castle-drop)))
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 27)
=>
	(set-strategic-number sn-food-gatherer-percentage 67)
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(nor	(goal gl-eew-strategy-type fast-imp)
		(or	(goal gl-strategy korean-boom)
			(goal gl-strategy castle-drop)))
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 28)
=>
	(set-strategic-number sn-food-gatherer-percentage 64)
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(nor	(goal gl-eew-strategy-type fast-imp)
		(or	(goal gl-strategy korean-boom)
			(goal gl-strategy castle-drop)))
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 29)
=>
	(set-strategic-number sn-food-gatherer-percentage 62)
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(or	(goal gl-eew-strategy-type fast-imp)
		(or	(goal gl-strategy korean-boom)
			(goal gl-strategy castle-drop)))
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 24)
=>
	(set-strategic-number sn-food-gatherer-percentage 65)
	(set-strategic-number sn-wood-gatherer-percentage 32)
	(set-strategic-number sn-gold-gatherer-percentage 4)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(or	(goal gl-eew-strategy-type fast-imp)
		(or	(goal gl-strategy korean-boom)
			(goal gl-strategy castle-drop)))
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 25)
=>
	(set-strategic-number sn-food-gatherer-percentage 64)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 7)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(or	(goal gl-eew-strategy-type fast-imp)
		(or	(goal gl-strategy korean-boom)
			(goal gl-strategy castle-drop)))
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 26)
	(building-type-count-total castle == 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 63)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 6)
	(set-strategic-number sn-stone-gatherer-percentage 4)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(or	(goal gl-eew-strategy-type fast-imp)
		(or	(goal gl-strategy korean-boom)
			(goal gl-strategy castle-drop)))
	(up-compare-goal gl-strategy-type <= FC)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 27)
	(building-type-count-total castle == 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 54)
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-stone-gatherer-percentage 6)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 11)
=>
	(set-strategic-number sn-food-gatherer-percentage 73)
	(set-strategic-number sn-wood-gatherer-percentage 27)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 12)
=>
	(set-strategic-number sn-food-gatherer-percentage 75)
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 13)
=>
	(set-strategic-number sn-food-gatherer-percentage 69)
	(set-strategic-number sn-wood-gatherer-percentage 31)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 14)
=>
	(set-strategic-number sn-food-gatherer-percentage 64)
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 15)
=>
	(set-strategic-number sn-food-gatherer-percentage 60)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 16)
=>
	(set-strategic-number sn-food-gatherer-percentage 56)
	(set-strategic-number sn-wood-gatherer-percentage 44)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 17)
=>
	(set-strategic-number sn-food-gatherer-percentage 59)
	(set-strategic-number sn-wood-gatherer-percentage 41)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 18)
=>
	(set-strategic-number sn-food-gatherer-percentage 61)
	(set-strategic-number sn-wood-gatherer-percentage 39)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 19)
=>
	(set-strategic-number sn-food-gatherer-percentage 58)
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 60)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 21)
=>
	(set-strategic-number sn-food-gatherer-percentage 62)
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 22)
=>
	(set-strategic-number sn-food-gatherer-percentage 64)
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 23)
=>
	(set-strategic-number sn-food-gatherer-percentage 70)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 24)
=>
	(set-strategic-number sn-food-gatherer-percentage 67)
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 25)
=>
	(set-strategic-number sn-food-gatherer-percentage 68)
	(set-strategic-number sn-wood-gatherer-percentage 32)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 26)
=>
	(set-strategic-number sn-food-gatherer-percentage 65)
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(goal gl-strategy-type FC2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 27)
=>
	(set-strategic-number sn-food-gatherer-percentage 62)
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(disable-self)
)

(defrule
	(strategic-number sn-town-center-start == 1)
	(strategic-number sn-allow-new-build-order == 2)
	(strategic-number sn-nomad-style-start == 0)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 8)
=>
	(set-strategic-number sn-food-gatherer-percentage 87)
	(set-strategic-number sn-wood-gatherer-percentage 13)
	(disable-self)
)

(defrule
	(strategic-number sn-town-center-start == 1)
	(strategic-number sn-allow-new-build-order == 2)
	(strategic-number sn-nomad-style-start == 0)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 9)
=>
	(set-strategic-number sn-food-gatherer-percentage 78)
	(set-strategic-number sn-wood-gatherer-percentage 22)
	(disable-self)
)

(defrule
	(strategic-number sn-town-center-start == 1)
	(strategic-number sn-allow-new-build-order == 2)
	(strategic-number sn-nomad-style-start == 0)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 10)
=>
	(set-strategic-number sn-food-gatherer-percentage 70)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 11)
=>
	(set-strategic-number sn-food-gatherer-percentage 64)
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 12)
=>
	(set-strategic-number sn-food-gatherer-percentage 58)
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 13)
=>
	(set-strategic-number sn-food-gatherer-percentage 62)
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 14)
=>
	(set-strategic-number sn-food-gatherer-percentage 57)
	(set-strategic-number sn-wood-gatherer-percentage 43)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 15)
=>
	(set-strategic-number sn-food-gatherer-percentage 53)
	(set-strategic-number sn-wood-gatherer-percentage 47)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 16)
=>
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 17)
=>
	(set-strategic-number sn-food-gatherer-percentage 53)
	(set-strategic-number sn-wood-gatherer-percentage 47)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 18)
=>
	(set-strategic-number sn-food-gatherer-percentage 56)
	(set-strategic-number sn-wood-gatherer-percentage 46)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 19)
=>
	(set-strategic-number sn-food-gatherer-percentage 53)
	(set-strategic-number sn-wood-gatherer-percentage 47)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 20)
=>
	(set-strategic-number sn-food-gatherer-percentage 55)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 21)
=>
	(set-strategic-number sn-food-gatherer-percentage 57)
	(set-strategic-number sn-wood-gatherer-percentage 43)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 22)
=>
	(set-strategic-number sn-food-gatherer-percentage 59)
	(set-strategic-number sn-wood-gatherer-percentage 41)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 23)
=>
	(set-strategic-number sn-food-gatherer-percentage 56)
	(set-strategic-number sn-wood-gatherer-percentage 44)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 24)
=>
	(set-strategic-number sn-food-gatherer-percentage 54)
	(set-strategic-number sn-wood-gatherer-percentage 46)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 25)
=>
	(set-strategic-number sn-food-gatherer-percentage 56)
	(set-strategic-number sn-wood-gatherer-percentage 46)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 26)
=>
	(set-strategic-number sn-food-gatherer-percentage 58)
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 27)
=>
	(set-strategic-number sn-food-gatherer-percentage 56)
	(set-strategic-number sn-wood-gatherer-percentage 44)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 28)
=>
	(set-strategic-number sn-food-gatherer-percentage 54)
	(set-strategic-number sn-wood-gatherer-percentage 46)
	(disable-self)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count == 29)
=>
	(set-strategic-number sn-food-gatherer-percentage 52)
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(disable-self)
)

#load-if-defined REGICIDE
#load-if-defined LOW-RESOURCES-START
(defrule
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count-total >= 20)
=>
	(set-strategic-number sn-gold-gatherer-percentage 5)
	(set-goal gl-villagers-to-start-boar-hunt 90000)
	(disable-self)
)
#end-if
#end-if

#load-if-defined SARACEN-CIV
(defrule
	(up-compare-goal gl-strategy != heavy-krush)
=>
	(up-jump-rule 5)
)

(defrule
	(goal gl-strategy heavy-krush)
	(up-compare-goal gl-current-age >= gv-dark-up)
=>
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-skip-first-mining-camp 1)
	(set-goal gl-disable-mining-upgrades YES)
	(set-goal target-system aggressive-raid)
	(set-goal target-system-rewriting YES)
	(disable-self)
)

(defrule
	(goal gl-strategy heavy-krush)
	(up-compare-goal gl-current-age >= gv-feudal-up)
=>
	(set-strategic-number sn-food-gatherer-percentage 15)
	(set-strategic-number sn-wood-gatherer-percentage 60)
	(set-strategic-number sn-gold-gatherer-percentage 10)
	(set-strategic-number sn-stone-gatherer-percentage 15)
	(disable-self)
)

(defrule
	(goal gl-strategy heavy-krush)
	(goal RAM 1)
	(strategic-number sn-wood-gatherer-percentage != 30)
=>
	(set-strategic-number sn-food-gatherer-percentage 25)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(set-strategic-number sn-stone-gatherer-percentage 20)
)

(defrule
	(goal gl-strategy heavy-krush)
	(goal RAM 0)
	(building-type-count-total stable > 1)
	(building-type-count-total mining-camp > 1)
	(commodity-selling-price stone >= 105)
	(or	(strategic-number sn-wood-gatherer-percentage != 15)
		(strategic-number sn-gold-gatherer-percentage != 30))
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 15)
	(set-strategic-number sn-gold-gatherer-percentage 30)
	(set-strategic-number sn-stone-gatherer-percentage 25)
)

(defrule
	(goal gl-strategy heavy-krush)
	(goal RAM 0)
	(building-type-count-total stable > 1)
	(building-type-count-total mining-camp > 1)
	(commodity-selling-price stone < 105)
	(or	(strategic-number sn-wood-gatherer-percentage != 15)
		(strategic-number sn-gold-gatherer-percentage != 40))
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 15)
	(set-strategic-number sn-gold-gatherer-percentage 40)
	(set-strategic-number sn-stone-gatherer-percentage 15)
)
#end-if

#load-if-not-defined ARCHIPELAGO-MAP
#load-if-not-defined BALTIC-MAP
#load-if-not-defined COASTAL-MAP
#load-if-not-defined CONTINENTAL-MAP
#load-if-not-defined CRATER-LAKE-MAP
#load-if-not-defined HIGHLAND-MAP
#load-if-not-defined ISLANDS-MAP
#load-if-not-defined MEDITERRANEAN-MAP
#load-if-not-defined RIVERS-MAP
#load-if-not-defined SALT-MARSH-MAP
#load-if-not-defined SCANDANAVIA-MAP
#load-if-not-defined TEAM-ISLANDS-MAP
#load-if-not-defined YUCATAN-MAP

#load-if-defined FRANKISH-CIV
(defrule
	(up-compare-goal gl-strategy != heavy-krush)
=>
	(up-jump-rule 9)
)

(defrule
	(goal gl-strategy heavy-krush)
	(up-compare-goal gl-current-age == gv-dark-up)
	(or	(strategic-number sn-food-gatherer-percentage != 53)
		(strategic-number sn-wood-gatherer-percentage != 47))
=>
	(set-strategic-number sn-food-gatherer-percentage 53)
	(set-strategic-number sn-wood-gatherer-percentage 47)
	(set-strategic-number sn-skip-first-mining-camp 1)
)

(defrule
	(goal gl-strategy heavy-krush)
	(up-compare-goal gl-current-age >= gv-feudal-up)
=>
	(set-strategic-number sn-food-gatherer-percentage 31)
	(set-strategic-number sn-wood-gatherer-percentage 49)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(disable-self)
)

(defrule
	(goal gl-strategy heavy-krush)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(building-type-count-total stable > 1)
=>
	(set-strategic-number sn-food-gatherer-percentage 37)
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(disable-self)
)

(defrule
	(goal gl-strategy heavy-krush)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal RAM 0)
		(unit-type-count-total battering-ram-line > 0))
	(building-type-count-total stable > 1)
	(game-time > 1200)
	(game-time < 1800)
	(current-age == castle-age)
	(strategic-number sn-gold-gatherer-percentage != 30)
=>
	(set-strategic-number sn-food-gatherer-percentage 44)
	(set-strategic-number sn-wood-gatherer-percentage 26)
	(set-strategic-number sn-gold-gatherer-percentage 30)
)

(defrule
	(goal gl-strategy heavy-krush)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal RAM 0)
		(unit-type-count-total battering-ram-line > 0))
	(building-type-count-total stable > 1)
	(game-time > 1800)
	(game-time < 2100)
	(building-type-count-total stable < 3)
	(current-age == castle-age)
	(strategic-number sn-gold-gatherer-percentage != 32)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 28)
	(set-strategic-number sn-gold-gatherer-percentage 32)
)

(defrule
	(goal gl-strategy heavy-krush)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal RAM 0)
		(unit-type-count-total battering-ram-line > 0))
	(building-type-count-total stable > 1)
	(game-time > 1800)
	(game-time < 2100)
	(building-type-count-total stable >= 3)
	(current-age == castle-age)
	(strategic-number sn-gold-gatherer-percentage != 34)
=>
	(set-strategic-number sn-food-gatherer-percentage 41)
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(set-strategic-number sn-gold-gatherer-percentage 34)
)

(defrule
	(goal gl-strategy heavy-krush)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal RAM 0)
		(unit-type-count-total battering-ram-line > 0))
	(building-type-count-total stable > 1)
	(game-time > 2100)
	(current-age == castle-age)
	(or	(strategic-number sn-gold-gatherer-percentage != 40)
		(strategic-number sn-wood-gatherer-percentage != 22))
=>
	(set-strategic-number sn-food-gatherer-percentage 38)
	(set-strategic-number sn-wood-gatherer-percentage 22)
	(set-strategic-number sn-gold-gatherer-percentage 40)
)

(defrule
	(goal gl-strategy heavy-krush)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal RAM 0)
		(unit-type-count-total battering-ram-line > 0))
	(building-type-count-total stable > 1)
	(food-amount > 250)
	(gold-amount < 200)
	(current-age == castle-age)
	(or	(strategic-number sn-gold-gatherer-percentage != 45)
		(strategic-number sn-wood-gatherer-percentage != 23))
=>
	(set-strategic-number sn-food-gatherer-percentage 32)
	(set-strategic-number sn-wood-gatherer-percentage 23)
	(set-strategic-number sn-gold-gatherer-percentage 45)
)

(defrule
	(goal gl-strategy heavy-krush)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal RAM 1)
	(unit-type-count-total battering-ram-line < 1)
	(current-age == castle-age)
	(strategic-number sn-gold-gatherer-percentage != 27)
=>
	(set-strategic-number sn-food-gatherer-percentage 33)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 27)
)
#end-if

#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if

#load-if-not-defined REGICIDE
(defrule
	(goal gl-current-age gv-dark-up)
	(goal gl-feudal-trash 0)
	(nor	(goal gl-strategy default)
		(goal gl-strategy heavy-krush))
	(strategic-number sn-skip-first-mining-camp != 1)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 60)
	(set-strategic-number sn-maximum-food-drop-distance 10)
	(disable-self)
)

#load-if-not-defined FORTRESS-MAP
(defrule
	(current-age > feudal-age)
=>
	(up-jump-rule 4)
)

(defrule
	(goal gl-strategy default)
	(goal gl-strategy-type basic-flush)
	(up-compare-goal gl-current-age == gv-dark-up)
	(goal gl-feudal-infantry 0)
	(goal gl-feudal-trash 0)
	(up-compare-goal gl-feudal-archery != 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 23); 17
	(set-strategic-number sn-wood-gatherer-percentage 77); 83
	(disable-self)
)

(defrule
	(goal gl-strategy default)
	(goal gl-strategy-type basic-flush)
	(goal gl-current-age gv-dark-up)
	(or	(goal gl-feudal-infantry men-at-arms)
		(and	(goal gl-feudal-infantry heavy-men-at-arms)
			(building-type-count-total barracks < 2)))
=>
	(set-strategic-number sn-food-gatherer-percentage 32); 35
	(set-strategic-number sn-wood-gatherer-percentage 56); 53
	(set-strategic-number sn-gold-gatherer-percentage 12)
	(disable-self)
)

(defrule
	(goal gl-strategy default)
	(goal gl-strategy-type basic-flush)
	(goal gl-current-age gv-feudal)
	(current-age-time > 240)
	(strategic-number sn-gold-gatherer-percentage > 4)
	(gold-amount > 320)
=>
	(set-strategic-number sn-gold-gatherer-percentage 4)
)

(defrule
	(goal gl-strategy default)
	(goal gl-strategy-type basic-flush)
	(goal gl-current-age gv-feudal)
	(current-age-time > 240)
	(strategic-number sn-gold-gatherer-percentage == 4)
	(gold-amount < 180)
=>
	(set-strategic-number sn-gold-gatherer-percentage 18)
)

#load-if-not-defined TURKISH-CIV
(defrule
	(current-age > feudal-age)
=>
	(up-jump-rule 5)
)

(defrule
	(up-compare-goal gl-current-age >= gv-dark-up)
	(goal gl-feudal-trash YES)
	(current-age == dark-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 17)
	(set-strategic-number sn-wood-gatherer-percentage 83)
	(set-strategic-number sn-skip-first-mining-camp 1)
	(disable-self)
)

(defrule
	(goal gl-feudal-trash YES)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(or	(current-age == feudal-age)
		(and	(wood-amount > 400)
			(up-compare-goal gl-current-age >= gv-dark-up)))
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 60)
	(disable-self)
)

(defrule
	(goal gl-feudal-trash YES)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age == feudal-age)
	(current-age-time > 60)
	(game-time < 1140)
	(wood-amount > 200)
	(food-amount < 100)
	(building-type-count-total archery-range > 0)
	(strategic-number sn-wood-gatherer-percentage != 50)
=>
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-wood-gatherer-percentage 50)
)

(defrule
	(goal gl-feudal-trash YES)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age == feudal-age)
	(game-time < 1140)
	(current-age-time > 60)
	(wood-amount < 100)
	(food-amount > 200)
	(strategic-number sn-wood-gatherer-percentage != 60)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 60)
)

(defrule
	(goal gl-feudal-trash YES)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(or	(game-time > 1140)
		(or	(players-unit-type-count any-enemy militiaman-line > 0)
			(players-unit-type-count any-enemy eagle-warrior-line > 2)))
	(building-type-count-total archery-range > 0)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 39)
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 13)
	(set-strategic-number sn-skip-first-mining-camp 0)
	(disable-self)
)
#end-if

#end-if

#end-if

(defrule
	(up-compare-goal gl-current-age == gv-dark-up)
	(dropsite-min-distance gold < 4)
	(up-compare-goal gl-strategy != default)
	(up-compare-goal gl-strategy != eew-strategy)
	(up-compare-goal gl-strategy != heavy-krush)
	(up-compare-goal gl-strategy != castle-drop)
	(up-compare-goal gl-strategy != eagle-rush)
	(up-compare-goal gl-strategy-type >= FC)
=>
	(set-strategic-number sn-food-gatherer-percentage 44)
	(set-strategic-number sn-wood-gatherer-percentage 43)
	(set-strategic-number sn-gold-gatherer-percentage 13)
	(disable-self)
)

(defrule
	(up-compare-goal gl-current-age >= gv-dark-up)
	(up-compare-goal gl-current-age <= gv-feudal)
	(or	(building-type-count-total blacksmith > 0)
		(wood-amount > 360))
	(up-compare-goal gl-strategy != default)
	(up-compare-goal gl-strategy != eew-strategy)
	(up-compare-goal gl-strategy != castle-drop)
	(up-compare-goal gl-strategy != eagle-rush)
	(up-compare-goal gl-strategy-type >= FC)
=>
	(set-strategic-number sn-food-gatherer-percentage 57)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 13)
	(disable-self)
)

(defrule
	(up-compare-goal gl-current-age == gv-dark-up)
	(dropsite-min-distance gold < 4)
	(or	(goal gl-strategy eew-strategy)
		(or	(goal gl-strategy castle-drop)
			(goal gl-strategy turkish-fast-imp)))
	(up-compare-goal gl-strategy-type >= FC)
=>
	(set-strategic-number sn-food-gatherer-percentage 47)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 13)
	(disable-self)
)

#load-if-not-defined REGICIDE
#load-if-not-defined FORTRESS-MAP
(defrule
	(current-age > feudal-age)
=>
	(up-jump-rule 10)
)

(defrule
	(goal gl-feudal-archery archers)
	(goal gl-feudal-infantry men-at-arms)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age == feudal-age)
	(building-type-count-total archery-range > 0)
	(building-type-count-total blacksmith > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 53)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 17)
	(disable-self)
)

(defrule
	(goal gl-feudal-archery archer-skirm)
	(goal gl-feudal-infantry men-at-arms)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age == feudal-age)
	(building-type-count-total archery-range > 0)
	(building-type-count-total blacksmith > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 51)
	(set-strategic-number sn-wood-gatherer-percentage 37)
	(set-strategic-number sn-gold-gatherer-percentage 12)
	(disable-self)
)

(defrule
	(goal gl-feudal-archery archers)
	(not	(goal gl-feudal-infantry men-at-arms))
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age == feudal-age)
	(building-type-count-total archery-range > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 20)
	(set-strategic-number sn-wood-gatherer-percentage 60)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(disable-self)
)

(defrule
	(goal gl-feudal-archery archers)
	(not	(goal gl-feudal-infantry men-at-arms))
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age == feudal-age)
	(or	(building-type-count-total archery-range > 1)
		(and	(building-type-count-total archery-range > 0)
			(wood-amount > 250)))
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(disable-self)
)

(defrule
	(goal gl-feudal-archery archer-skirm)
	(not	(goal gl-feudal-infantry men-at-arms))
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age == feudal-age)
	(building-type-count-total archery-range > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 20)
	(set-strategic-number sn-wood-gatherer-percentage 63)
	(set-strategic-number sn-gold-gatherer-percentage 17)
	(disable-self)
)

(defrule
	(goal gl-feudal-archery archer-skirm)
	(not	(goal gl-feudal-infantry men-at-arms))
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age == feudal-age)
	(or	(building-type-count-total archery-range > 1)
		(and	(building-type-count-total archery-range > 0)
			(wood-amount > 250)))
=>
	(set-strategic-number sn-food-gatherer-percentage 46)
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-gold-gatherer-percentage 16)
	(disable-self)
)

(defrule
	(or	(goal gl-feudal-archery archers)
		(goal gl-feudal-archery archer-skirm))
	(goal gl-current-age gv-feudal)
	(current-age == feudal-age)
	(or	(unit-type-count-total spearman-line > 1)
		(gold-amount > 350))
=>
	(set-strategic-number sn-food-modifier-percentage 25)
	(set-strategic-number sn-wood-modifier-percentage 20)
	(disable-self)
)

(defrule
	(goal gl-current-age gv-feudal)
	(goal gl-strategy-type basic-flush)
	(goal gl-strategy flush)
	(strategic-number sn-age-up-castle == 1)
	(building-type-count-total blacksmith > 0)
	(building-type-count-total archery-range > 0)
=>
	(set-goal gl-feudal-archery 0)
	(set-goal gl-feudal-infantry 0)
	(set-goal gl-feudal-trash 0)
	(set-strategic-number sn-food-gatherer-percentage 55)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-skip-first-mining-camp 0)
	(disable-self)
)

#load-if-not-defined FEUDAL-AGE-END
(defrule
	(goal gl-current-age gv-feudal)
	(or	(and	(soldier-count > 14)
			(and	(players-military-population any-enemy < 7)
				(game-time > 1140)))
		(and	(soldier-count > 8)
			(or	(players-building-type-count target-player stone-wall-line > 2)
				(players-building-type-count target-player watch-tower > 2))))
	(building-type-count-total blacksmith > 0)
	(building-type-count-total archery-range > 0)
=>
	(set-strategic-number sn-age-up-castle 1)
	(disable-self)
)

(defrule
	(goal gl-current-age gv-feudal)
	(game-time > 1200)
	(or	(goal MILITARY 0)
		(game-time > 1500))
	(players-military-population any-enemy < 30)
	(or	(players-military-population any-enemy < 24)
		(soldier-count > 25))
	(soldier-count > 18)
	(up-compare-goal threat-time > 10000)
	(map-size tiny)
	(building-type-count-total blacksmith > 0)
	(building-type-count-total archery-range > 0)
=>
	(set-strategic-number sn-age-up-castle 1)
	(disable-self)
)

(defrule
	(goal gl-current-age gv-feudal)
	(or	(and	(soldier-count > 18)
			(player-valid 3))
		(and	(up-projectile-detected projectile-fortification < 6000000)
			(or	(players-building-type-count target-player castle > 0)
				(and	(players-building-type-count target-player watch-tower > 0)
					(player-valid 3)))))
	(building-type-count-total blacksmith > 0)
	(building-type-count-total archery-range > 0)
=>
	(set-strategic-number sn-age-up-castle 1)
	(disable-self)
)

(defrule
	(goal gl-current-age gv-feudal)
	(or	(and	(or	(goal MILITARY 0)
				(game-time > 1560))
			(and	(game-time > 1140)
				(food-amount > 330)))
		(and	(players-building-type-count target-player palisade-wall > 5)
			(player-human target-player)))
	(building-type-count-total blacksmith > 0)
	(building-type-count-total archery-range > 0)
=>
	(set-strategic-number sn-age-up-castle 1)
	(disable-self)
)
#else
(defrule
	(game-time > 1330)
	(current-age == feudal-age)
	(food-amount < 200)
	(wood-amount < 200)
	(gold-amount < 200)
	(building-type-count-total archery-range > 0)
	(building-type-count-total blacksmith > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 39)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 21)
)

(defrule
	(game-time > 1330)
	(current-age == feudal-age)
	(food-amount > 300)
	(wood-amount < 200)
	(gold-amount < 200)
	(building-type-count-total archery-range > 0)
	(building-type-count-total blacksmith > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 27)
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 25)
)

(defrule
	(game-time > 1330)
	(current-age == feudal-age)
	(food-amount < 200)
	(wood-amount > 300)
	(gold-amount < 200)
	(building-type-count-total archery-range > 0)
	(building-type-count-total blacksmith > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 20)
)

(defrule
	(game-time > 1330)
	(current-age == feudal-age)
	(food-amount < 200)
	(wood-amount < 200)
	(gold-amount > 300)
	(building-type-count-total archery-range > 0)
	(building-type-count-total blacksmith > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 5)
)

(defrule
	(game-time > 1330)
	(current-age == feudal-age)
	(food-amount > 300)
	(wood-amount > 300)
	(gold-amount < 200)
	(building-type-count-total archery-range > 0)
	(building-type-count-total blacksmith > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 35)
)

(defrule
	(game-time > 1330)
	(current-age == feudal-age)
	(food-amount < 200)
	(wood-amount > 300)
	(gold-amount > 300)
	(building-type-count-total archery-range > 0)
	(building-type-count-total blacksmith > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 55)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 5)
)

(defrule
	(game-time > 1330)
	(current-age == feudal-age)
	(food-amount > 300)
	(wood-amount < 200)
	(gold-amount > 300)
	(building-type-count-total archery-range > 0)
	(building-type-count-total blacksmith > 0)
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 55)
	(set-strategic-number sn-gold-gatherer-percentage 5)
)
#end-if
#end-if
#end-if

(defrule
	(goal gl-strategy default)
	(goal gl-fixed-eco-balancing NO)
	(goal gl-current-age gv-feudal-up)
	(wood-amount < 350)
	(timer-triggered 3)
=>
	(up-modify-goal gl-wood-gp-points c:+ 8)
)

(defrule
	(goal gl-current-age gv-feudal-up)
	(nor	(goal CASTLE 0)
		(goal CASTLE 2))
	(building-type-count-total castle == 0)
=>
	(set-strategic-number sn-stone-gatherer-percentage 26)
	(disable-self)
)

(defrule
	(nand	(not	(goal CASTLE 0))
		(building-type-count-total castle < 3))
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(stone-amount > 800)
=>
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(or	(and	(up-compare-goal CASTLE != 0)
			(and	(building-type-count-total castle < 3)
				(stone-amount > 800)))
		(and	(game-time > 3000)
			(and	(stone-amount < castle-stone)
				(strategic-number sn-stone-gatherer-percentage < 4))))
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
=>
	(set-strategic-number sn-stone-gatherer-percentage 4)
)

(defrule
	(or	(and	(up-compare-goal CASTLE != 0)
			(and	(game-time > 2100)
				(building-type-count-total castle < 3)))
		(or	(goal gl-wonder-build-attempt-stage saving-resources)
			(and	(game-time > 1500)
				(up-compare-const gv-feudal-age-end == 1))))
	(strategic-number sn-stone-gatherer-percentage < 6)
=>
	(set-strategic-number sn-stone-gatherer-percentage 6)
)
#end-if; Not DM

#load-if-defined DEFEND-WONDER
(defrule
	(building-available bombard-tower)
	(or	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
		(building-type-count-total wonder > 0))
	(civilian-population > 40)
	(strategic-number sn-stone-gatherer-percentage < 10)
=>
	(set-strategic-number sn-stone-gatherer-percentage 10)
)
#end-if

#load-if-not-defined UP-MICHI-STYLE
#load-if-not-defined DEATH-MATCH

#load-if-not-defined HUN-CIV
#load-if-not-defined SPANISH-CIV
(defrule
	(up-compare-goal gl-strategy != xbow-rush)
=>
	(up-jump-rule 13)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
=>
	(set-strategic-number sn-food-gatherer-percentage 38)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 22)
	(set-strategic-number sn-stone-dropsite-distance 50)
	(disable-self)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 25)
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-gold-gatherer-percentage 37)
	(disable-self)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal RAM 1)
	(research-completed ri-bodkin-arrow)
	(unit-type-count-total battering-ram-line < 1)
	(wood-amount < 200)
	(strategic-number sn-wood-gatherer-percentage != 50)
	(current-age == castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 15)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 35)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal RAM 1)
	(research-completed ri-bodkin-arrow)
	(unit-type-count-total battering-ram-line < 1)
	(wood-amount >= 300)
	(strategic-number sn-wood-gatherer-percentage != 41)
	(current-age == castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 15)
	(set-strategic-number sn-wood-gatherer-percentage 41)
	(set-strategic-number sn-gold-gatherer-percentage 44)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal RAM 0)
		(unit-type-count-total battering-ram-line > 0))
	(research-completed ri-bodkin-arrow)
	(research-completed ri-crossbow)
	(gold-amount < 200)
	(wood-amount < 200)
	(strategic-number sn-wood-gatherer-percentage != 40)
	(current-age == castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 15)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 45)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal RAM 0)
		(unit-type-count-total battering-ram-line > 0))
	(research-completed ri-bodkin-arrow)
	(research-completed ri-crossbow)
	(gold-amount >= 300)
	(wood-amount < 200)
	(strategic-number sn-wood-gatherer-percentage != 52)
	(current-age == castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 15)
	(set-strategic-number sn-wood-gatherer-percentage 52)
	(set-strategic-number sn-gold-gatherer-percentage 33)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal RAM 0)
		(unit-type-count-total battering-ram-line > 0))
	(research-completed ri-bodkin-arrow)
	(research-completed ri-crossbow)
	(gold-amount < 200)
	(wood-amount >= 300)
	(strategic-number sn-wood-gatherer-percentage != 31)
	(current-age == castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 15)
	(set-strategic-number sn-wood-gatherer-percentage 31)
	(set-strategic-number sn-gold-gatherer-percentage 54)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal TC 1)
		(building-type-count-total town-center > 2))
	(or	(goal RAM 0)
		(unit-type-count-total battering-ram-line > 0))
	(research-completed ri-bodkin-arrow)
	(gold-amount < 200)
	(wood-amount < 200)
	(strategic-number sn-wood-gatherer-percentage != 45)
	(current-age >= castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 22)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 38)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal TC 1)
		(building-type-count-total town-center > 2))
	(or	(goal RAM 0)
		(unit-type-count-total battering-ram-line > 0))
	(research-completed ri-bodkin-arrow)
	(gold-amount >= 300)
	(wood-amount < 200)
	(strategic-number sn-wood-gatherer-percentage != 46)
	(current-age >= castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 22)
	(set-strategic-number sn-wood-gatherer-percentage 46)
	(set-strategic-number sn-gold-gatherer-percentage 32)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal TC 1)
		(building-type-count-total town-center > 2))
	(or	(goal RAM 0)
		(unit-type-count-total battering-ram-line > 0))
	(research-completed ri-bodkin-arrow)
	(gold-amount < 200)
	(wood-amount >= 300)
	(strategic-number sn-wood-gatherer-percentage != 27)
	(current-age >= castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 22)
	(set-strategic-number sn-wood-gatherer-percentage 27)
	(set-strategic-number sn-gold-gatherer-percentage 50)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal TC 1)
		(building-type-count-total town-center > 2))
	(or	(goal RAM 0)
		(unit-type-count-total battering-ram-line > 0))
	(research-completed ri-bodkin-arrow)
	(gold-amount < 200)
	(wood-amount >= 500)
	(commodity-selling-price food >= 50)
	(strategic-number sn-wood-gatherer-percentage != 20)
	(current-age >= castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 20)
	(set-strategic-number sn-gold-gatherer-percentage 40)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal TC 1)
		(building-type-count-total town-center > 2))
	(or	(goal RAM 0)
		(unit-type-count-total battering-ram-line > 0))
	(research-completed ri-bodkin-arrow)
	(gold-amount < 200)
	(wood-amount >= 500)
	(commodity-selling-price food < 50)
	(strategic-number sn-wood-gatherer-percentage != 30)
	(current-age >= castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 40)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal TC 1)
	(current-age >= castle-age)
	(or	(and	(stone-amount < 100)
			(building-type-count-total town-center < 3))
		(and	(stone-amount < 200)
			(building-type-count-total town-center < 2)))
=>
	(set-strategic-number sn-stone-gatherer-percentage 5)
)
#end-if
#end-if

#load-if-defined KOREAN-CIV
(defrule
	(up-compare-goal gl-strategy != korean-boom)
=>
	(up-jump-rule 10)
)

(defrule
	(goal gl-strategy korean-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
=>
	(set-goal CASTLE 2)
	(disable-self)
)

(defrule
	(goal gl-strategy korean-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 10)
	(set-strategic-number sn-stone-gatherer-percentage 15)
	(disable-self)
)

(defrule
	(goal gl-strategy korean-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 27)
	(set-strategic-number sn-wood-gatherer-percentage 53)
	(set-strategic-number sn-gold-gatherer-percentage 10)
	(set-strategic-number sn-stone-gatherer-percentage 10)
	(disable-self)
)


(defrule
	(goal gl-strategy korean-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(building-type-count-total town-center > 1)
	(current-age == castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 10)
	(disable-self)
)

(defrule
	(goal gl-strategy korean-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(building-type-count-total town-center > 2)
	(current-age == castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 10)
	(set-strategic-number sn-stone-gatherer-percentage 20)
	(disable-self)
)

(defrule
	(goal gl-strategy korean-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(gold-amount < 200)
	(building-type-count-total monastery > 1)
	(players-unit-type-count any-enemy knight-line > 3)
	(strategic-number sn-gold-gatherer-percentage < 20)
	(current-age == castle-age)
=>
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(disable-self)
)

(defrule
	(goal gl-strategy korean-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(building-type-count-total town-center > 2)
	(building-type-count-total castle > 0)
	(current-age == castle-age)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 5)
	(disable-self)
)

(defrule
	(goal gl-strategy korean-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(gold-amount < 200)
	(building-type-count-total monastery > 2)
	(building-type-count-total town-center > 2)
	(players-unit-type-count any-enemy knight-line > 3)
	(strategic-number sn-gold-gatherer-percentage < 25)
	(current-age == castle-age)
=>
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(disable-self)
)

(defrule
	(goal gl-strategy korean-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(food-amount > 1000)
	(gold-amount < 800)
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 35)
	(disable-self)
)

(defrule
	(goal gl-strategy korean-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(food-amount < 1000)
	(gold-amount > 800)
=>
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(disable-self)
)
#end-if

#load-if-defined TURKISH-CIV
#load-if-not-defined ARENA-MAP
(defrule
	(up-compare-goal gl-strategy != turkish-fast-imp)
=>
	(up-jump-rule 7)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(up-compare-goal gl-current-age <= gv-castle)
	(or	(strategic-number sn-food-gatherer-percentage != 45)
		(or	(strategic-number sn-gold-gatherer-percentage != 34)
			(strategic-number sn-gold-gatherer-percentage != 21)))
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 21)
	(set-strategic-number sn-enemy-flush-notice 0)
	(set-strategic-number sn-stone-dropsite-distance 50)
	(set-goal TSA 0)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(up-compare-goal gl-current-age >= gv-castle-up)
	(building-type-count-total archery-range < 2)
=>
	(set-strategic-number sn-food-gatherer-percentage 34)
	(set-strategic-number sn-wood-gatherer-percentage 52)
	(set-strategic-number sn-gold-gatherer-percentage 14)
	(disable-self)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(up-compare-goal gl-current-age >= gv-castle-up)
	(building-type-count-total archery-range > 1)
=>
	(set-strategic-number sn-food-gatherer-percentage 46)
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(disable-self)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal RAM 0)
	(current-age == imperial-age)
	(unit-type-count-total scout-cavalry-line < 4)
	(building-type-count-total mining-camp > 1)
	(building-type-count-total archery-range > 2)
	(strategic-number sn-wood-gatherer-percentage != 25)
	(strategic-number sn-wood-gatherer-percentage != 24)
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 24)
	(set-strategic-number sn-gold-gatherer-percentage 31)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal RAM 0)
	(current-age == imperial-age)
	(unit-type-count-total scout-cavalry-line > 3)
	(building-type-count-total mining-camp > 1)
	(building-type-count-total archery-range > 2)
	(strategic-number sn-wood-gatherer-percentage != 25)
=>
	(set-strategic-number sn-food-gatherer-percentage 47)
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(set-strategic-number sn-gold-gatherer-percentage 28)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal RAM 1)
	(current-age == imperial-age)
	(building-type-count-total mining-camp > 1)
	(building-type-count-total archery-range > 0)
	(strategic-number sn-wood-gatherer-percentage != 39)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 39)
	(set-strategic-number sn-gold-gatherer-percentage 21)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(and	(current-age == imperial-age)
			(game-time > 2200))
		(and	(up-compare-goal gl-current-age >= gv-castle-up)
			(player-valid 3)))
	(strategic-number sn-wood-gatherer-percentage < 42)
	(building-type-count-total town-center < 3)
=>
	(set-strategic-number sn-stone-gatherer-percentage 5)
	(set-strategic-number sn-stone-dropsite-distance 3)
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(set-goal TC 1)
)
#end-if
#end-if

#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined SPANISH-CIV
(defrule
	(up-compare-goal gl-strategy != knight-archer)
=>
	(up-jump-rule 3)
)

(defrule
	(goal gl-strategy knight-archer)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == feudal-age)
	(or	(strategic-number sn-food-gatherer-percentage != 35)
		(or	(strategic-number sn-wood-gatherer-percentage != 44)
			(strategic-number sn-gold-gatherer-percentage != 21)))
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 44)
	(set-strategic-number sn-gold-gatherer-percentage 21)
)

(defrule
	(goal gl-strategy knight-archer)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal SLING 0)
	(current-age-time <= 120)
	(current-age == castle-age)
	(or	(strategic-number sn-food-gatherer-percentage != 35)
		(or	(strategic-number sn-wood-gatherer-percentage != 40)
			(strategic-number sn-gold-gatherer-percentage != 25)))
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 25)
)

(defrule
	(goal gl-strategy knight-archer)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal SLING 0)
	(current-age-time > 120)
	(current-age-time < 300)
	(current-age == castle-age)
	(or	(strategic-number sn-food-gatherer-percentage != 40)
		(or	(strategic-number sn-wood-gatherer-percentage != 40)
			(strategic-number sn-gold-gatherer-percentage != 20)))
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 20)
)
#else
(defrule
	(up-compare-goal gl-strategy != knight-archer)
=>
	(up-jump-rule 3)
)

(defrule
	(goal gl-strategy knight-skirm)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == feudal-age)
	(or	(strategic-number sn-food-gatherer-percentage != 36)
		(or	(strategic-number sn-wood-gatherer-percentage != 53)
			(strategic-number sn-gold-gatherer-percentage != 11)))
=>
	(set-strategic-number sn-food-gatherer-percentage 36)
	(set-strategic-number sn-wood-gatherer-percentage 53)
	(set-strategic-number sn-gold-gatherer-percentage 11)
)

(defrule
	(goal gl-strategy knight-skirm)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal SLING 0)
	(current-age-time <= 120)
	(current-age == castle-age)
	(or	(strategic-number sn-food-gatherer-percentage != 39)
		(or	(strategic-number sn-wood-gatherer-percentage != 48)
			(strategic-number sn-gold-gatherer-percentage != 13)))
=>
	(set-strategic-number sn-food-gatherer-percentage 39)
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 13)
)

(defrule
	(goal gl-strategy knight-skirm)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal SLING 0)
	(current-age-time > 120)
	(current-age-time < 300)
	(current-age == castle-age)
	(or	(strategic-number sn-food-gatherer-percentage != 41)
		(or	(strategic-number sn-wood-gatherer-percentage != 47)
			(strategic-number sn-gold-gatherer-percentage != 12)))
=>
	(set-strategic-number sn-food-gatherer-percentage 41)
	(set-strategic-number sn-wood-gatherer-percentage 47)
	(set-strategic-number sn-gold-gatherer-percentage 12)
)
#end-if

(defrule
	(goal gl-strategy knight-archer)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(current-age-time > 300)
		(or	(up-compare-goal SLING != 0)
			(or	(up-compare-goal DOCK != 0)
				(gold-amount > 400))))
	(current-age == castle-age)
=>
	(set-goal gl-fixed-eco-balancing NO)
	(disable-self)
)
#end-if
#end-if

#load-if-defined HUN-CIV
(defrule
	(up-compare-goal gl-strategy != CA-boom)
=>
	(up-jump-rule 11)
)

(defrule
	(goal gl-strategy CA-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == feudal-age)
	(or	(strategic-number sn-food-gatherer-percentage != 39)
		(or	(strategic-number sn-wood-gatherer-percentage != 49)
			(strategic-number sn-gold-gatherer-percentage != 12)))
	(up-compare-goal POSITION != POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 39)
	(set-strategic-number sn-wood-gatherer-percentage 49)
	(set-strategic-number sn-gold-gatherer-percentage 12)
)

(defrule
	(goal gl-strategy CA-boom)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time < 240)
	(or	(strategic-number sn-food-gatherer-percentage != 34)
		(or	(strategic-number sn-wood-gatherer-percentage != 42)
			(strategic-number sn-gold-gatherer-percentage != 24)))
	(up-compare-goal POSITION != POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 34)
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(set-strategic-number sn-gold-gatherer-percentage 24)
)

(defrule
	(goal gl-strategy CA-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == feudal-age)
	(or	(strategic-number sn-food-gatherer-percentage != 36)
		(or	(strategic-number sn-wood-gatherer-percentage != 54)
			(strategic-number sn-gold-gatherer-percentage != 10)))
	(goal POSITION POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 36)
	(set-strategic-number sn-wood-gatherer-percentage 54)
	(set-strategic-number sn-gold-gatherer-percentage 10)
)

(defrule
	(goal gl-strategy CA-boom)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time < 240)
	(or	(strategic-number sn-food-gatherer-percentage != 41)
		(or	(strategic-number sn-wood-gatherer-percentage != 45)
			(strategic-number sn-gold-gatherer-percentage != 14)))
	(goal POSITION POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 41)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 14)
)

(defrule
	(goal gl-strategy CA-boom)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 240)
	(current-age-time < 600)
	(building-type-count-total town-center == 1)
	(or	(strategic-number sn-food-gatherer-percentage != 32)
		(or	(strategic-number sn-wood-gatherer-percentage != 47)
			(strategic-number sn-gold-gatherer-percentage != 21)))
	(up-compare-goal POSITION != POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 32)
	(set-strategic-number sn-wood-gatherer-percentage 47)
	(set-strategic-number sn-gold-gatherer-percentage 21)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-strategy CA-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 240)
	(current-age-time < 600)
	(building-type-count-total town-center == 2)
	(or	(strategic-number sn-food-gatherer-percentage != 37)
		(or	(strategic-number sn-wood-gatherer-percentage != 42)
			(strategic-number sn-gold-gatherer-percentage != 21)))
	(up-compare-goal POSITION != POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 37)
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(set-strategic-number sn-gold-gatherer-percentage 21)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-strategy CA-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 240)
	(current-age-time < 600)
	(building-type-count-total town-center > 2)
	(or	(strategic-number sn-food-gatherer-percentage != 39)
		(or	(strategic-number sn-wood-gatherer-percentage != 42)
			(strategic-number sn-gold-gatherer-percentage != 19)))
	(up-compare-goal POSITION != POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 39)
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(set-strategic-number sn-gold-gatherer-percentage 19)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-strategy CA-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 240)
	(current-age-time < 600)
	(building-type-count-total town-center == 1)
	(or	(strategic-number sn-food-gatherer-percentage != 32)
		(or	(strategic-number sn-wood-gatherer-percentage != 54)
			(strategic-number sn-gold-gatherer-percentage != 14)))
	(goal POSITION POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 32)
	(set-strategic-number sn-wood-gatherer-percentage 54)
	(set-strategic-number sn-gold-gatherer-percentage 14)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-strategy CA-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 240)
	(current-age-time < 600)
	(building-type-count-total town-center == 2)
	(or	(strategic-number sn-food-gatherer-percentage != 36)
		(or	(strategic-number sn-wood-gatherer-percentage != 50)
			(strategic-number sn-gold-gatherer-percentage != 14)))
	(goal POSITION POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 36)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 14)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-strategy CA-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 240)
	(current-age-time < 600)
	(building-type-count-total town-center > 2)
	(or	(strategic-number sn-food-gatherer-percentage != 41)
		(or	(strategic-number sn-wood-gatherer-percentage != 45)
			(strategic-number sn-gold-gatherer-percentage != 14)))
	(goal POSITION POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 41)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 14)
)

(defrule
	(goal gl-strategy CA-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age >= castle-age)
	(or	(current-age-time > 600)
		(or	(up-compare-goal gl-current-age >= gv-castle-up)
			(or	(not	(goal DOCK 0))
				(gold-amount > 450))))
=>
	(set-goal gl-fixed-eco-balancing NO)
	(disable-self)
)
#else
#load-if-not-defined SPANISH-CIV
(defrule
	(up-compare-goal gl-strategy != xbow-boom)
=>
	(up-jump-rule 13)
)

(defrule
	(goal gl-strategy xbow-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == feudal-age)
	(or	(strategic-number sn-food-gatherer-percentage != 37)
		(or	(strategic-number sn-wood-gatherer-percentage != 45)
			(strategic-number sn-gold-gatherer-percentage != 18)))
	(up-compare-goal POSITION != POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 37)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 18)
)

(defrule
	(goal gl-strategy xbow-boom)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time < 120)
	(or	(strategic-number sn-food-gatherer-percentage != 30)
		(or	(strategic-number sn-wood-gatherer-percentage != 46)
			(strategic-number sn-gold-gatherer-percentage != 24)))
	(up-compare-goal POSITION != POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 46)
	(set-strategic-number sn-gold-gatherer-percentage 24)
)

(defrule
	(goal gl-strategy xbow-boom)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 120)
	(current-age-time < 240)
	(or	(strategic-number sn-food-gatherer-percentage != 32)
		(or	(strategic-number sn-wood-gatherer-percentage != 47)
			(strategic-number sn-gold-gatherer-percentage != 21)))
	(up-compare-goal POSITION != POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 32)
	(set-strategic-number sn-wood-gatherer-percentage 47)
	(set-strategic-number sn-gold-gatherer-percentage 21)
)

(defrule
	(goal gl-strategy xbow-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == feudal-age)
	(or	(strategic-number sn-food-gatherer-percentage != 36)
		(or	(strategic-number sn-wood-gatherer-percentage != 51)
			(strategic-number sn-gold-gatherer-percentage != 13)))
	(goal POSITION POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 36)
	(set-strategic-number sn-wood-gatherer-percentage 51)
	(set-strategic-number sn-gold-gatherer-percentage 13)
)

(defrule
	(goal gl-strategy xbow-boom)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time < 240)
	(or	(strategic-number sn-food-gatherer-percentage != 40)
		(or	(strategic-number sn-wood-gatherer-percentage != 46)
			(strategic-number sn-gold-gatherer-percentage != 14)))
	(goal POSITION POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-wood-gatherer-percentage 46)
	(set-strategic-number sn-gold-gatherer-percentage 14)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-strategy xbow-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 240)
	(current-age-time < 600)
	(building-type-count-total town-center == 1)
	(or	(strategic-number sn-food-gatherer-percentage != 30)
		(or	(strategic-number sn-wood-gatherer-percentage != 49)
			(strategic-number sn-gold-gatherer-percentage != 21)))
	(up-compare-goal POSITION != POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 49)
	(set-strategic-number sn-gold-gatherer-percentage 21)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-strategy xbow-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 240)
	(current-age-time < 600)
	(building-type-count-total town-center == 2)
	(or	(strategic-number sn-food-gatherer-percentage != 34)
		(or	(strategic-number sn-wood-gatherer-percentage != 45)
			(strategic-number sn-gold-gatherer-percentage != 21)))
	(up-compare-goal POSITION != POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 34)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 21)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-strategy xbow-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 240)
	(current-age-time < 600)
	(building-type-count-total town-center > 2)
	(or	(strategic-number sn-food-gatherer-percentage != 39)
		(or	(strategic-number sn-wood-gatherer-percentage != 40)
			(strategic-number sn-gold-gatherer-percentage != 21)))
	(up-compare-goal POSITION != POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 39)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 21)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-strategy xbow-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 240)
	(current-age-time < 600)
	(building-type-count-total town-center == 1)
	(or	(strategic-number sn-food-gatherer-percentage != 32)
		(or	(strategic-number sn-wood-gatherer-percentage != 56)
			(strategic-number sn-gold-gatherer-percentage != 12)))
	(goal POSITION POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 32)
	(set-strategic-number sn-wood-gatherer-percentage 56)
	(set-strategic-number sn-gold-gatherer-percentage 12)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-strategy xbow-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 240)
	(current-age-time < 600)
	(building-type-count-total town-center == 2)
	(or	(strategic-number sn-food-gatherer-percentage != 34)
		(or	(strategic-number sn-wood-gatherer-percentage != 52)
			(strategic-number sn-gold-gatherer-percentage != 14)))
	(goal POSITION POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 34)
	(set-strategic-number sn-wood-gatherer-percentage 52)
	(set-strategic-number sn-gold-gatherer-percentage 14)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(goal gl-strategy xbow-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 240)
	(current-age-time < 600)
	(building-type-count-total town-center > 2)
	(or	(strategic-number sn-food-gatherer-percentage != 39)
		(or	(strategic-number sn-wood-gatherer-percentage != 47)
			(strategic-number sn-gold-gatherer-percentage != 14)))
	(goal POSITION POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 41)
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 14)
)

(defrule
	(goal gl-strategy xbow-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age >= castle-age)
	(or	(current-age-time > 600)
		(or	(up-compare-goal gl-current-age >= gv-castle-up)
			(or	(not	(goal DOCK 0))
				(gold-amount > 450))))
=>
	(set-goal gl-fixed-eco-balancing NO)
	(disable-self)
)

(defrule
	(or	(up-compare-goal gl-current-age >= gv-castle-up)
		(game-time > 2700))
	(goal gl-strategy xbow-boom)
=>
	(set-goal gl-strategy default)
	(disable-self)
)
#end-if
#end-if

#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(up-compare-goal gl-strategy != krush)
=>
	(up-jump-rule 11)
)

(defrule
	(goal gl-strategy krush)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == feudal-age)
	(or	(strategic-number sn-food-gatherer-percentage != 35)
		(or	(strategic-number sn-wood-gatherer-percentage != 59)
			(strategic-number sn-gold-gatherer-percentage != 6)))
	(goal POSITION POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 59)
	(set-strategic-number sn-gold-gatherer-percentage 6)
)

(defrule
	(goal gl-strategy krush)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time < 120)
	(or	(strategic-number sn-food-gatherer-percentage != 42)
		(or	(strategic-number sn-wood-gatherer-percentage != 50)
			(strategic-number sn-gold-gatherer-percentage != 8)))
	(goal POSITION POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 42)
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 8)
)

(defrule
	(goal gl-strategy krush)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 120)
	(current-age-time < 240)
	(or	(strategic-number sn-food-gatherer-percentage != 47)
		(or	(strategic-number sn-wood-gatherer-percentage != 43)
			(strategic-number sn-gold-gatherer-percentage != 10)))
	(goal POSITION POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 47)
	(set-strategic-number sn-wood-gatherer-percentage 43)
	(set-strategic-number sn-gold-gatherer-percentage 10)
)

(defrule
	(goal gl-strategy krush)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == feudal-age)
	(or	(strategic-number sn-food-gatherer-percentage != 39)
		(or	(strategic-number sn-wood-gatherer-percentage != 47)
			(strategic-number sn-gold-gatherer-percentage != 14)))
	(up-compare-goal POSITION != POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 39)
	(set-strategic-number sn-wood-gatherer-percentage 47)
	(set-strategic-number sn-gold-gatherer-percentage 14)
)

(defrule
	(goal gl-strategy krush)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time < 120)
	(or	(strategic-number sn-food-gatherer-percentage != 44)
		(or	(strategic-number sn-wood-gatherer-percentage != 40)
			(strategic-number sn-gold-gatherer-percentage != 16)))
	(up-compare-goal POSITION != POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 44)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 16)
)

(defrule
	(goal gl-strategy krush)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 120)
	(current-age-time < 240)
	(or	(strategic-number sn-food-gatherer-percentage != 47)
		(or	(strategic-number sn-wood-gatherer-percentage != 36)
			(strategic-number sn-gold-gatherer-percentage != 17)))
	(up-compare-goal POSITION != POCKET)
=>
	(set-strategic-number sn-food-gatherer-percentage 47)
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-gold-gatherer-percentage 17)
)

(defrule
	(goal gl-strategy krush)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 240)
	(current-age-time < 600)
	(building-type-count-total town-center == 1)
	(or	(strategic-number sn-food-gatherer-percentage != 42)
		(or	(strategic-number sn-wood-gatherer-percentage != 44)
			(strategic-number sn-gold-gatherer-percentage != 14)))
=>
	(set-strategic-number sn-food-gatherer-percentage 42)
	(set-strategic-number sn-wood-gatherer-percentage 44)
	(set-strategic-number sn-gold-gatherer-percentage 14)
)

(defrule
	(goal gl-strategy krush)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 240)
	(current-age-time < 600)
	(building-type-count-total town-center == 2)
	(or	(strategic-number sn-food-gatherer-percentage != 44)
		(or	(strategic-number sn-wood-gatherer-percentage != 40)
			(strategic-number sn-gold-gatherer-percentage != 16)))
=>
	(set-strategic-number sn-food-gatherer-percentage 44)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 16)
)

(defrule
	(goal gl-strategy krush)
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == castle-age)
	(current-age-time >= 240)
	(current-age-time < 600)
	(building-type-count-total town-center > 2)
	(or	(strategic-number sn-food-gatherer-percentage != 43)
		(or	(strategic-number sn-wood-gatherer-percentage != 32)
			(strategic-number sn-gold-gatherer-percentage != 27)))
=>
	(set-strategic-number sn-food-gatherer-percentage 43)
	(set-strategic-number sn-wood-gatherer-percentage 32)
	(set-strategic-number sn-gold-gatherer-percentage 27)
)

(defrule
	(goal gl-strategy krush)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age >= castle-age)
	(or	(current-age-time > 600)
		(or	(up-compare-goal gl-current-age >= gv-castle-up)
			(or	(not	(goal DOCK 0))
				(or	(gold-amount > 450)
					(goal SLING 3)))))
=>
	(set-goal gl-fixed-eco-balancing NO)
	(disable-self)
)

(defrule
	(or	(up-compare-goal gl-current-age >= gv-castle-up)
		(game-time > 2400))
	(goal gl-strategy krush)
=>
	(set-goal gl-strategy default)
	(disable-self)
)
#end-if
#end-if

(defrule
	(up-compare-goal gl-current-age >= gv-dark-up)
	(or	(goal gl-strategy korean-boom)
		(and	(goal gl-strategy castle-drop)
			(up-compare-goal gl-current-age <= gv-feudal)))
	(current-age == feudal-age)
	(building-type-count-total castle == 0)
	(dropsite-min-distance stone < 4)
	(strategic-number sn-stone-gatherer-percentage < 15)
=>
	(set-strategic-number sn-stone-gatherer-percentage 15)
)

(defrule
	(nor	(goal CASTLE 0)
		(goal gl-strategy castle-drop))
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(building-type-count-total castle < 1)
	(strategic-number sn-stone-gatherer-percentage < 20)
	(strategic-number sn-stone-gatherer-percentage != castle-drop-stone-gp)
=>
	(set-strategic-number sn-stone-gatherer-percentage 20)
	(disable-self)
)

#load-if-not-defined AZTEC-CIV
#load-if-not-defined HUN-CIV
(defrule
	(up-compare-goal gl-strategy != castle-drop)
=>
	(up-jump-rule 3)
)

(defrule
	(goal gl-strategy castle-drop)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal CASTLE 2)
	(current-age == feudal-age)
	(building-type-count-total castle == 0)
	(dropsite-min-distance stone < 5)
	(strategic-number sn-stone-gatherer-percentage != fc-castle-drop-stone-gp)
	(strategic-number sn-stone-gatherer-percentage != castle-drop-stone-gp)
=>
	(set-strategic-number sn-food-gatherer-percentage fc-castle-drop-food-gp)
	(set-strategic-number sn-wood-gatherer-percentage fc-castle-drop-wood-gp)
	(set-strategic-number sn-gold-gatherer-percentage fc-castle-drop-gold-gp)
	(set-strategic-number sn-stone-gatherer-percentage fc-castle-drop-stone-gp)
)


(defrule
	(goal gl-strategy castle-drop)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal CASTLE 2)
	(or	(building-type-count-total castle > 0)
		(stone-amount >= castle-stone))
=>
	(set-strategic-number sn-food-gatherer-percentage castle-drop-food-gp)
	(set-strategic-number sn-wood-gatherer-percentage castle-drop-wood-gp)
	(set-strategic-number sn-gold-gatherer-percentage castle-drop-gold-gp)
	(set-strategic-number sn-stone-gatherer-percentage castle-drop-stone-gp)
	(disable-self)
)

(defrule
	(goal gl-strategy castle-drop)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age >= castle-age)
	(or	(current-age-time > 300)
		(or	(and	(up-compare-goal gl-my-villager-count-total > 80)
				(building-type-count-total castle > 0))
			(or	(building-type-count-total town-center > 2)
				(not	(goal DOCK 0)))))
=>
	(set-goal gl-fixed-eco-balancing NO)
	(disable-self)
)
#end-if
#end-if

#end-if
#else
(defrule
	(up-compare-goal gl-strategy != michi-boom)
=>
	(up-jump-rule 11)
)

#load-if-defined UP-GAME-AGE2-X2
#load-if-not-defined MONGOL-CIV
(defrule
	(goal gl-strategy michi-boom)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age == dark-age)
	(or	(strategic-number sn-food-gatherer-percentage != 52)
		(or	(strategic-number sn-wood-gatherer-percentage != 33)
			(strategic-number sn-gold-gatherer-percentage != 15)))
=>
	(set-strategic-number sn-food-gatherer-percentage 52)
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-gold-gatherer-percentage 15)
)
#else
(defrule
	(goal gl-strategy michi-boom)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age == dark-age)
	(or	(strategic-number sn-food-gatherer-percentage != 50)
		(or	(strategic-number sn-wood-gatherer-percentage != 35)
			(strategic-number sn-gold-gatherer-percentage != 15)))
=>
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 15)
)
#end-if
#else
(defrule
	(goal gl-strategy michi-boom)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age == dark-age)
	(or	(strategic-number sn-food-gatherer-percentage != 56)
		(or	(strategic-number sn-wood-gatherer-percentage != 29)
			(strategic-number sn-gold-gatherer-percentage != 15)))
=>
	(set-strategic-number sn-food-gatherer-percentage 56)
	(set-strategic-number sn-wood-gatherer-percentage 29)
	(set-strategic-number sn-gold-gatherer-percentage 15)
)
#end-if

(defrule
	(goal gl-strategy michi-boom)
	(up-compare-goal gl-current-age <= gv-feudal)
	(gold-amount >= 200)
	(strategic-number sn-gold-gatherer-percentage != 0)
=>
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(up-retask-gatherers gold c: 4)
)

(defrule
	(goal gl-strategy michi-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == feudal-age)
	(or	(strategic-number sn-food-gatherer-percentage != 32); 29
		(or	(strategic-number sn-wood-gatherer-percentage != 68); 71
			(strategic-number sn-gold-gatherer-percentage != 0)))
=>
	(set-strategic-number sn-food-gatherer-percentage 32)
	(set-strategic-number sn-wood-gatherer-percentage 68)
	(set-strategic-number sn-gold-gatherer-percentage 0)
)

(defrule
	(goal gl-strategy michi-boom)
	(current-age-time <= 120)
	(or	(building-type-count-total town-center > 2)
		(stone-amount < 100))
	(up-compare-goal gl-current-age >= gv-castle)
	(or	(strategic-number sn-food-gatherer-percentage != 63)
		(or	(strategic-number sn-wood-gatherer-percentage != 37)
			(strategic-number sn-gold-gatherer-percentage != 0)))
=>
	(set-strategic-number sn-food-gatherer-percentage 63)
	(set-strategic-number sn-wood-gatherer-percentage 37)
	(set-strategic-number sn-gold-gatherer-percentage 0)
)

(defrule
	(goal gl-strategy michi-boom)
	(current-age-time > 120)
	(up-compare-goal gl-current-age >= gv-castle)
	(strategic-number sn-food-gatherer-percentage != 46)
	(strategic-number sn-food-gatherer-percentage != 52)
	(or	(strategic-number sn-food-gatherer-percentage != 56)
		(or	(strategic-number sn-wood-gatherer-percentage != 44)
			(strategic-number sn-gold-gatherer-percentage != 0)))
=>
	(set-strategic-number sn-food-gatherer-percentage 56)
	(set-strategic-number sn-wood-gatherer-percentage 44)
	(set-strategic-number sn-gold-gatherer-percentage 0)
)

(defrule
	(goal gl-strategy michi-boom)
	(current-age-time > 120)
	(building-type-count-total town-center < michi-TCs)
	(stone-amount >= 100)
;	(wood-amount < town-center-wood); Using this will cause instant extra farming -> no more wood for TC
	(up-compare-goal gl-current-age >= gv-castle)
	(strategic-number sn-food-gatherer-percentage != 46)
	(strategic-number sn-food-gatherer-percentage != 52)
	(or	(strategic-number sn-food-gatherer-percentage != 46)
		(strategic-number sn-wood-gatherer-percentage != 54))
=>
	(set-strategic-number sn-food-gatherer-percentage 46)
	(set-strategic-number sn-wood-gatherer-percentage 54)
	(set-strategic-number sn-gold-gatherer-percentage 0)
)

(defrule
	(goal gl-strategy michi-boom)
	(current-age-time > 450)
	(up-compare-goal gl-my-villager-count-total > 80)
	(building-type-count-total town-center > 5)
	(up-compare-goal gl-current-age >= gv-castle)
	(or	(strategic-number sn-food-gatherer-percentage != 52)
		(strategic-number sn-wood-gatherer-percentage != 36))
=>
	(set-strategic-number sn-food-gatherer-percentage 52)
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-gold-gatherer-percentage 12)
)

(defrule
	(goal gl-strategy michi-boom)
	(current-age-time > 510)
	(building-type-count-total town-center >= michi-TCs)
	(or	(and	(building-type-count-total monastery > 0)
			(building-type-count-total siege-workshop > 0))
		(building-type-count-total castle > 0))
	(up-compare-goal gl-current-age >= gv-castle)
	(or	(strategic-number sn-food-gatherer-percentage != 46)
		(strategic-number sn-wood-gatherer-percentage != 28))
=>
	(set-strategic-number sn-food-gatherer-percentage 46)
	(set-strategic-number sn-wood-gatherer-percentage 28)
	(set-strategic-number sn-gold-gatherer-percentage 26)
)

(defrule
	(goal gl-strategy michi-boom)
	(current-age-time > 510)
	(building-type-count-total town-center >= michi-TCs)
	(or	(and	(building-type-count-total monastery > 0)
			(building-type-count-total siege-workshop > 0))
		(building-type-count-total castle > 0))
	(up-compare-goal gl-current-age >= gv-castle)
	(or	(gold-amount > 550)
		(civ-selected byzantine))
	(gold-amount > 350)
	(food-amount < needed-castle-food)
	(strategic-number sn-gold-gatherer-percentage > 11)
=>
	(set-strategic-number sn-gold-gatherer-percentage 11)
)

(defrule
	(goal gl-strategy michi-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
=>
	(set-strategic-number sn-stone-gatherer-percentage 7)
	(disable-self)
)

(defrule
	(goal gl-strategy michi-boom)
	(up-compare-goal gl-current-age >= gv-castle-up)
=>
	(set-goal gl-strategy default)
	(set-strategic-number sn-enable-training-queue 0)
	(disable-self)
)
#end-if

#load-if-not-defined TURKISH-CIV
(defrule
	(goal gl-strategy skirm-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(current-age == feudal-age)
		(current-age-time < 180))
	(or	(strategic-number sn-food-gatherer-percentage != 43)
		(or	(strategic-number sn-wood-gatherer-percentage != 54)
			(strategic-number sn-gold-gatherer-percentage != 3)))
=>
	(set-strategic-number sn-food-gatherer-percentage 43)
	(set-strategic-number sn-wood-gatherer-percentage 54)
	(set-strategic-number sn-gold-gatherer-percentage 3)
)
#end-if

; ============ WONDER RACE

#load-if-defined WONDER-RACE
(defrule
	(or	(and	(goal gl-current-age gv-dark)
			(and	(up-compare-goal gl-my-villager-count-total < wonder-dark-villagers)
				(starting-resources == low-resources)))
		(or	(and	(current-age == imperial-age)
				(up-compare-goal gl-my-villager-count-total < 40))
			(current-age-time < 35)))
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)

(defrule
	(game-time > 70)
	(or	(up-compare-goal gl-strategy != wonder-race-fi)
		(strategic-number sn-allow-resource-spending != -1))
=>
	(set-goal gl-strategy default)
	(set-goal gl-strategy wonder-race-fi)
	(set-goal gl-strategy-type FC)
	(set-strategic-number sn-allow-resource-spending -1)
)

; ============= WONDER RACE BUILDINGS

#load-if-not-defined IMPERIAL-AGE-START
#load-if-not-defined POST-IMPERIAL-AGE-START
(defrule
	(goal gl-current-age gv-dark)
	(goal DOCK 0)
	(building-type-count-total farm < 18)
	(dropsite-min-distance deer-hunting > 27)
	(building-type-count-total mill < 2)
	(or	(idle-farm-count < 1)
		(building-type-count-total farm < 7))
	(building-type-count-total lumber-camp >= 1)
	(can-build farm)
=>
	(set-strategic-number sn-maximum-town-size 18); To enable building farms next to mill
	(build farm)
)

(defrule
	(up-compare-goal gl-current-age > gv-dark-up)
	(up-compare-goal gl-current-age <= gv-feudal)
	(building-type-count-total market < 1)
	(can-build-with-escrow market)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(build market)
)

(defrule
	(up-compare-goal gl-current-age > gv-dark-up)
	(up-compare-goal gl-current-age <= gv-castle)
	(building-type-count-total blacksmith < 1)
	(building-type-count-total siege-workshop < 1)
	(can-build-with-escrow blacksmith)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(build blacksmith)
)

(defrule
	(current-age == castle-age)
	(up-compare-goal gl-current-age == gv-castle)
	(up-compare-goal gl-start-with-castle != YES)
	(or	(building-type-count-total siege-workshop < 1)
		(building-type-count-total monastery < 1))
=>
	(set-escrow-percentage wood 100)
)

(defrule
	(up-compare-goal gl-current-age == gv-castle)
	(current-age == castle-age)
	(up-compare-goal gl-start-with-castle != YES)
	(building-type-count-total monastery < 1)
	(can-build-with-escrow monastery)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(build monastery)
)
#end-if
#end-if
(defrule
	(goal gl-current-age gv-feudal)
	(current-age == feudal-age)
	(goal DOCK 0)
	(idle-farm-count < 1)
	(building-type-count-total farm < 11)
	(building-type-count-total market > 0)
	(building-type-count-total blacksmith > 0)
	(can-build farm)
=>
	(set-strategic-number sn-maximum-town-size 18)
	(build farm)
)

(defrule
	(up-compare-goal gl-current-age <= gv-castle)
	(current-age == castle-age)
	(up-compare-goal gl-start-with-castle != YES)
	(building-type-count-total siege-workshop < 1)
	(can-build-with-escrow siege-workshop)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(build siege-workshop)
)

(defrule
	(game-time < 240)
	(building-type-count-total house < 1)
	(up-pending-objects c: house < 1)
	(building-type-count-total town-center > 0)
	(population-headroom > 4)
	(housing-headroom < 5)
	(can-build-with-escrow house)
=>
	(release-escrow wood)
	(up-assign-builders c: house c: 2)
	(up-set-placement-data my-player-number villager-class c: 2)
	(up-build place-control 0 c: house)
)

(defrule
	(game-time < 240)
	(building-type-count-total house < 4)
	(up-pending-objects c: house < 1)
	(building-type-count-total town-center > 0)
	(population-headroom > 4)
	(housing-headroom < 5)
	(can-build-with-escrow house)
=>
	(release-escrow wood)
	(up-assign-builders c: house c: 1)
	(up-set-placement-data my-player-number villager-class c: 2)
	(up-build place-control 0 c: house)
)

(defrule
	(or	(up-compare-goal gl-current-age >= gv-castle-up)
		(starting-age > castle-age))
	(wood-amount < 1000)
	(dropsite-min-distance wood > 5)
	(dropsite-min-distance wood < 255)
	(can-build-with-escrow lumber-camp)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(build lumber-camp)
)

(defrule
	(or	(up-compare-goal gl-current-age >= gv-castle-up)
		(starting-age > castle-age))
	(resource-found gold)
	(gold-amount < 1000)
	(dropsite-min-distance gold > 3)
	(dropsite-min-distance gold < 255)
	(can-build-with-escrow mining-camp)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(build mining-camp)
)

(defrule
	(or	(up-compare-goal gl-current-age >= gv-castle-up)
		(starting-age > castle-age))
	(resource-found stone)
	(stone-amount < 1000)
	(dropsite-min-distance stone > 3)
	(dropsite-min-distance stone < 255)
	(can-build-with-escrow mining-camp)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(build mining-camp)
)

(defrule
	(up-compare-goal gl-my-villager-count > 20)
	(up-compare-goal gl-current-age == gv-castle-up)
=>
	(up-delete-objects c: farm c: 32767)
)

(defrule
	(up-compare-goal gl-current-age >= gv-castle-up)
	(current-age == imperial-age)
	(or	(and	(wood-amount > 900)
			(and	(gold-amount > 900)
				(stone-amount > 900)))
		(building-type-count-total wonder > 0))
=>
	(up-delete-objects c: farm c: 32767)
	(up-delete-objects c: monastery c: 32767)
	(up-delete-objects c: siege-workshop c: 32767)
	(up-delete-objects c: barracks c: 32767)
	(up-delete-objects c: blacksmith c: 32767)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total wonder > 0)
=>
	(delete-building market)
)

(defrule
	(current-age == imperial-age)
	(or	(food-amount < 50)
		(or	(up-compare-goal gl-my-villager-count-total > 30)
			(housing-headroom < 1)))
	(building-type-count-total wonder > 0)
=>
	(delete-building town-center)
)

(defrule
	(current-age == imperial-age)
=>
	(set-escrow-percentage stone 100)
	(set-escrow-percentage wood 100)
	(set-escrow-percentage gold 100)
	(up-modify-escrow wood c:= 6000)
	(up-modify-escrow gold c:= 6000)
	(up-modify-escrow stone c:= 6000)
)

(defrule
	(up-compare-goal gl-current-age >= gv-castle)
	(current-age == castle-age)
	(food-amount > 700)
	(current-age-time > 40)
=>
	(set-escrow-percentage food 100)
	(set-goal gl-strategy wonder-race-blocked-vills)
)

(defrule
	(current-age == castle-age)
	(up-compare-goal gl-current-age >= gv-castle-up)
=>
	(release-escrow food)
	(release-escrow wood)
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
)

(defrule
	(building-type-count-total wonder < 1)
	(can-build-with-escrow wonder)
=>
	(release-escrow stone)
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage stone 0)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(up-modify-escrow wood c:= 0)
	(up-modify-escrow gold c:= 0)
	(up-modify-escrow stone c:= 0)
	(up-assign-builders c: wonder c: 45)
	(build wonder)
)

; ============= ECO BALANCING

#load-if-not-defined IMPERIAL-AGE-START
#load-if-not-defined POST-IMPERIAL-AGE-START
(defrule
	(goal gl-current-age gv-dark)
	(not	(goal DOCK 0))
	(up-compare-goal gl-my-villager-count-total > 23)
	(food-amount > 460)
	(building-type-count-total town-center == 1)
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 55)
	(disable-self)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock != 998)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age == dark-age)
	(or	(strategic-number sn-food-gatherer-percentage != 35)
		(strategic-number sn-wood-gatherer-percentage != 55))
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 55)
	(set-strategic-number sn-gold-gatherer-percentage 10)
	(set-strategic-number sn-skip-first-mining-camp 0)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(up-compare-goal gl-current-age <= gv-castle)
	(or	(strategic-number sn-food-gatherer-percentage != 37)
		(strategic-number sn-gold-gatherer-percentage != 33))
=>
	(set-strategic-number sn-food-gatherer-percentage 37)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 33)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock != 998)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(up-compare-goal gl-current-age <= gv-castle)
	(or	(strategic-number sn-food-gatherer-percentage != 5)
		(strategic-number sn-gold-gatherer-percentage != 38))
=>
	(set-strategic-number sn-food-gatherer-percentage 5)
	(set-strategic-number sn-wood-gatherer-percentage 55)
	(set-strategic-number sn-gold-gatherer-percentage 38)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(up-compare-goal gl-current-age >= gv-castle-up)
=>
	(set-strategic-number sn-food-gatherer-percentage 0)
	(set-strategic-number sn-wood-gatherer-percentage 31)
	(set-strategic-number sn-gold-gatherer-percentage 30)
	(set-strategic-number sn-stone-gatherer-percentage 39)
	(disable-self)
)
#end-if
#end-if

#load-if-not-defined DARK-AGE-START
#load-if-not-defined FEUDAL-AGE-START
#load-if-not-defined CASTLE-AGE-START
(defrule
	(starting-resources == low-resources)
=>
	(set-strategic-number sn-food-gatherer-percentage 15)
	(set-strategic-number sn-wood-gatherer-percentage 37)
	(set-strategic-number sn-gold-gatherer-percentage 29)
	(set-strategic-number sn-stone-gatherer-percentage 19)
)

(defrule
	(starting-resources > low-resources)
=>
	(set-strategic-number sn-food-gatherer-percentage 0)
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 36)
	(set-strategic-number sn-stone-gatherer-percentage 24)
	(set-strategic-number sn-maximum-food-drop-distance 0)
)
#end-if
#end-if
#end-if

(defrule
	(or	(up-compare-goal gl-current-age >= gv-castle-up)
		(starting-age > castle-age))
	(wood-amount > 1000)
=>
	(set-strategic-number sn-wood-gatherer-percentage 10)
)

(defrule
	(or	(up-compare-goal gl-current-age >= gv-castle-up)
		(starting-age > castle-age))
	(gold-amount > 1000)
=>
	(set-strategic-number sn-gold-gatherer-percentage 10)
)

(defrule
	(or	(up-compare-goal gl-current-age >= gv-castle-up)
		(starting-age > castle-age))
	(stone-amount > 1000)
=>
	(set-strategic-number sn-gold-gatherer-percentage 10)
)

; ============= MARKET

(defrule
	(up-compare-goal gl-current-age <= gv-castle)
	(current-age == castle-age)
	(gold-amount >= high-castle-gold)
	(food-amount < needed-castle-food)
	(can-buy-commodity food)
=>
	(buy-commodity food)
	(chat-to-player my-player-number "Buy food for up")
)

(defrule
	(dropsite-min-distance wood >= 0)
	(dropsite-min-distance wood < 255)
	(or	(and	(current-age == castle-age)
			(and	(food-amount >= needed-castle-food)
				(and	(gold-amount < needed-castle-gold)
					(up-compare-goal gl-current-age <= gv-castle))))
		(wood-amount >= 1100))
	(wood-amount >= 150)
	(can-sell-commodity wood)
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "Sell wood")
)

(defrule
	(or	(and	(up-compare-goal gl-current-age <= gv-castle)
			(and	(current-age == castle-age)
				(and	(gold-amount < needed-castle-gold)
					(food-amount >= very-high-castle-food))))
		(and	(up-compare-goal gl-current-age >= gv-castle-up)
			(unit-type-count-total civilian-population >= 24)))
	(can-sell-commodity food)
=>
	(sell-commodity food)
)

(defrule
	(gold-amount >= 1140)
	(wood-amount < 1000)
=>
	(release-escrow gold)
	(buy-commodity wood)
)

(defrule
	(gold-amount >= 1170)
	(stone-amount < 1000)
=>
	(release-escrow gold)
	(buy-commodity stone)
)

; ============== WATER MAP SUPPORT

#load-if-not-defined IMPERIAL-AGE-START
#load-if-not-defined POST-IMPERIAL-AGE-START
(defrule
	(game-time > 10)
	(or 	(cc-players-unit-type-count 0 deep-fish > 20)
		(or	(cc-players-unit-type-count 0 shore-fish > 25)
			(and	(cc-players-unit-type-count 0 deep-fish > 9)
				(cc-players-unit-type-count 0 shore-fish > 9))))
	(building-type-count-total town-center > 0)
=>
	(enable-wall-placement 2)
	(set-strategic-number sn-minimum-water-body-size-for-dock 1000)
	(chat-to-player my-player-number "Water map - enable docking")
	(set-goal DOCK 1)
	(disable-self)
)

(defrule
	(or	(strategic-number sn-minimum-water-body-size-for-dock >= 1000)
		(and	(map-type custom)
			(current-age-time > 60)))
	(or	(current-age == feudal-age)
		(building-type-count-total town-center > 1))
	(strategic-number sn-maximum-town-size < 17)
=>
	(set-strategic-number sn-maximum-town-size 17)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= 1000)
	(current-age-time > 20)
	(current-age == feudal-age)
	(up-compare-goal gl-current-age <= gv-feudal)
	(strategic-number sn-maximum-town-size < 21)
=>
	(set-strategic-number sn-maximum-town-size 21)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= 1000)
	(current-age >= castle-age)
	(current-age-time > 100)
	(strategic-number sn-maximum-town-size < 21)
=>
	(set-strategic-number sn-maximum-town-size 21)
)

(defrule
	(not	(goal DOCK 0))
	(or	(building-type-count-total lumber-camp > 0)
		(wood-amount > 350))
	(building-type-count-total dock < 1)
	(up-compare-goal gl-current-age <= gv-feudal)
	(game-time < 1300)
	(can-build dock)
=>
	(build dock)
	(chat-to-player my-player-number "Dock")
)

(defrule
	(not	(goal DOCK 0))
	(or	(building-type-count-total lumber-camp > 0)
		(wood-amount > 350))
	(building-type-count-total mill > 0)
	(building-type-count-total dock < 2)
	(up-compare-goal gl-current-age <= gv-feudal)
	(game-time < 1300)
	(can-build dock)
=>
	(build dock)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == 1000)
	(not	(goal DOCK 0))
	(wood-amount > 200)
	(building-type-count-total mill > 0)
	(building-type-count-total dock == 0)
	(up-compare-goal gl-my-villager-count-total > 20)
	(wood-amount > 150)
	(up-compare-goal gl-current-age <= gv-feudal)
	(game-time < 1200)
=>
	(set-goal DOCK 0)
	(chat-to-player my-player-number "Placing dock has failed")
	(set-strategic-number sn-minimum-water-body-size-for-dock 998); Might be undockable map so play it as so
)

(defrule
	(up-compare-goal DOCK != 0)
	(up-compare-goal gl-current-age <= gv-feudal)
	(game-time < 1800)
	(or	(building-type-count-total lumber-camp > 0)
		(wood-amount > 200))
	(players-unit-type-count every-enemy galley-line < 1)
	(players-unit-type-count every-enemy fire-ship-line < 1)
	(or	(unit-type-count-total fishing-ship < 15)
		(and	(unit-type-count-total fishing-ship < 20)
			(wood-amount > 350)))
	(can-train fishing-ship)
=>
	(train fishing-ship)
)
#end-if
#end-if

#end-if

#load-if-defined ARENA-MAP
#load-if-defined TURKISH-CIV
(defrule
	(up-compare-goal gl-strategy != turkish-fast-imp)
=>
	(up-jump-rule 12)
)

(defrule
	(or	(and	(goal gl-current-age gv-dark)
			(and	(up-compare-goal gl-my-villager-count-total < wonder-dark-villagers)
				(starting-resources == low-resources)))
		(and	(current-age-time < 45)
			(current-age == castle-age)))
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(unit-type-count-total bombard-cannon < 7)
	(can-train bombard-cannon)
=>
	(train bombard-cannon)
)

; ============= BUILDINGS

(defrule
	(goal gl-strategy turkish-fast-imp)
	(goal gl-current-age gv-dark)
	(goal DOCK 0)
	(building-type-count-total farm < 19)
	(or	(dropsite-min-distance deer-hunting > 27)
		(dropsite-min-distance deer-hunting == -1))
	(building-type-count-total mill < 2)
	(or	(building-type-count-total farm g:< gl-max-farm-count)
		(building-type-count-total farm < 7))
	(building-type-count-total lumber-camp >= 1)
	(can-build farm)
=>
	(build farm)
)

; ============= ECO BALANCING

(defrule
	(goal gl-strategy turkish-fast-imp)
	(strategic-number sn-minimum-water-body-size-for-dock != 998)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age == dark-age)
	(or	(strategic-number sn-food-gatherer-percentage != 35)
		(strategic-number sn-wood-gatherer-percentage != 55))
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 55)
	(set-strategic-number sn-gold-gatherer-percentage 10)
	(set-strategic-number sn-skip-first-mining-camp 0)
	(set-strategic-number sn-stone-dropsite-distance 50)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(up-compare-goal gl-current-age <= gv-castle)
	(or	(strategic-number sn-food-gatherer-percentage != 42)
		(or	(strategic-number sn-gold-gatherer-percentage != 34)
			(strategic-number sn-gold-gatherer-percentage != 24)))
=>
	(set-strategic-number sn-food-gatherer-percentage 42)
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 24)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(up-compare-goal gl-current-age >= gv-castle-up)
	(building-type-count-total archery-range < 2)
=>
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-wood-gatherer-percentage 56)
	(set-strategic-number sn-gold-gatherer-percentage 14)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(set-goal TSA 0)
	(disable-self)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(up-compare-goal gl-current-age >= gv-castle-up)
	(building-type-count-total archery-range > 1)
=>
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-wood-gatherer-percentage 47)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(set-goal TSA 0)
	(disable-self)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(unit-type-count-total scout-cavalry-line < 4)
	(current-age == imperial-age)
	(building-type-count-total mining-camp > 1)
	(building-type-count-total archery-range > 1)
	(or	(strategic-number sn-wood-gatherer-percentage != 39)
		(strategic-number sn-food-gatherer-percentage != 37))
	(game-time < 1800)
=>
	(set-strategic-number sn-food-gatherer-percentage 37)
	(set-strategic-number sn-wood-gatherer-percentage 39)
	(set-strategic-number sn-gold-gatherer-percentage 24)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(unit-type-count-total scout-cavalry-line > 3)
	(current-age == imperial-age)
	(building-type-count-total mining-camp > 1)
	(building-type-count-total archery-range > 1)
	(or	(strategic-number sn-wood-gatherer-percentage != 39)
		(strategic-number sn-food-gatherer-percentage != 41))
	(game-time < 1800)
=>
	(set-strategic-number sn-food-gatherer-percentage 41)
	(set-strategic-number sn-wood-gatherer-percentage 39)
	(set-strategic-number sn-gold-gatherer-percentage 20)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(unit-type-count-total scout-cavalry-line < 4)
	(current-age == imperial-age)
	(building-type-count-total mining-camp > 1)
	(building-type-count-total archery-range > 1)
	(strategic-number sn-wood-gatherer-percentage != 30)
	(game-time > 1800)
=>
	(set-strategic-number sn-food-gatherer-percentage 41)
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 29)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(unit-type-count-total scout-cavalry-line > 3)
	(current-age == imperial-age)
	(building-type-count-total mining-camp > 1)
	(building-type-count-total archery-range > 1)
	(strategic-number sn-wood-gatherer-percentage != 34)
	(game-time > 1800)
=>
	(set-strategic-number sn-food-gatherer-percentage 43)
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 22)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(current-age == imperial-age)
	(game-time > 2200)
=>
	(set-strategic-number sn-stone-gatherer-percentage 5)
	(set-strategic-number sn-stone-dropsite-distance 3)
)
#end-if
#end-if

; ============ SOME VILLS AND AGE UPPING

(defrule
	(current-age == gv-maximum-age)
	(or	(up-compare-const gv-maximum-age == dark-age)
		(up-compare-const gv-maximum-age == feudal-age))
	(up-compare-goal gl-my-villager-count-total >= imperial-villager-cap)
=>
	(up-jump-rule 50)
)

#load-if-defined DEATH-MATCH
(defrule
	(can-research feudal-age)
=>
	(research feudal-age)
	(set-goal gl-current-age gv-dark-up)
	(enable-timer 10 0)
)
#end-if

#load-if-defined FEUDAL-AGE-START
(defrule
	(building-type-count-total blacksmith < 1)
	(up-compare-goal gl-my-villager-count-total < imperial-villager-cap)
	(current-age == feudal-age)
	(goal gl-current-age gv-feudal)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)
#end-if

#load-if-defined LOW-RESOURCES-START
#load-if-defined DIFFICULTY-HARD
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(or	(and	(goal gl-strategy flush)
			(or	(and	(goal gl-feudal-infantry men-at-arms)
					(up-compare-goal gl-my-villager-count-total < maa1-villagers))
				(and	(goal gl-feudal-infantry heavy-men-at-arms)
					(up-compare-goal gl-my-villager-count-total < maa2-villagers))))
		(goal FFA YES))
	(up-compare-goal gl-my-villager-count-total < imperial-villager-cap)
	(up-compare-goal gl-my-villager-count-total < 32)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)
#end-if

#load-if-defined FRANKISH-CIV
(defrule
	(goal gl-strategy heavy-krush)
	(current-age == dark-age)
	(up-compare-goal gl-my-villager-count-total < 31)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)
#end-if
#end-if
#end-if

#load-if-not-defined REGICIDE
(defrule
	(or	(research-completed ri-loom)
		(or	(players-military-population focus-player < 2)
			(strategic-number sn-minimum-water-body-size-for-dock >= 1999)))
	(can-research castle-age)
=>
	(research castle-age)
	(set-strategic-number sn-maximum-stone-drop-distance 6)
	(set-goal gl-current-age gv-feudal-up)
	(set-strategic-number sn-maximum-town-size 14)
	(disable-timer 2)
	(set-strategic-number sn-food-modifier-percentage 0)
	(set-strategic-number sn-wood-modifier-percentage 0)
	(set-strategic-number sn-skip-first-mining-camp 0)
	(set-strategic-number sn-sling-control 0)
)
#else
(defrule
	(can-research castle-age)
=>
	(research castle-age)
	(set-goal gl-current-age gv-feudal-up)
	(set-strategic-number sn-maximum-town-size 14)
	(disable-timer 2)
	(set-strategic-number sn-food-modifier-percentage 0)
	(set-strategic-number sn-wood-modifier-percentage 0)
	(set-strategic-number sn-skip-first-mining-camp 0)
	(set-strategic-number sn-sling-control 0)
)
#end-if

(defrule
	(current-age == castle-age)
	(strategic-number sn-allow-resource-spending >= 0)
	(or	(goal MILITARY 1)
		(up-enemy-units-in-town < 5))
	(research-available imperial-age)
	(population > 200)
	(or	(unit-type-count villager-gold > 10)
		(or	(unit-type-count-total trade-cart > 14)
			(up-compare-goal gl-gathered-relics > 4)))
=>
	(set-escrow-percentage food 80)
	(set-escrow-percentage gold 70)
	(up-add-research-cost c: imperial-age c: -1)
)

(defrule
	(current-age == castle-age)
	(can-research-with-escrow imperial-age)
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research imperial-age)
	(set-goal gl-disable-mining-upgrades NO)
	(set-goal gl-current-age gv-castle-up)
)

; ============== SOME STUFF WITH NOT-HARD DIFFICULTY LEVELS

#load-if-not-defined DEATH-MATCH
(defrule
	(up-compare-goal gl-my-villager-count-total >= feudal-up-villagers)
	(can-research feudal-age)
=>
	(research feudal-age)
	(set-goal gl-current-age gv-dark-up)
	(enable-timer 10 0)
	(set-strategic-number sn-sling-control 0)
)

; ============= STARTING RESOURCES & AGE

#load-if-not-defined LOW-RESOURCES-START
(defrule
	(game-time > 30)
	(building-type-count-total mill > 0)
	(building-type-count-total lumber-camp < 1)
	(resource-found wood)
	(can-build lumber-camp)
=>
	(build lumber-camp)
)

#load-if-defined DARK-AGE-START
(defrule
	(or	(not	(up-compare-goal gl-strategy-type >= FC))
		(up-compare-goal gl-my-villager-count-total >= feudal-FC-up-villagers))
	(up-compare-goal gl-my-villager-count-total >= feudal-flush-up-villagers)
	(can-research feudal-age)
=>
	(research feudal-age)
	(set-goal gl-current-age gv-dark-up)
	(enable-timer 10 0)
	(set-strategic-number sn-sling-control 0)
)
#end-if
#end-if

#load-if-not-defined DARK-AGE-START
(defrule
	(goal gl-current-age real-starting-age)
	(game-time < 500)
	(up-compare-goal gl-my-villager-count-total <= initial-flush-villagers)
	(up-compare-goal gl-my-villager-count-total < imperial-villager-cap)
=>
	(set-goal gl-current-age gv-dark)
)

(defrule
	(up-compare-goal gl-current-age > gv-feudal)
	(strategic-number sn-skip-first-mining-camp == 1)
=>
	(set-strategic-number sn-skip-first-mining-camp 0)
)

(defrule
	(current-age == gv-starting-age)
	(goal gl-current-age gv-dark)
	(building-type-count-total lumber-camp > 0)
	(or	(goal gl-strategy default)
		(up-compare-goal gl-my-villager-count-total >= initial-FC-villagers))
	(or	(up-compare-goal gl-my-villager-count-total > initial-flush-villagers)
		(up-compare-goal gl-my-villager-count-total >= imperial-villager-cap))
=>
	(set-goal gl-current-age gv-pre-age)
	(set-strategic-number sn-sling-control 0)
)

(defrule
	(up-compare-goal gl-my-villager-count-total > 15)
	(strategic-number sn-camp-max-distance < 17)
	(current-age == gv-starting-age)
	(building-type-count-total lumber-camp == 1)
	(or	(nand	(up-compare-goal DOCK != 0)
			(building-type-count-total dock < 1))
		(wood-amount >= 250))
	(building-type-count-total mill > 0)
	(resource-found wood)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(set-strategic-number sn-camp-max-distance 22)
	(build lumber-camp)
)
#end-if

#else; DM
#load-if-defined POST-IMPERIAL-AGE-START
(defrule
	(current-age == imperial-age)
=>
	(set-goal gl-current-age gv-castle-up)
	(set-strategic-number sn-sling-control 0)
	(disable-self)
)
#end-if
#end-if

; ============== VILLAGERS

#load-if-not-defined UP-MICHI-STYLE
#load-if-not-defined WONDER-RACE

#load-if-not-defined AZTEC-CIV
#load-if-not-defined REGICIDE

#load-if-defined HUN-CIV
(defrule
	(up-compare-goal gl-loomless-boar-hunting != YES)
	(up-compare-goal gl-strategy != CA-rush)
	(up-compare-goal gl-strategy != heavy-krush)
	(current-age == dark-age)
	(or	(not	(can-train villager))
		(and	(up-compare-goal gl-my-villager-count-total > 29)
			(not	(can-research-with-escrow feudal-age))))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(up-compare-goal gl-my-villager-count-total > 6)
	(can-research ri-loom)
=>
	(research ri-loom)
	(enable-timer 2 22)
)

(defrule
	(up-compare-goal gl-loomless-boar-hunting != YES)
	(goal gl-strategy CA-rush)
	(current-age == dark-age)
	(not	(can-train villager))
	(up-compare-goal gl-my-villager-count-total > 6)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(can-research ri-loom)
=>
	(research ri-loom)
	(enable-timer 2 22)
)

(defrule
	(up-compare-goal gl-loomless-boar-hunting != YES)
	(goal gl-strategy CA-rush)
	(current-age == dark-age)
	(or	(up-compare-goal gl-my-villager-count-total > 30)
		(and	(up-compare-goal gl-my-villager-count-total > 29)
			(building-type-count-total mill > 1)))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(not	(can-research feudal-age))
	(can-research ri-loom)
=>
	(research ri-loom)
	(enable-timer 2 22)
)
#end-if

#load-if-not-defined KOREAN-CIV
#load-if-not-defined HUN-CIV
(defrule
	(up-compare-goal gl-loomless-boar-hunting != YES)
	(up-compare-goal gl-strategy != knight-archer)
	(up-compare-goal gl-strategy != castle-drop)
	(current-age == dark-age)
	(or	(not	(can-train villager))
		(and	(up-compare-goal gl-my-villager-count-total > 29)
			(not	(can-research-with-escrow feudal-age))))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(up-compare-goal gl-my-villager-count-total > 6)
	(can-research ri-loom)
=>
	(research ri-loom)
	(enable-timer 2 22)
)
#end-if
#else
(defrule
	(up-compare-goal gl-loomless-boar-hunting != YES)
	(up-compare-goal gl-strategy != korean-boom)
	(up-compare-goal gl-strategy != castle-drop)
	(current-age == dark-age)
	(or	(not	(can-train villager))
		(and	(up-compare-goal gl-my-villager-count-total > 29)
			(not	(can-research-with-escrow feudal-age))))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(up-compare-goal gl-my-villager-count-total > 6)
	(can-research ri-loom)
=>
	(research ri-loom)
	(enable-timer 2 22)
)
#end-if

(defrule
	(up-compare-goal gl-loomless-boar-hunting != YES)
	(up-compare-goal gl-strategy != korean-boom)
	(current-age == dark-age)
	(or	(and	(not	(can-train villager))
			(up-compare-goal gl-my-villager-count-total > 6))
		(and	(up-compare-goal gl-my-villager-count-total > 29)
			(not	(can-research-with-escrow feudal-age))))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(can-research ri-loom)
=>
	(research ri-loom)
	(enable-timer 2 22)
)

(defrule
	(current-age == dark-age)
	(or	(not	(can-train villager))
		(or	(up-compare-goal gl-my-villager-count-total >= 30)
			(and	(up-compare-goal gl-strategy-type <= controlled-flush)
				(up-compare-goal gl-my-villager-count-total > 27))))
	(not	(can-research-with-escrow feudal-age))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(up-compare-goal gl-my-villager-count-total > 6)
	(can-research ri-loom)
=>
	(research ri-loom)
	(enable-timer 2 22)
)
#end-if
#end-if
(defrule
	(or	(and	(current-age >= feudal-age)
			(or	(players-military-population focus-player > 1)
				(up-research-status c: ri-wheel-barrow >= research-pending)))
		(or	(up-player-distance target-player < 28); Forward, weird start... whatever it was, we definitely want loom!
			(and	(players-military-population focus-player > 2); Drush
				(game-time > 360))))
	(can-research ri-loom)
=>
	(research ri-loom)
	(enable-timer 2 22)
)
#end-if
#end-if

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(or	(and	(goal gl-strategy watermap-fc)
			(strategic-number sn-minimum-water-body-size-for-dock >= 1999))
		(or	(goal gl-strategy war-galley-rush)
			(or	(goal gl-strategy fire-ship-rush)
				(goal gl-strategy turtle-rush))))
	(up-compare-goal gl-my-villager-count-total > 29)
	(can-research feudal-age)
=>
	(research feudal-age)
	(set-goal gl-current-age gv-dark-up)
	(disable-timer 1)
	(enable-timer 10 0)
)

#load-if-defined AZTEC-CIV
(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(strategic-number sn-nomad-style-start == 1)
	(goal gl-strategy eagle-monk-rush)
	(current-age == dark-age)
	(up-compare-goal gl-my-villager-count-total < 30)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)
#end-if

#load-if-defined MONGOL-CIV
(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(goal gl-strategy mongol-boom)
	(current-age == dark-age)
	(up-compare-goal gl-my-villager-count-total < 31)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)
#end-if

(defrule
	(or	(goal gl-strategy monk-boom)
		(or	(and	(not	(civ-selected aztec))
				(and	(goal gl-strategy eagle-rush)
					(up-compare-goal gl-my-villager-count-total < 30)))
			(goal gl-strategy knight-boom)))
	(current-age == dark-age)
	(up-compare-goal gl-my-villager-count-total < 31)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)

#load-if-not-defined FORTRESS-MAP
(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(goal gl-strategy castle-drop)
	(current-age == dark-age)
	(strategic-number sn-sheep-count < 7)
	(or	(up-compare-goal gl-my-villager-count-total < 31)
		(strategic-number sn-sheep-count < 5))
	(or	(up-compare-goal gl-my-villager-count-total < 32)
		(strategic-number sn-sheep-count < 4))
	(up-compare-goal gl-my-villager-count-total < 33)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)
#end-if

(defrule
	(or	(and	(up-compare-goal gl-strategy != flush)
			(or	(goal gl-strategy-class basic-class)
				(goal gl-strategy eew-strategy)))
		(and	(goal gl-strategy flush)
			(up-compare-goal gl-my-villager-count-total < 27)))
	(nand	(goal gl-strategy michi-boom)
		(up-compare-goal gl-my-villager-count-total g:>= gl-michi-boom-villagers)); 27 for mongols, 29 for rest, 1 less in AoFE
	(up-compare-goal gl-my-villager-count-total < 31)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(or	(goal gl-strategy-type FC2)
		(goal gl-strategy scorpion-rush))
	(current-age == dark-age)
	(or	(up-compare-goal gl-my-villager-count-total < 30)
		(or	(goal gl-strategy-type FC2)
			(strategic-number sn-sheep-count < 6)))
	(up-compare-goal gl-my-villager-count-total < 31)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)

(defrule
	(current-age > dark-age)
=>
	(up-jump-rule 4)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(or	(and	(or	(goal gl-strategy-class basic-class)
				(goal gl-strategy CA-rush))
			(or	(goal gl-strategy flush)
				(up-compare-goal gl-my-villager-count-total > 29)))
		(goal gl-strategy sling))
	(up-compare-goal gl-my-villager-count-total > 25)
	(can-research feudal-age)
=>
	(research feudal-age)
	(set-goal gl-current-age gv-dark-up)
	(disable-timer 1)
	(enable-timer 10 0)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(up-compare-goal gl-strategy-class != basic-class)
	(or	(up-compare-goal gl-strategy-type != FC2)
		(up-compare-goal gl-my-villager-count-total > 30))
	(up-compare-goal gl-my-villager-count-total > 28)
	(nand	(or	(goal gl-strategy korean-boom)
			(goal gl-strategy castle-push))
		(up-compare-goal gl-my-villager-count-total < min-kboom-cpush-villagers)); 30 in AoC, 29 in AoFE
	(can-research feudal-age)
=>
	(research feudal-age)
	(set-goal gl-current-age gv-dark-up)
	(disable-timer 1)
	(enable-timer 10 0)
)

(defrule
	(or	(and	(strategic-number sn-allow-new-build-order >= 1)
			(and	(goal gl-strategy eagle-rush)
				(up-compare-goal gl-my-villager-count-total > 27)))
		(and	(or	(food-amount > 1000)
				(goal gl-strategy michi-boom))
			(game-time > 300)))
	(can-research feudal-age)
=>
	(research feudal-age)
	(set-goal gl-current-age gv-dark-up)
	(disable-timer 1)
	(enable-timer 10 0)
)

(defrule
	(population >= absolute-villager-cap)
	(can-research feudal-age)
=>
	(research feudal-age)
	(set-goal gl-current-age gv-dark-up)
	(disable-timer 1)
	(enable-timer 10 0)
)

#load-if-defined CHINESE-CIV
(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(strategic-number sn-nomad-style-start == 1)
	(current-age == dark-age)
	(not	(can-train villager))
	(can-research ri-loom)
=>
	(research ri-loom)
	(enable-timer 2 22)
)
#end-if

#load-if-not-defined UP-MICHI-STYLE
(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(current-age == dark-age)
	(or	(and	(up-compare-goal gl-my-villager-count-total < 30)
			(goal gl-strategy CA-rush))
		(and	(up-compare-goal gl-my-villager-count-total < 31)
			(food-amount < 460)))
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(up-compare-goal gl-strategy != flush)
	(or	(current-age == dark-age)
		(and	(up-compare-goal gl-my-villager-count-total < 28)
			(goal gl-strategy xbow-rush)))
	(or	(up-compare-goal gl-my-villager-count-total < 30)
		(strategic-number sn-boars-on-map == NONE))
	(up-compare-goal SLING <= 3)
	(up-compare-goal gl-my-villager-count-total < 31)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(current-age == dark-age)
	(or	(goal gl-strategy heavy-krush)
		(or	(goal gl-strategy-type basic-flush)
			(goal gl-strategy castle-drop)))
	(nand	(up-compare-goal SLING >= 4)
		(and	(up-compare-goal gl-my-villager-count-total > 27)
			(strategic-number sn-minimum-water-body-size-for-dock == 998)))
	(up-compare-goal gl-my-villager-count-total < 30)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)

#load-if-defined KOREAN-CIV
(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(current-age == dark-age)
	(goal gl-strategy korean-boom)
	(or	(up-compare-goal gl-my-villager-count-total < 30)
		(food-amount < 460))
	(up-compare-goal gl-my-villager-count-total < 31)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)
#end-if

#load-if-defined SARACEN-CIV
(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(current-age > feudal-age)
	(goal gl-strategy heavy-krush)
	(up-compare-goal gl-my-villager-count-total < 30)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)
#end-if
#end-if

(defrule
	(or	(current-age != feudal-age)
		(or	(and	(up-compare-goal gl-my-villager-count-total > 19)
				(up-compare-goal gl-scattered-islets-style >= 1))
			(or	(up-compare-goal gl-my-villager-count-total >= absolute-villager-cap)
				(and	(current-age == gv-maximum-age)
					(up-compare-goal gl-my-villager-count-total >= imperial-villager-cap)))))
=>
	(up-jump-rule 7)
)

(defrule
	(goal gl-current-age gv-feudal)
	(difficulty <= hard)
	(strategic-number sn-enable-training-queue == 0)
	(up-compare-goal gl-strategy-type <= controlled-flush)
	(research-completed ri-loom)
	(food-amount > 150)
	(food-amount < 550)
	(goal SLING 0)
	(up-research-status c: ri-wheel-barrow >= research-pending)
=>
	(set-strategic-number sn-enable-training-queue 1)
)

(defrule
	(goal gl-current-age gv-feudal)
	(strategic-number sn-enable-training-queue == 1)
	(up-compare-goal gl-strategy-type <= controlled-flush)
	(or	(food-amount <= 200)
		(food-amount >= 550))
	(goal SLING 0)
	(up-research-status c: ri-wheel-barrow >= research-pending)
=>
	(set-strategic-number sn-enable-training-queue 0)
)

(defrule
	(or	(and	(game-time > 1200)
			(nand	(research-available castle-age)
				(up-compare-goal gl-my-villager-count-total > 29)))
		(and	(goal gl-strategy-type controlled-flush)
			(up-research-status c: ri-wheel-barrow >= research-pending)))
	(or	(food-amount < 500)
		(up-compare-goal gl-my-villager-count-total < 20))
	(up-compare-goal gl-my-villager-count-total < relative-100-villagers)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)

(defrule
	(goal gl-strategy-type basic-flush)
	(not	(can-research castle-age))
	(or	(food-amount < 735)
		(or	(gold-amount < 161)
			(current-age-time < 330)))
	(current-age == feudal-age)
	(nor	(can-research-with-escrow ri-wheel-barrow)
		(can-research-with-escrow ri-loom))
	(up-compare-goal gl-my-villager-count-total < relative-100-villagers)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)

(defrule
	(goal gl-current-age gv-feudal)
	(strategic-number sn-enable-training-queue == 1)
	(up-compare-goal gl-strategy-type <= controlled-flush)
	(food-amount > 150)
	(food-amount < 550)
	(goal SLING 0)
	(up-research-status c: ri-wheel-barrow >= research-pending)
=>
	(set-strategic-number sn-enable-training-queue 0)
)

#load-if-defined SARACEN-CIV
(defrule
	(or	(food-amount < 690)
		(gold-amount < 161))
	(nor	(goal gl-strategy heavy-krush)
		(or	(can-research castle-age)
			(goal gl-strategy xbow-rush)))
	(current-age == feudal-age)
	(nor	(can-research-with-escrow ri-wheel-barrow)
		(can-research-with-escrow ri-loom))
	(up-compare-goal gl-my-villager-count-total < relative-100-villagers)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)
#end-if

#load-if-defined FRANKISH-CIV
(defrule
	(or	(food-amount < 690)
		(gold-amount < 161))
	(nor	(can-research castle-age)
		(or	(goal gl-strategy heavy-krush)
			(goal gl-strategy xbow-rush)))
	(current-age == feudal-age)
	(nor	(can-research-with-escrow ri-wheel-barrow)
		(can-research-with-escrow ri-loom))
	(up-compare-goal gl-my-villager-count-total < relative-100-villagers)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)
#end-if

#load-if-defined GOTHIC-CIV
(defrule
	(or	(food-amount < 690)
		(gold-amount < 161))
	(nor	(can-research castle-age)
		(goal gl-strategy xbow-rush))
	(current-age == feudal-age)
	(nor	(can-research-with-escrow ri-wheel-barrow)
		(or	(goal gl-strategy gothic-boom)
			(can-research-with-escrow ri-loom)))
	(up-compare-goal gl-my-villager-count-total < relative-100-villagers)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)
#end-if

#load-if-not-defined GOTHIC-CIV
#load-if-not-defined SARACEN-CIV
#load-if-not-defined FRANKISH-CIV
(defrule
	(or	(food-amount < 690)
		(gold-amount < 161))
	(nor	(can-research castle-age)
		(goal gl-strategy xbow-rush))
	(up-compare-goal gl-strategy != eagle-rush)
	(up-compare-goal gl-strategy != fast-eagles)
	(current-age == feudal-age)
	(nor	(can-research-with-escrow ri-wheel-barrow)
		(can-research-with-escrow ri-loom))
	(up-compare-goal gl-my-villager-count-total < relative-100-villagers)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)
#end-if
#end-if
#end-if

(defrule
	(or	(and	(civ-selected viking)
			(current-age-time < 45))
		(and	(goal gl-strategy grush)
			(building-type-count-total market == 0)))
	(nand	(goal gl-strategy flush)
		(strategic-number sn-minimum-water-body-size-for-dock <= 1000))
	(current-age == feudal-age)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)

#load-if-not-defined DARK-AGE-START
(defrule
	(or	(goal gl-current-age gv-dark)
		(game-time < 50))
	(up-compare-goal gl-my-villager-count-total < imperial-villager-cap)
	(up-compare-goal gl-my-villager-count-total < 30)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)
#end-if

#load-if-not-defined WONDER-RACE

#load-if-not-defined DEATH-MATCH
(defrule
	(up-compare-goal gl-current-age >= gv-castle)
	(up-compare-goal gl-strategy != michi-boom)
	(up-compare-goal gl-strategy != castle-sling)
	(research-completed ri-loom)
	(up-compare-goal MILITARY <= 0)
	(up-compare-goal threat-time > 10000)
	(or	(food-amount < maximum-castle-queue-food)
		(up-compare-goal gl-current-age >= gv-castle-up))
	(or	(wood-amount < 200)
		(or	(up-research-status c: ri-hand-cart >= research-pending)
			(up-compare-goal gl-my-villager-count-total < 50)))
	(up-research-status c: ri-wheel-barrow >= research-pending)
=>
	(set-strategic-number sn-enable-training-queue 1)
)

(defrule
	(up-compare-goal gl-current-age >= gv-castle)
	(up-compare-goal gl-strategy != michi-boom)
	(up-compare-goal gl-strategy != castle-sling)
	(strategic-number sn-enable-training-queue == 1)
	(or	(and	(food-amount >= maximum-castle-queue-food)
			(goal gl-current-age gv-castle))
		(or	(and	(wood-amount >= 200)
				(and	(up-research-status c: ri-hand-cart < research-pending)
					(up-compare-goal gl-my-villager-count-total >= 50)))
			(up-compare-goal MILITARY >= 1)))
=>
	(set-strategic-number sn-enable-training-queue 0)
)
#end-if

(defrule
	(or	(and	(up-compare-goal gl-scattered-islets-style >= 1)
			(up-compare-goal gl-my-villager-count-total > 19))
		(up-compare-goal gl-my-villager-count-total >= imperial-villager-cap))
=>
	(up-jump-rule 1)
)

#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined SARACEN-CIV
#load-if-not-defined TURKISH-CIV
(defrule
	(current-age == castle-age)
	(up-compare-goal gl-my-villager-count-total < relative-100-villagers)
	(nand	(can-research-with-escrow ri-hand-cart)
		(up-compare-goal gl-my-villager-count-total > 50))
	(nor	(can-research-with-escrow imperial-age)
		(and	(goal gl-strategy xbow-rush)
			(and	(or	(research-available ri-crossbow)
					(research-available ri-bodkin-arrow))
				(food-amount < 250))))
	(can-train villager)
=>
	(train villager)
)
#end-if
#end-if
#end-if
#end-if

#load-if-defined AZTEC-CIV
(defrule
	(up-compare-goal gl-strategy != fast-eagles)
	(current-age == castle-age)
	(up-compare-goal gl-my-villager-count-total < relative-100-villagers)
	(nand	(goal gl-eew-strategy-type fast-imp)
		(and	(food-amount > 900)
			(gold-amount > 550)))
	(nand	(can-research-with-escrow ri-hand-cart)
		(up-compare-goal gl-my-villager-count-total > 50))
	(nor	(can-research-with-escrow imperial-age)
		(can-research-with-escrow ri-wheel-barrow))
	(can-train villager)
=>
	(train villager)
)
#end-if

#load-if-defined MAYAN-CIV
(defrule
	(current-age == castle-age)
	(up-compare-goal gl-my-villager-count-total < relative-100-villagers)
	(nand	(goal gl-eew-strategy-type fast-imp)
		(and	(food-amount > 900)
			(gold-amount > 550)))
	(nand	(can-research-with-escrow ri-hand-cart)
		(up-compare-goal gl-my-villager-count-total > 50))
	(nor	(can-research-with-escrow imperial-age)
		(goal gl-strategy xbow-rush))
	(can-train villager)
=>
	(train villager)
)

(defrule
	(goal gl-strategy xbow-rush)
	(current-age == castle-age)
	(up-compare-goal gl-my-villager-count-total < relative-100-villagers)
	(nand	(can-research-with-escrow ri-hand-cart)
		(up-compare-goal gl-my-villager-count-total > 50))
	(nor	(can-research-with-escrow imperial-age)
		(and	(or	(research-available ri-crossbow)
				(research-available ri-bodkin-arrow))
			(food-amount < 250)))
	(can-train villager)
=>
	(train villager)
)
#end-if

#load-if-defined SARACEN-CIV
(defrule
	(not	(goal gl-strategy heavy-krush))
	(current-age == castle-age)
	(up-compare-goal gl-my-villager-count-total < relative-100-villagers)
	(nand	(can-research-with-escrow ri-hand-cart)
		(up-compare-goal gl-my-villager-count-total > 50))
	(nor	(can-research-with-escrow imperial-age)
		(and	(goal gl-strategy xbow-rush)
			(and	(research-available ri-bodkin-arrow)
				(food-amount < 250))))
	(can-train villager)
=>
	(train villager)
)

(defrule
	(goal gl-strategy heavy-krush)
	(nand	(building-type-count-total town-center == 1)
		(game-time < 2100))
	(current-age == castle-age)
	(up-compare-goal gl-my-villager-count-total < relative-100-villagers)
	(nand	(can-research-with-escrow ri-hand-cart)
		(up-compare-goal gl-my-villager-count-total > 50))
	(not	(can-research-with-escrow imperial-age))
	(can-train villager)
=>
	(train villager)
)
#end-if

#load-if-defined TURKISH-CIV
(defrule
	(up-compare-goal gl-strategy != xbow-rush)
	(current-age == castle-age)
	(up-compare-goal gl-my-villager-count-total < relative-100-villagers)
	(nand	(goal gl-strategy turkish-fast-imp)
		(and	(food-amount > 900)
			(gold-amount > 550)))
	(nand	(can-research-with-escrow ri-hand-cart)
		(up-compare-goal gl-my-villager-count-total > 50))
	(nor	(can-research-with-escrow imperial-age)
		(can-research-with-escrow ri-wheel-barrow))
	(can-train villager)
=>
	(train villager)
)

(defrule
	(goal gl-strategy xbow-rush)
	(current-age == castle-age)
	(up-compare-goal gl-my-villager-count-total < relative-100-villagers)
	(nand	(can-research-with-escrow ri-hand-cart)
		(up-compare-goal gl-my-villager-count-total > 50))
	(nor	(can-research-with-escrow imperial-age)
		(and	(or	(research-available ri-crossbow)
				(research-available ri-bodkin-arrow))
			(food-amount < 250)))
	(can-train villager)
=>
	(train villager)
)
#end-if

#load-if-defined UP-MICHI-STYLE
(defrule
	(goal gl-strategy michi-boom)
	(goal gl-current-age gv-castle)
	(nand	(can-research-with-escrow ri-hand-cart)
		(up-compare-goal gl-my-villager-count-total > 70))
	(up-compare-goal gl-my-villager-count-total < 150)
	(up-compare-goal gl-my-villager-count-total < absolute-villager-cap)
	(can-train villager)
=>
	(train villager)
)
#end-if

#load-if-not-defined POPULATION-CAP-EXTENDED
(defrule
	(or	(up-compare-goal gl-my-villager-count-total >= difficulty-villager-cap)
		(or	(and	(up-compare-goal gl-my-villager-count-total > 19)
				(up-compare-goal gl-scattered-islets-style >= 1))
			(up-compare-goal gl-my-villager-count-total >= imperial-villager-cap)))
=>
	(up-jump-rule 1)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
	(or	(and	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
			(dropsite-min-distance wood != 255))
		(up-compare-goal gl-my-villager-count-total < 20))
	(current-age == gv-maximum-age)
	(or	(up-compare-goal gl-my-villager-count-total < 75)
		(population <= almost-full-pop))
	(up-compare-goal gl-my-villager-count-total < 100)
	(nand	(can-research-with-escrow ri-hand-cart)
		(up-compare-goal gl-my-villager-count-total > 50))
	(can-train villager)
=>
	(train villager)
)

(defrule
	(current-age == gv-maximum-age)
	(game-time > 2100)
	(or	(up-compare-goal gl-my-villager-count-total > 75)
		(up-compare-goal gl-my-villager-count-total > imperial-villager-cap))
	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(population > pop-to-full-pop-attack)
	(or	(warboat-count < 15)
		(and	(strategic-number sn-minimum-water-body-size-for-dock == 1999)
			(soldier-count < 22)))
=>
	(delete-unit villager)
)

(defrule
	(current-age == gv-maximum-age)
	(game-time > 2100)
	(or	(up-compare-goal gl-my-villager-count-total > 75)
		(up-compare-goal gl-my-villager-count-total > imperial-villager-cap))
	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(population > pop-to-full-pop-attack)
	(or	(warboat-count < 15)
		(and	(strategic-number sn-minimum-water-body-size-for-dock == 1999)
			(soldier-count < 22)))
=>
	(delete-unit villager)
)

(defrule
	(up-compare-goal FFA != YES)
	(current-age == gv-maximum-age)
	(game-time > time-to-allow-villager-deleting); 600 in DM, otherwise 2100
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(food-amount > food-to-delete-75-extra-vill); 3500 in DM, otherwise 2000
	(or	(up-compare-goal gl-my-villager-count-total > 75)
		(up-compare-goal gl-my-villager-count-total > imperial-villager-cap))
	(wood-amount > wood-to-delete-75-extra-vill); 3500 in DM, otherwise 2000
	(gold-amount > gold-to-delete-75-extra-vill); 2500 in DM, otherwise 1200
	(population > pop-to-full-pop-attack)
=>
	(delete-unit villager)
)

(defrule
	(or	(current-age == gv-maximum-age)
		(and	(current-age >= castle-age)
			(or	(goal gl-strategy-class basic-class)
				(and	(population >= pop-to-full-pop-attack)
					(goal gl-strategy castle-push)))))
	(population >= 23)
	(up-compare-goal gl-my-villager-count-total > imperial-villager-cap)
=>
	(delete-unit villager)
)
#end-if

#load-if-defined TINY-MAP
(defrule
	(or	(up-compare-goal gl-my-villager-count-total >= difficulty-villager-cap)
		(or	(and	(up-compare-goal gl-my-villager-count-total > 19)
				(up-compare-goal gl-scattered-islets-style >= 1))
			(current-age != gv-maximum-age)))
=>
	(up-jump-rule 1)
)

(defrule
	(current-age == gv-maximum-age)
	(nand	(food-amount > 1800)
		(and	(up-compare-goal gl-my-villager-count-total > 75)
			(and	(wood-amount > 1800)
				(gold-amount > 1000))))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(up-compare-goal gl-my-villager-count-total < imperial-villager-cap)
	(up-compare-goal gl-my-villager-count-total < 100)
	(nand	(can-research-with-escrow ri-hand-cart)
		(up-compare-goal gl-my-villager-count-total > 50))
	(can-train villager)
=>
	(train villager)
)
#else
#load-if-not-defined POPULATION-CAP-EXTENDED
(defrule
	(or	(up-compare-goal gl-my-villager-count-total >= difficulty-villager-cap)
		(or	(and	(up-compare-goal gl-my-villager-count-total > 19)
				(up-compare-goal gl-scattered-islets-style >= 1))
			(or	(current-age != gv-maximum-age)
				(or	(and	(can-research-with-escrow ri-hand-cart)
						(up-compare-goal gl-my-villager-count-total > 50))
					(up-compare-goal gl-my-villager-count-total >= imperial-villager-cap)))))
=>
	(up-jump-rule 3)
)

(defrule
	(or	(nand	(food-amount > 1400)
			(and	(up-compare-goal gl-my-villager-count-total > 75)
				(and	(wood-amount > 900)
					(gold-amount > 500))))
		(goal gl-handicap YES))
	(goal FFA YES)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(up-compare-goal gl-my-villager-count-total < 120)
	(up-research-status c: ri-hand-cart >= research-pending)
	(can-train villager)
=>
	(train villager)
)

(defrule
	(nand	(food-amount > 1400)
		(and	(up-compare-goal gl-my-villager-count-total > 75)
			(and	(wood-amount > 900)
				(gold-amount > 500))))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(or	(unit-type-count-total trade-cart < 17)
		(or	(population <= almost-full-pop)
			(strategic-number sn-allow-resource-spending < 6)))
	(up-compare-goal gl-my-villager-count-total < 100)
	(can-train villager)
=>
	(train villager)
)

(defrule
	(nand	(food-amount > 1400)
		(and	(up-compare-goal gl-my-villager-count-total > 65)
			(and	(wood-amount > 900)
				(gold-amount > 500))))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(unit-type-count-total trade-cart >= 17)
	(or	(up-compare-goal gl-my-villager-count-total < 85)
		(strategic-number sn-minimum-water-body-size-for-dock == 998))
	(up-compare-goal gl-my-villager-count-total < 90)
	(can-train villager)
=>
	(train villager)
)

(defrule
	(up-compare-goal FFA != YES)
	(current-age == gv-maximum-age)
	(game-time > time-to-allow-villager-deleting); 600 in DM, otherwise 2100
	(food-amount > food-to-delete-100-extra-vill); 2000 in DM, otherwise 1700
	(or	(up-compare-goal gl-my-villager-count-total > 100)
		(up-compare-goal gl-my-villager-count-total > imperial-villager-cap))
	(wood-amount > wood-to-delete-100-extra-vill); 1700 in DM, otherwise 1100
	(gold-amount > gold-to-delete-100-extra-vill); 1700 in DM, otherwise 700
	(population > pop-to-full-pop-attack)
=>
	(delete-unit villager)
)
#end-if
#end-if

#load-if-defined POPULATION-CAP-200
#load-if-defined POPULATION-CAP-EXTENDED
(defrule
	(or	(up-compare-goal gl-my-villager-count-total >= difficulty-villager-cap)
		(and	(up-compare-goal gl-my-villager-count-total > 19)
			(up-compare-goal gl-scattered-islets-style >= 1)))
=>
	(up-jump-rule 2)
)

(defrule
	(nand	(food-amount > 1600)
		(and	(up-compare-goal gl-my-villager-count-total > 75)
			(and	(wood-amount > 1000)
				(gold-amount > 500))))
	(goal FFA YES)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(current-age == imperial-age)
	(up-compare-goal gl-my-villager-count-total < 140)
	(nand	(can-research-with-escrow ri-hand-cart)
		(up-compare-goal gl-my-villager-count-total > 50))
	(can-train villager)
=>
	(train villager)
)

(defrule
	(or	(and	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
			(dropsite-min-distance wood != 255))
		(up-compare-goal gl-my-villager-count-total < 20))
	(current-age == imperial-age)
	(or	(up-compare-goal gl-my-villager-count-total < 100)
		(population-cap > 350))
	(up-compare-goal gl-my-villager-count-total < 200)
	(nand	(can-research-with-escrow ri-hand-cart)
		(up-compare-goal gl-my-villager-count-total > 50))
	(can-train villager)
=>
	(train villager)
)

(defrule
	(population > 215)
	(up-compare-goal gl-strategy != castle-sling)
	(population-cap < 240)
	(up-compare-goal gl-my-villager-count-total > 100)
	(or	(up-compare-goal gl-my-villager-count-total > 140)
		(or	(and	(up-compare-goal gl-my-villager-count-total > 125)
				(unit-type-count-total trade-cart > 15))
			(or	(and	(up-compare-goal gl-my-villager-count-total > 115)
					(unit-type-count-total trade-cart > 20))
				(unit-type-count-total trade-cart > 35))))
=>
	(delete-unit villager)
)

(defrule
	(population > 240)
	(up-compare-goal gl-strategy != castle-sling)
	(population-cap > 240)
	(population-cap < 270)
	(up-compare-goal gl-my-villager-count-total > 110)
	(or	(up-compare-goal gl-my-villager-count-total > 145)
		(or	(and	(up-compare-goal gl-my-villager-count-total > 130)
				(unit-type-count-total trade-cart > 25))
			(and	(unit-type-count-total trade-cart > 40)
				(gold-amount > 1000))))
=>
	(delete-unit villager)
)
#else
(defrule
	(population > 190)
	(up-compare-goal gl-strategy != castle-sling)
	(or	(up-compare-goal gl-my-villager-count-total > 133)
		(or	(and	(up-compare-goal gl-my-villager-count-total > 115)
				(unit-type-count-total trade-cart > 10))
			(and	(up-compare-goal gl-my-villager-count-total > 100)
				(unit-type-count-total trade-cart > 20))))
=>
	(delete-unit villager)
)
#end-if

#load-if-not-defined TINY-MAP
(defrule
	(current-age == castle-age)
	(up-compare-goal gl-my-villager-count-total > 95)
	(up-compare-goal gl-my-villager-count-total < 130)
	(unit-type-count-total trade-cart < 10)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(nand	(can-research-with-escrow ri-hand-cart)
		(up-compare-goal gl-my-villager-count-total > 50))
	(not	(can-research-with-escrow imperial-age))
	(can-train villager)
=>
	(train villager)
)
#else
(defrule
	(current-age == castle-age)
	(up-compare-goal gl-my-villager-count-total > 95)
	(or	(up-compare-goal gl-my-villager-count-total < 130)
		(population-cap > 240))
	(up-compare-goal gl-my-villager-count-total < 145)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(nand	(can-research-with-escrow ri-hand-cart)
		(up-compare-goal gl-my-villager-count-total > 50))
	(not	(can-research-with-escrow imperial-age))
	(can-train villager)
=>
	(train villager)
)
#end-if

#load-if-defined UP-2-PLAYER-GAME
(defrule
	(game-time > 3000)
	(or	(dropsite-min-distance gold == -1)
		(or	(dropsite-min-distance gold == 255)
			(cc-players-unit-type-count 0 gold-mine < 4)))
	(population-cap < 240)
	(population g:> gl-trash-war-vill-limit-pop)
	(up-compare-goal gl-trash-war-vill-limiting != YES)
=>
	(set-goal gl-trash-war-vill-limiting YES)
)

(defrule
	(or	(nor	(dropsite-min-distance gold == -1)
			(or	(dropsite-min-distance gold == 255)
				(cc-players-unit-type-count 0 gold-mine < 4)))
		(or	(population g:< gl-trash-war-vill-limit-pop)
			(game-time < 3000)))
	(up-compare-goal gl-trash-war-vill-limiting != NO)
=>
	(set-goal gl-trash-war-vill-limiting NO)
)

(defrule
	(current-age == imperial-age)
	(nand	(food-amount > 1600)
		(and	(wood-amount > 1000)
			(gold-amount > 500)))
	(up-compare-goal gl-my-villager-count-total > 95)
	(or	(goal gl-trash-war-vill-limiting NO)
		(up-compare-goal gl-my-villager-count-total < 100))
	(up-compare-goal gl-my-villager-count-total < 130)
	(unit-type-count-total trade-cart < 10)
	(population < almost-full-pop)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(can-train villager)
=>
	(train villager)
)
#else
(defrule
	(current-age == imperial-age)
	(nand	(food-amount > 1600)
		(and	(wood-amount > 1000)
			(gold-amount > 500)))
	(up-compare-goal gl-my-villager-count-total > 95)
	(up-compare-goal gl-my-villager-count-total < 130)
	(unit-type-count-total trade-cart < 10)
	(population < almost-full-pop)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(can-train villager)
=>
	(train villager)
)
#end-if

#end-if

#end-if

(defrule
	(up-compare-goal gl-current-age >= gv-castle)
	(up-compare-goal gl-strategy != michi-boom)
	(up-compare-goal gl-strategy != castle-sling)
	(strategic-number sn-enable-training-queue == 1)
	(up-compare-goal MILITARY <= 0)
	(up-compare-goal threat-time > 10000)
	(or	(food-amount < maximum-castle-queue-food)
		(up-compare-goal gl-current-age >= gv-castle-up))
	(or	(wood-amount < 200)
		(or	(up-research-status c: ri-hand-cart >= research-pending)
			(up-compare-goal gl-my-villager-count-total < 50)))
	(up-research-status c: ri-wheel-barrow >= research-pending)
=>
	(set-strategic-number sn-enable-training-queue 0)
)

; ========== TRADING

#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
#load-if-not-defined DIFFICULTY-MODERATE
#load-if-defined UP-ALLY-IN-GAME
(defrule
	(goal gl-nothing-style-map YES)
=>
	(up-jump-rule 2)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(game-time > 1800)
	(unit-type-count-total trade-cart > 2)
	(or	(can-research-with-escrow ri-cartography)
		(can-research-with-escrow ri-caravan))
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-cartography)
	(research ri-caravan)
	(set-strategic-number sn-target-evaluation-ally-proximity 10000)
)

(defrule
	(up-compare-goal gl-strategy != castle-sling)
	(strategic-number sn-allow-resource-spending >= 0)
	(unit-type-count-total dead-cart1 < 3)
	(unit-type-count-total dead-cart2 < 3)
	(nand	(research-available ri-guilds)
		(up-compare-const gv-michi-style == 1))
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(players-building-type-count any-ally market > 0)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(game-time > 1800)
	(unit-type-count-total trade-cart < max-carts)
	(can-train-with-escrow trade-cart)
=>
	(release-escrow wood)
	(release-escrow gold)
	(train trade-cart)
)
#end-if
#end-if
#end-if
#end-if

; ======== BUILDINGS - HIGH PRIORITY

#load-if-defined DEFEND-WONDER
(defrule
	(building-type-count castle == 0)
	(up-pending-objects c: house < 2)
	(building-type-count-total town-center > 0)
	(population-headroom > 8)
	(housing-headroom < 10)
	(can-build house)
=>
	(build house)
)

(defrule
	(building-type-count castle == 0)
	(up-pending-objects c: house < 2)
	(building-type-count-total town-center > 0)
	(population-headroom > 8)
	(housing-headroom < 10)
	(can-build house)
=>
	(build house)
)
#end-if

#load-if-defined KING-OF-THE-HILL
(defrule
	(game-time > 2200)
	(hold-koh-ruin)
	(not	(map-type ghost-lake))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
=>
	(set-strategic-number sn-gather-idle-soldiers-at-center 1)
	(set-goal gl-wonder-build-attempt-stage placed)
	(set-goal gl-wonder-build-attempt YES)
	(up-jump-rule 4)
)

(defrule
	(game-time > 2200)
	(hold-koh-ruin)
	(or	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
		(map-type ghost-lake))
=>
	(set-strategic-number sn-gather-idle-soldiers-at-center 1)
)

(defrule
	(not	(hold-koh-ruin))
	(goal MILITARY 0)
=>
	(set-strategic-number sn-gather-idle-soldiers-at-center 0)
	(set-goal gl-wonder-build-attempt-stage lost)
	(set-goal gl-wonder-build-attempt NO)
)

(defrule
	(or	(game-time <= 2200)
		(hold-koh-ruin))
=>
	(up-jump-rule 1)
)

(defrule
	(up-compare-goal MILITARY != 1)
	(up-timer-status 30 != timer-running)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-get-point position-center gl-point-x)
	(up-set-target-point gl-point-x)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-find-local c: all-units-class c: 150)
	(up-filter-include cmdid-monk -1 -1 -1)
	(up-find-local c: all-units-class c: 150)
	(up-target-point gl-point-x action-patrol -1 -1)
	(set-strategic-number sn-gather-idle-soldiers-at-center 1)
	(enable-timer 30 30)
)
#end-if

#load-if-not-defined DEATH-MATCH
#load-if-defined VICTORY-STANDARD

#load-if-defined DEFEND-WONDER
(defrule
	(building-type-count-total wonder > 0)
=>
	(set-goal gl-wonder-build-attempt-stage placed)
	(set-goal gl-wonder-build-attempt YES)
	(disable-self)
)
#end-if

(defrule
	(up-compare-goal gl-wonder-build-attempt != YES)
	(up-compare-goal gl-wonder-outpost != YES)
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(up-compare-goal gl-wonder-build-attempt-stage != placed)
	(players-building-type-count every-ally wonder == 0)
	(building-type-count-total wonder == 0)
	(nor	(taunt-detected any-human-ally 37)
		(taunt-detected my-player-number 37))
=>
	(up-jump-rule 33)
)

(defrule
	(or	(population < 150)
		(or	(current-age <= castle-age)
			(and	(goal MILITARY 0)
				(and	(up-enemy-units-in-town > 14)
					(population < pop-to-full-pop-attack)))))
	(or	(taunt-detected any-human-ally 37)
		(taunt-detected my-player-number 37))
=>
	(chat-to-player my-player-number "2I'm too weak to build a wonder.")
	(chat-to-player every-ally "2I'm too weak to build a wonder.")
	(acknowledge-taunt every-ally 37)
	(acknowledge-taunt my-player-number 37)
)

(defrule
	(or	(goal gl-wonder-build-attempt-stage saving-resources)
		(goal gl-wonder-build-attempt-stage placed))
	(or	(taunt-detected any-human-ally 37)
		(taunt-detected my-player-number 37))
=>
	(chat-to-player my-player-number "2Either I am or an ally is already building a wonder.")
	(chat-to-player every-ally "2Either I am or an ally is already building a wonder.")
	(acknowledge-taunt every-ally 37)
	(acknowledge-taunt my-player-number 37)
)

(defrule
	(or	(taunt-detected any-human-ally 37)
		(taunt-detected my-player-number 37))
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(up-compare-goal gl-wonder-build-attempt-stage != placed)
=>
	(set-goal gl-wonder-build-attempt YES)
	(set-goal gl-wonder-build-attempt-stage saving-resources)
	(chat-to-player my-player-number "1Attempting to build a wonder")
	(chat-to-player every-ally "1Attempting to build a wonder")
	(acknowledge-taunt every-ally 37)
	(acknowledge-taunt my-player-number 37)
	(set-goal gl-strategy default)
	(set-strategic-number sn-stone-gatherer-percentage 10)
)

(defrule
	(up-compare-goal gl-wonder-placement-at-back > 0)
=>
	(up-modify-goal gl-wonder-placement-at-back c:- 1)
)

(defrule
	(goal gl-wonder-placement-at-back 0)
=>
	(up-reset-placement c: wonder)
	(chat-to-player my-player-number "2Wonder placement failed - reset and retry")
	(chat-to-player every-ally "2Wonder placement failed - reset and retry")
	(disable-self)
)

(defrule
	(up-pending-placement c: wonder)
	(or	(stone-amount >= 1000)
		(civ-selected incan))
	(stone-amount >= 800)
	(wood-amount >= 1000)
	(gold-amount >= 1000)
	(timer-triggered 39)
=>
	(set-goal D-TSA YES)
	(up-modify-sn sn-maximum-town-size c:+ 1)
	(chat-to-player my-player-number "Increase TS for wonder +1")
	(enable-timer 2 10)
)

(defrule
	(up-compare-goal gl-wonder-placement-at-back >= 0)
=>
	(up-jump-rule 1)
)

(defrule
	(goal gl-wonder-build-attempt YES)
	(up-compare-goal gl-wonder-build-attempt-stage != placed)
	(building-type-count-total wonder < 1)
	(can-build-with-escrow wonder)
=>
	(up-assign-builders c: wonder c: 37)
	(release-escrow stone)
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage stone 0)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(enable-timer 39 45)
	(chat-to-allies "1Building a wonder")
	(up-set-placement-data my-player-number -1 c: -25)
	(up-build place-control 0 c: wonder)
	(set-goal gl-wonder-placement-at-back 4)
)

(defrule
	(goal gl-wonder-build-attempt YES)
	(up-compare-goal gl-wonder-build-attempt-stage != placed)
	(building-type-count-total wonder < 1)
	(can-build-with-escrow wonder)
=>
	(up-assign-builders c: wonder c: 37)
	(release-escrow stone)
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage stone 0)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(enable-timer 39 45)
	(chat-to-player my-player-number "1Building a wonder")
	(chat-to-player every-ally "1Building a wonder")
	(build wonder)
)

(defrule
	(goal gl-wonder-build-attempt YES)
	(goal gl-wonder-build-attempt-stage saving-resources)
	(building-type-count-total wonder > 0)
=>
	(set-goal gl-wonder-build-attempt-stage placed)
)

(defrule
	(goal gl-wonder-build-attempt YES)
	(goal gl-wonder-build-attempt-stage saving-resources)
	(commodity-buying-price stone < 400)
	(gold-amount > 1400)
	(stone-amount < 1000)
	(can-buy-commodity stone)
=>
	(buy-commodity stone)
	(chat-to-player my-player-number "Buy stone for wonder")
)

#load-if-defined KING-OF-THE-HILL
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(or	(up-compare-goal gl-wonder-outpost != YES)
		(building-type-count-total outpost < 1))
	(population >= wonder-outpost-pop)
	(players-building-type-count any-ally victory-building > 0)
	(can-build outpost)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 10)
	(set-goal gl-wonder-outpost YES)
	(up-set-placement-data this-any-ally victory-building c: outpost-distance)
	(up-build place-control 0 c: outpost)
	(set-goal gl-wonder-build-attempt-stage placed)
	(set-goal gl-wonder-build-attempt YES)
)
#else
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(or	(up-compare-goal gl-wonder-outpost != YES)
		(building-type-count-total outpost < 1))
	(population >= wonder-outpost-pop)
	(players-building-type-count any-computer-ally victory-building > 0)
	(can-build outpost)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 10)
	(set-goal gl-wonder-outpost YES)
	(up-set-placement-data this-any-computer-ally victory-building c: outpost-distance)
	(up-build place-control 0 c: outpost)
	(set-goal gl-wonder-build-attempt-stage placed)
	(set-goal gl-wonder-build-attempt YES)
)
#end-if

(defrule
	(up-compare-const victory-building == wonder)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(up-compare-goal gl-wonder-outpost != CHECKING)
	(up-compare-goal gl-wonder-outpost != YES)
	(population >= wonder-outpost-pop)
	(players-building-type-count any-human-ally victory-building > 0)
	(can-build outpost)
=>
	(set-goal gl-wonder-outpost CHECKING)
	(chat-to-allies "Taunt 26 if you want me to defend your wonder.")
	(acknowledge-taunt every-ally 26)
)

(defrule
	(taunt-detected any-human-ally 26)
	(players-building-type-count any-human-ally victory-building > 0)
	(goal gl-wonder-outpost CHECKING)
	(can-build outpost)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 10)
	(set-goal gl-wonder-outpost YES)
	(up-set-placement-data this-any-human-ally victory-building c: outpost-distance)
	(up-build place-control 0 c: outpost)
	(set-goal gl-wonder-build-attempt-stage placed)
	(set-goal gl-wonder-build-attempt YES)
	(chat-to-allies "1I'll start building defences.")
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(or	(up-compare-goal gl-wonder-outpost != YES)
		(building-type-count-total outpost < 1))
	(population >= wonder-outpost-pop)
	(up-pending-objects c: outpost < 1)
	(building-type-count koth-monument > 0)
	(can-build outpost)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 10)
	(set-goal gl-wonder-outpost YES)
	(up-set-placement-data my-player-number koth-monument c: outpost-distance)
	(up-build place-control 0 c: outpost)
	(set-goal gl-wonder-build-attempt-stage placed)
	(set-goal gl-wonder-build-attempt YES)
)

(defrule
	(goal gl-unit-spreading-count 10)
=>
	(set-goal gl-unit-spreading-count 11)
	(set-strategic-number sn-task-ungrouped-soldiers 0)
)

(defrule
	(or	(and	(goal gl-wonder-outpost YES)
			(or	(players-building-type-count any-ally wonder > 0)
				(hold-koh-ruin)))
		(building-type-count-total wonder > 0))
	(up-compare-goal MILITARY != 1)
	(up-enemy-units-in-town < 5)
	(up-timer-status 39 != timer-running)
=>
	(up-retreat-to outpost c: -1)
	(up-retreat-to wonder c: -1)
	(enable-timer 39 135)
	(set-goal gl-unit-spreading-count 10)
	(set-strategic-number sn-task-ungrouped-soldiers 1)
)

(defrule
	(players-building-type-count every-ally wonder == 0)
	(not	(hold-koh-ruin))
	(or	(and	(building-type-count outpost > 0)
			(goal gl-wonder-outpost YES))
		(goal gl-wonder-outpost CHECKING))
=>
	(set-goal gl-wonder-outpost NO)
	(delete-building outpost)
)

(defrule
	(goal gl-wonder-build-attempt YES)
	(nor	(enemy-captured-relics)
		(players-building-type-count any-enemy wonder > 0))
	(or	(up-timer-status 7 != timer-disabled)
		(up-compare-goal MILITARY != 0))
=>
	(disable-timer 7)
	(set-goal MILITARY 0)
	(set-strategic-number sn-hitting-pop-cap NO)
)

(defrule
	(goal gl-wonder-build-attempt YES)
	(or	(enemy-captured-relics)
		(players-building-type-count any-enemy wonder > 0))
	(up-timer-status 7 == timer-disabled)
=>
	(enable-timer 7 0)
)

(defrule
	(goal gl-wonder-build-attempt-stage placed)
	(not	(hold-koh-ruin))
	(building-type-count-total wonder == 0)
	(players-building-type-count wonder every-ally == 0)
=>
	(set-goal gl-wonder-build-attempt-stage lost)
	(set-goal gl-wonder-build-attempt NO)
	(enable-timer 7 0)
)

(defrule
	(game-time > 240)
	(goal gl-wonder-build-attempt-stage placed)
	(players-building-type-count any-ally victory-building > 0)
	(building-type-count-total castle > 0)
	(can-build castle)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 25)
	(up-set-placement-data this-any-ally victory-building c: 4)
	(up-build place-control 0 c: castle)
	(set-goal gl-castle-placed YES)
	(set-goal castle-dropped-timer 30)
	(chat-to-player my-player-number "Castle for protection")
)

(defrule
	(game-time > 240)
	(goal gl-wonder-build-attempt YES)
	(building-type-count victory-building > 0)
	(can-build castle)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 25)
	(up-set-placement-data my-player-number victory-building c: 4)
	(up-build place-control 0 c: castle)
	(set-goal gl-castle-placed YES)
	(set-goal castle-dropped-timer 30)
	(chat-to-player my-player-number "Castle for protection")
)

(defrule
	(game-time > 240)
	(goal gl-wonder-build-attempt YES)
	(goal gl-wonder-build-attempt-stage placed)
	(players-building-type-count any-ally victory-building > 0)
	(building-type-count-total castle > 0)
	(can-build bombard-tower)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 10)
	(up-set-placement-data this-any-ally victory-building c: 4)
	(up-build place-control 0 c: bombard-tower)
)

(defrule
	(game-time > 240)
	(building-type-count victory-building > 0)
	(building-type-count-total castle > 0)
	(can-build bombard-tower)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 10)
	(up-set-placement-data my-player-number victory-building c: 4)
	(up-build place-control 0 c: bombard-tower)
)

(defrule
	(game-time > 240)
	(goal gl-wonder-build-attempt-stage placed)
	(players-building-type-count any-ally victory-building > 0)
	(goal gl-strategy default)
	(strategic-number sn-allow-resource-spending > 4)
	(wood-amount > 500)
	(or	(building-type-count-total barracks < 7)
		(wood-amount > 1800))
	(building-type-count-total barracks < 17)
	(can-build barracks)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 15)
	(up-set-placement-data this-any-ally victory-building c: 7)
	(up-build place-control 0 c: barracks)
)

(defrule
	(game-time > 240)
	(building-type-count-total victory-building > 0)
	(goal gl-wonder-build-attempt YES)
	(strategic-number sn-allow-resource-spending > 4)
	(wood-amount > 500)
	(or	(building-type-count-total barracks < 7)
		(wood-amount > 2000))
	(building-type-count-total barracks < 17)
	(can-build barracks)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 15)
	(up-set-placement-data my-player-number victory-building c: 8)
	(up-build place-control 0 c: barracks)
)

(defrule
	(game-time > 240)
	(goal gl-wonder-build-attempt-stage placed)
	(players-building-type-count any-ally victory-building > 0)
	(goal gl-strategy default)
	(strategic-number sn-allow-resource-spending > 4)
	(wood-amount > 500)
	(or	(building-type-count-total archery-range < 7)
		(wood-amount > 1800))
	(building-type-count-total archery-range < 17)
	(can-build archery-range)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 15)
	(up-set-placement-data this-any-ally victory-building c: 8)
	(up-build place-control 0 c: archery-range)
)

(defrule
	(game-time > 240)
	(building-type-count-total victory-building > 0)
	(goal gl-wonder-build-attempt YES)
	(strategic-number sn-allow-resource-spending > 4)
	(wood-amount > 500)
	(building-type-count-total archery-range < 7)
	(can-build archery-range)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 15)
	(up-set-placement-data my-player-number victory-building c: 8)
	(up-build place-control 0 c: archery-range)
)

(defrule
	(game-time > 240)
	(goal gl-wonder-build-attempt-stage placed)
	(players-building-type-count any-ally victory-building > 0)
	(strategic-number sn-allow-resource-spending > 4)
	(wood-amount > 500)
	(or	(building-type-count-total stable < 7)
		(and	(wood-amount > 1400)
			(research-completed ri-paladin)))
	(building-type-count-total stable < 13)
	(can-build stable)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 15)
	(up-set-placement-data this-any-ally victory-building c: 8)
	(up-build place-control 0 c: stable)
)

(defrule
	(game-time > 240)
	(building-type-count-total victory-building > 0)
	(goal gl-wonder-build-attempt YES)
	(strategic-number sn-allow-resource-spending > 4)
	(wood-amount > 500)
	(building-type-count-total stable < 7)
	(can-build stable)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 15)
	(up-set-placement-data my-player-number victory-building c: 8)
	(up-build place-control 0 c: stable)
)

(defrule
	(game-time > 240)
	(goal gl-wonder-build-attempt-stage placed)
	(players-building-type-count any-ally victory-building > 0)
	(goal gl-wonder-build-attempt YES)
	(strategic-number sn-allow-resource-spending > 4)
	(wood-amount > 500)
	(building-type-count-total siege-workshop < 5)
	(can-build siege-workshop)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 15)
	(up-set-placement-data this-any-ally victory-building c: 7)
	(up-build place-control 0 c: siege-workshop)
)

(defrule
	(game-time > 240)
	(building-type-count-total victory-building > 0)
	(goal gl-wonder-build-attempt YES)
	(strategic-number sn-allow-resource-spending > 4)
	(wood-amount > 500)
	(building-type-count-total siege-workshop < 5)
	(can-build siege-workshop)
=>
	(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-placement-zone-size 15)
	(up-set-placement-data my-player-number victory-building c: 7)
	(up-build place-control 0 c: siege-workshop)
)
#end-if
#end-if

#load-if-defined ARENA-MAP
(load "Barbarian_2.0\Castles")
#else
#load-if-defined POPULATION-CAP-25
(load "Barbarian_2.0\Castles")
#else
#load-if-defined POPULATION-CAP-50
(load "Barbarian_2.0\Castles")
#end-if
#end-if
#end-if

#load-if-defined DEATH-MATCH
(load "Barbarian_2.0\DeathMatch")
#else

#load-if-defined UP-MICHI-STYLE
(defrule
	(goal gl-current-age gv-feudal)
	(building-type-count-total market < 1)
	(can-build market)
=>
	(build market)
)

(defrule
	(or	(and	(goal gl-current-age gv-feudal)
			(building-type-count-total blacksmith < 1))
		(goal gl-current-age gv-castle-up))
	(starting-age != post-imperial-age)
	(building-type-count-total blacksmith < 2)
	(building-type-count-total market > 0)
	(can-build blacksmith)
=>
	(build blacksmith)
)
#end-if

#load-if-not-defined WONDER-RACE

#load-if-not-defined REGICIDE
#load-if-not-defined DEFEND-WONDER
#load-if-not-defined FORTRESS-MAP

(defrule
	(game-time >= 2100)
=>
	(up-jump-rule 4)
)

(defrule
	(game-time < 2100)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(up-compare-goal gl-current-age >= gv-castle)
	(strategic-number sn-allow-resource-spending >= 0)
	(up-compare-goal gl-my-villager-count > 20)
	(or	(unit-type-count-total battering-ram-line < 1)
		(and	(unit-type-count-total battering-ram-line < 2)
			(players-building-type-count target-player watch-tower > 4)))
	(unit-type-count-total trebuchet-set < 1)
	(players-building-type-count target-player watch-tower > 2)
	(up-player-distance target-player < 33)
=>
	(set-escrow-percentage wood 100)
	(set-escrow-percentage gold 100)
)

(defrule
	(or	(nor	(players-unit-type-count focus-player knight-line < 1)
			(or	(players-unit-type-count focus-player eagle-warrior-line < 2)
				(or	(players-unit-type-count focus-player militiaman-line < 2)
					(players-unit-type-count focus-player scout-cavalry-line < 2))))
		(or	(game-time >= 1800)
			(or	(soldier-count >= 12)
				(or	(up-compare-goal gl-rush-suitability-on-map < AVERAGE)
					(up-compare-goal gl-current-age < gv-castle)))))
=>
	(up-jump-rule 2)
)

(defrule
	(soldier-count < 4)
	(up-compare-goal gl-strategy != heavy-krush)
	(or	(players-unit-type-count focus-player archer-line > 6)
		(players-unit-type-count focus-player cavalry-archer-line > 5))
	(or	(and	(town-under-attack)
			(goal gl-x-vs-one-challenge YES))
		(goal POSITION FLANK))
	(unit-type-count-total mangonel-line < 2)
=>
	(set-escrow-percentage wood 100)
	(set-escrow-percentage gold 100)
	(set-goal gl-panic-xbow-counter YES)
)

(defrule
	(or	(players-unit-type-count focus-player archer-line > 15)
		(players-unit-type-count focus-player cavalry-archer-line > 13))
	(or	(town-under-attack)
		(or	(and	(goal gl-x-vs-one-challenge YES)
				(and	(building-type-count-total town-center > 1)
					(unit-type-count-total mangonel-line < 1))); Booming may get damaged, but atleast we don't die to xbows too easily
			(goal POSITION FLANK)))
	(unit-type-count-total mangonel-line < 2)
=>
	(set-escrow-percentage wood 100)
	(set-escrow-percentage gold 100)
	(set-goal gl-panic-xbow-counter YES)
)

#load-if-not-defined UP-POCKET-POSITION
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(game-time < 2700)
	(up-compare-goal gl-current-age >= gv-castle)
	(strategic-number sn-allow-resource-spending >= 0)
	(up-compare-goal gl-my-villager-count > 25)
	(nand	(population > 80)
		(players-population target-player < 50))
	(up-projectile-detected projectile-castle < 600000)
	(unit-type-count-total battering-ram-line < 3)
	(unit-type-count-total trebuchet-set < 1)
	(players-building-type-count target-player castle > 0)
	(up-player-distance target-player < 33)
=>
	(set-escrow-percentage wood 100)
	(set-escrow-percentage gold 100)
)

(defrule
	(building-type-count-total siege-workshop < 1)
	(or	(and	(or	(players-building-type-count target-player watch-tower > 2)
				(players-building-type-count target-player castle > 0))
			(and	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
				(up-player-distance target-player < 33)))
		(goal gl-panic-xbow-counter YES))
	(can-build-with-escrow siege-workshop)
=>
	(release-escrow wood)
	(build siege-workshop)
	(set-strategic-number sn-monk-trained 1)
)
#else
(defrule
	(game-time < 2700)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(up-compare-goal gl-current-age >= gv-castle)
	(strategic-number sn-allow-resource-spending >= 0)
	(up-compare-goal gl-my-villager-count > 25)
	(population > 55)
	(up-projectile-detected projectile-castle < 600000)
	(or	(building-type-count-total siege-workshop < 1)
		(unit-type-count-total battering-ram-line < 3))
	(unit-type-count-total trebuchet-set < 1)
	(players-building-type-count target-player castle > 0)
	(up-player-distance target-player < 33)
=>
	(set-escrow-percentage wood 100)
	(set-escrow-percentage gold 100)
)

(defrule
	(building-type-count-total siege-workshop < 1)
	(or	(and	(or	(players-building-type-count target-player watch-tower > 2)
				(players-building-type-count target-player castle > 0))
			(and	(population > 55)
				(up-player-distance target-player < 33)))
		(goal gl-panic-xbow-counter YES))
	(can-build-with-escrow siege-workshop)
=>
	(release-escrow wood)
	(build siege-workshop)
	(set-strategic-number sn-monk-trained 1)
)
#end-if

(defrule
	(goal gl-gathering-inside EVEN-CASTLE)
	(up-compare-goal gl-my-villager-count-total >= 65)
	(building-type-count-total town-center > 2)
	(up-player-distance target-player < 33)
	(unit-type-count-total scorpion-line > 0)
	(building-type-count-total siege-workshop < 3)
	(can-build-with-escrow siege-workshop)
=>
	(release-escrow wood)
	(build siege-workshop)
)
#end-if
#end-if
#end-if

(defrule
	(up-compare-goal gl-current-age > gv-dark-up)
	(or	(goal gl-strategy eew-strategy)
		(or	(goal gl-strategy korean-boom)
			(or	(goal gl-strategy turkish-fast-imp)
				(or	(goal gl-strategy boom)
					(or	(goal gl-strategy castle-drop)
						(game-time > 3000))))))
	(building-type-count-total market < 1)
	(can-build market)
=>
	(build market)
)

#load-if-not-defined DEFEND-WONDER
#load-if-not-defined POST-IMPERIAL-AGE-START
(defrule
	(or	(and	(goal gl-strategy flush)
			(or	(building-type-count-total archery-range > 0)
				(or	(game-time > 1800)
					(and	(game-time > 1200)
						(taunt-detected any-human-ally 33)))))
		(and	(building-type-count-total stable > 0)
			(goal gl-strategy knight-boom)))
	(building-type-count-total blacksmith < 1)
	(can-build blacksmith)
=>
	(build blacksmith)
)

(defrule
	(or	(soldier-count > 5)
		(up-compare-goal gl-current-age >= gv-feudal-up))
	(nand	(goal gl-strategy super-scouts)
		(building-type-count-total market < 1))
	(nand	(goal gl-strategy scrush)
		(building-type-count-total archery-range < 2))
	(building-type-count-total blacksmith < 1)
	(can-build blacksmith)
=>
	(build blacksmith)
)

(defrule
	(or	(goal gl-strategy eew-strategy)
		(or	(goal gl-strategy korean-boom)
			(or	(goal gl-strategy turkish-fast-imp)
				(or	(goal gl-strategy boom)
					(or	(goal gl-strategy castle-drop)
						(game-time > 3000))))))
	(building-type-count-total market > 0)
	(building-type-count-total blacksmith < 1)
	(can-build blacksmith)
=>
	(set-strategic-number sn-maximum-town-size 10)
	(build blacksmith)
)

(defrule
	(or	(goal gl-strategy-class basic-class)
		(or	(goal gl-strategy xbow-rush)
			(goal gl-strategy CA-rush)))
	(not	(goal gl-strategy flush))
	(building-type-count-total blacksmith < 1)
	(or	(building-type-count-total market > 0)
		(or	(building-type-count-total stable > 0)
			(building-type-count-total archery-range > 0)))
	(can-build blacksmith)
=>
	(set-strategic-number sn-maximum-town-size 10)
	(build blacksmith)
)
#end-if
#end-if

(defrule
	(goal gl-TC-lost NO)
	(or	(and	(building-type-count-total archery-range < 2)
			(goal gl-feudal-trash YES))
		(and	(goal gl-strategy flush)
			(and	(goal gl-current-age gv-feudal)
				(and	(game-time > 1680)
					(wood-amount > 350)))))
	(building-type-count-total archery-range < 4)
	(can-build archery-range)
=>
	(set-strategic-number sn-maximum-town-size 10)
	(build archery-range)
)

(defrule
	(goal gl-TC-lost NO)
	(up-compare-goal gl-current-age >= gv-feudal)
	(or	(and	(up-compare-goal gl-feudal-archery >= archers)
			(current-age == feudal-age))
		(or	(goal gl-advanced-trash YES)
			(goal gl-advanced-archery slingers)))
	(building-type-count-total archery-range < 2)
	(can-build archery-range)
=>
	(set-strategic-number sn-maximum-town-size 10)
	(build archery-range)
)

(defrule
	(goal gl-TC-lost NO)
	(goal gl-current-age gv-feudal)
	(or	(up-compare-goal gl-feudal-archery >= archers)
		(and	(strategic-number sn-age-up-castle == 1)
			(wood-amount > 350)))
	(current-age == feudal-age)
	(building-type-count-total archery-range < 3)
	(not	(goal gl-feudal-infantry men-at-arms))
	(can-build archery-range)
=>
	(set-strategic-number sn-maximum-town-size 10)
	(build archery-range)
)

#load-if-not-defined AZTEC-CIV
#load-if-not-defined INCAN-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(or	(goal gl-advanced-cavalry knight-CA)
		(goal gl-advanced-archery archer-to-gun-transfer))
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(building-type-count-total archery-range < 2)
		(up-compare-goal gl-my-villager-count-total > 60))
	(or	(building-type-count-total archery-range < 3)
		(building-type-count-total town-center > 2))
	(building-type-count-total archery-range < 4)
	(can-build archery-range)
=>
	(set-strategic-number sn-maximum-town-size 10)
	(build archery-range)
)

(defrule
	(goal gl-strategy krush)
	(building-type-count-total town-center > 2)
	(or	(building-type-count-total stable < 3)
		(up-compare-goal gl-my-villager-count-total > 62))
	(or	(building-type-count-total stable < 4)
		(up-compare-goal gl-my-villager-count-total > 72))
	(or	(building-type-count-total stable < 5)
		(up-compare-goal gl-my-villager-count-total > 83))
	(building-type-count-total stable < 6)
	(can-build stable)
=>
	(build stable)
)

(defrule
	(goal gl-strategy krush)
	(or	(and	(not	(goal POSITION POCKET))
			(and	(up-compare-goal gl-current-age >= gv-feudal-up)
				(building-type-count-total stable < 2)))
		(or	(building-type-count-total stable < 1)
			(and	(up-compare-goal gl-current-age >= gv-feudal-up)
				(goal SLING 3))))
	(building-type-count-total stable < 3)
	(can-build stable)
=>
	(build stable)
)

(defrule
	(goal gl-strategy krush)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(up-compare-goal gl-current-age <= gv-feudal)
	(building-type-count-total barracks < 1)
	(can-build barracks)
=>
	(build barracks)
)
#end-if
#end-if
#end-if

#load-if-defined FRANKISH-CIV
(defrule
	(goal gl-TC-lost NO)
	(goal gl-strategy default)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(game-time > 1500)
	(or	(building-type-count-total archery-range < 2)
		(and	(game-time > 1800)
			(building-type-count-total town-center > 2)))
	(building-type-count-total archery-range < 3)
	(can-build archery-range)
=>
	(set-strategic-number sn-maximum-town-size 15)
	(build archery-range)
)
#end-if

#load-if-defined HUN-CIV
(defrule
	(goal gl-TC-lost NO)
	(goal gl-strategy-class basic-class)
	(strategic-number sn-minimum-water-body-size-for-dock != 2001)
	(game-time > 1800)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(building-type-count-total archery-range < 2)
		(and	(building-type-count-total archery-range < 5)
			(up-compare-goal gl-my-villager-count-total > 90)))
	(can-build archery-range)
=>
	(set-strategic-number sn-maximum-town-size 15)
	(build archery-range)
)

(defrule
	(goal gl-strategy-class basic-class)
	(up-compare-goal gl-current-age >= gv-feudal)
	(building-type-count-total town-center > 2)
	(game-time > 1400)
	(or	(goal POSITION FLANK)
		(game-time > 1650))
	(or	(and	(building-type-count-total archery-range < 4)
			(goal gl-strategy CA-boom))
		(research-completed ri-heavy-cavalry-archer))
	(building-type-count-total archery-range < 6)
	(can-build archery-range)
=>
	(set-strategic-number sn-maximum-town-size 15)
	(build archery-range)
)

(defrule
	(goal gl-strategy CA-boom)
	(or	(building-type-count-total archery-range < 1)
		(up-compare-goal gl-current-age >= gv-feudal-up))
	(or	(up-compare-goal POSITION != POCKET)
		(or	(and	(building-type-count-total town-center > 2)
				(game-time > 1260))
			(building-type-count-total archery-range < 1)))
	(building-type-count-total archery-range < 2)
	(can-build archery-range)
=>
	(set-strategic-number sn-maximum-town-size 10)
	(build archery-range)
)
#end-if

(defrule
	(or	(goal gl-strategy-class basic-class)
		(or	(goal gl-strategy mongol-boom)
			(population-cap < 175)))
	(or	(civ-selected mongol)
		(civ-selected korean))
	(or	(and	(unit-type-count-total my-unique-unit-line > 10)
			(strategic-number sn-allow-resource-spending > 2))
		(up-compare-goal gl-current-age >= gv-castle-up))
	(building-type-count-total archery-range < 1)
	(can-build archery-range)
=>
	(build archery-range)
)

#load-if-defined PERSIAN-CIV
(defrule
	(goal gl-strategy-class basic-class)
	(or	(and	(unit-type-count-total war-elephant-line > 10)
			(strategic-number sn-allow-resource-spending > 2))
		(up-compare-goal gl-current-age >= gv-castle-up))
	(building-type-count-total stable < 1)
	(can-build stable)
=>
	(build stable)
)
#end-if
#load-if-defined SLAVIC-CIV
(defrule
	(goal gl-strategy-class basic-class)
	(or	(and	(unit-type-count-total boyar > 10)
			(and	(strategic-number sn-allow-resource-spending > 1)
				(or	(building-type-count-total town-center > 2)
					(strategic-number sn-allow-resource-spending > 2))))
		(up-compare-goal gl-current-age >= gv-castle-up))
	(building-type-count-total stable < 1)
	(can-build stable)
=>
	(build stable)
)
#end-if

#load-if-defined DARK-AGE-START
(defrule
	(or	(goal gl-strategy xbow-rush)
		(and	(goal gl-strategy skirm-boom)
			(or	(building-type-count-total archery-range < 1)
				(and	(building-type-count-total town-center > 1)
					(building-type-count-total archery-range < 2)))))
	(or	(building-type-count-total archery-range < 1)
		(up-compare-goal gl-current-age >= gv-feudal-up))
	(building-type-count-total archery-range < 3)
	(can-build archery-range)
=>
	(set-strategic-number sn-maximum-town-size 10)
	(build archery-range)
)
#else
(defrule
	(up-compare-goal gl-current-age >= gv-feudal)
	(goal gl-strategy skirm-boom)
	(or	(building-type-count-total archery-range < 1)
		(building-type-count-total town-center > 1))
	(building-type-count-total archery-range < 2)
	(or	(building-type-count-total archery-range < 1)
		(up-compare-goal gl-current-age >= gv-feudal-up))
	(can-build archery-range)
=>
	(set-strategic-number sn-maximum-town-size 10)
	(build archery-range)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal)
	(goal gl-strategy xbow-rush)
	(or	(building-type-count-total archery-range < 1)
		(up-compare-goal gl-current-age >= gv-feudal-up))
	(building-type-count-total archery-range < 3)
	(can-build archery-range)
=>
	(set-strategic-number sn-maximum-town-size 10)
	(build archery-range)
)
#end-if

(defrule
	(goal gl-strategy xbow-boom)
	(up-compare-goal gl-current-age >= gv-feudal)
	(or	(building-type-count-total archery-range < 1)
		(and	(up-compare-goal gl-current-age >= gv-feudal-up)
			(nand	(goal POSITION POCKET)
				(or	(building-type-count-total town-center < 3)
					(game-time < 1260)))))
	(building-type-count-total archery-range < 2)
	(can-build archery-range)
=>
	(set-strategic-number sn-maximum-town-size 10)
	(build archery-range)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal)
	(goal gl-strategy xbow-rush)
	(or	(civ-selected mayan)
		(up-compare-goal gl-my-villager-count-total > 42))
	(or	(building-type-count-total archery-range < 4)
		(up-compare-goal gl-my-villager-count-total > 65))
	(building-type-count-total archery-range < 6)
	(research-completed ri-bodkin-arrow)
	(research-completed ri-crossbow)
	(can-build archery-range)
=>
	(set-strategic-number sn-maximum-town-size 10)
	(build archery-range)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal)
	(or	(and	(goal gl-strategy xbow-boom)
			(and	(building-type-count-total town-center > 2)
				(and	(research-completed ri-bodkin-arrow)
					(research-completed ri-crossbow))))
		(goal gl-advanced-archery CAs))
	(or	(building-type-count-total town-center > 2)
		(building-type-count-total archery-range < 2))
	(building-type-count-total archery-range < 4)
	(can-build archery-range)
=>
	(build archery-range)
)

#load-if-not-defined MAYAN-CIV
(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(and	(goal gl-strategy knight-archer)
			(building-type-count-total archery-range < 3))
		(goal gl-strategy skirm-boom))
	(or	(building-type-count-total archery-range < 1)
		(building-type-count-total town-center > 2))
	(nand	(goal POSITION POCKET)
		(building-type-count-total town-center < 3))
	(building-type-count-total archery-range < 4)
	(can-build archery-range)
=>
	(build archery-range)
)
#else
(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(and	(unit-type-count-total plumed-archer-line > 12)
			(and	(strategic-number sn-allow-resource-spending > 2)
				(building-type-count-total archery-range < 1)))
		(and	(goal gl-strategy skirm-boom)
			(building-type-count-total town-center > 2)))
	(building-type-count-total archery-range < 4)
	(can-build archery-range)
=>
	(build archery-range)
)
#end-if
#load-if-defined CHINESE-CIV
(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(unit-type-count-total chu-ko-nu-line > 12)
	(strategic-number sn-allow-resource-spending > 2)
	(building-type-count-total archery-range < 1)
	(can-build archery-range)
=>
	(build archery-range)
)
#end-if
#end-if; Not wonder race

#load-if-not-defined POST-IMPERIAL-AGE-START
#load-if-not-defined DEFEND-WONDER
(defrule
	(goal gl-TC-lost NO)
	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
	(unit-type-count-total galley-line > 17)
	(game-time > 1600)
	(or	(unit-type-count-total galley-line > 30)
		(game-time > 1830))
	(building-type-count-total university < 1)
	(can-build university)
=>
	(build university)
)
#end-if
#end-if

; ==================== RESEARCHES - HIGH PRIORITY

#load-if-not-defined WONDER-RACE
#load-if-not-defined BRITON-CIV
#load-if-not-defined GOTHIC-CIV
#load-if-not-defined KOREAN-CIV
#load-if-not-defined CHINESE-CIV
#load-if-not-defined JAPANESE-CIV
#load-if-not-defined PERSIAN-CIV
(defrule
	(strategic-number sn-heresy-escrow == 1)
	(building-type-count monastery > 0)
	(or	(unit-type-count villager-gold > 7)
		(unit-type-count trade-cart > 9))
	(up-compare-goal gl-my-villager-count-total > 50)
	(soldier-count > 25)
	(or	(players-unit-type-count any-enemy monk > 9)
		(players-unit-type-count any-enemy missionary > 9))
	(research-available ri-heresy)
=>
	(set-escrow-percentage gold 100)
	(set-strategic-number sn-allow-resource-spending -1)
	(up-add-research-cost c: ri-heresy c: -1)
)

(defrule
	(strategic-number sn-allow-resource-spending == -1)
	(strategic-number sn-target-evaluation-randomness == 0)
=>
	(chat-to-player my-player-number "Start saving resources for heresy")
	(set-strategic-number sn-target-evaluation-randomness 1)
)

(defrule
	(strategic-number sn-target-evaluation-randomness == 1)
	(players-unit-type-count every-enemy monk < 20)
	(players-unit-type-count every-enemy missionary < 20)
	(or	(unit-type-count-total archer-line > 16)
		(or	(unit-type-count-total scout-cavalry-line > 6)
			(goal gl-eew-strategy-type fast-imp)))
	(research-available ri-heresy)
=>
	(set-escrow-percentage gold 0)
	(release-escrow gold)
	(chat-to-player my-player-number "Cancel escrows for heresy")
	(set-strategic-number sn-heresy-escrow 0)
	(set-strategic-number sn-target-evaluation-randomness 2)
)

(defrule
	(strategic-number sn-target-evaluation-randomness == 2)
	(unit-type-count-total archer-line <= 16)
	(unit-type-count-total scout-cavalry-line <= 6)
	(up-compare-goal gl-eew-strategy-type != fast-imp)
	(research-available ri-heresy)
=>
	(set-escrow-percentage gold 0)
	(release-escrow gold)
	(chat-to-player my-player-number "Check if heresy is needed again")
	(set-strategic-number sn-heresy-escrow 1)
	(set-strategic-number sn-target-evaluation-randomness 0)
)

(defrule
	(or	(or	(players-unit-type-count any-enemy monk > 4)
			(players-unit-type-count any-enemy missionary > 4))
		(or	(and	(civ-selected aztec)
				(unit-type-count-total monk > 28))
			(strategic-number sn-allow-resource-spending == -1))); If the plan was to get heresy, take it anyway
	(can-research-with-escrow ri-heresy)
=>
	(set-escrow-percentage gold 0)
	(release-escrow gold)
	(research ri-heresy)
	(set-strategic-number sn-target-evaluation-randomness 0)
	(set-strategic-number sn-heresy-escrow 0)
	(chat-to-player my-player-number "Heresy")
)

(defrule
	(strategic-number sn-allow-resource-spending == -1)
	(or	(not	(research-available ri-heresy))
		(or	(research-completed ri-heresy)
			(strategic-number sn-heresy-escrow == 0)))
=>
	(set-strategic-number sn-allow-resource-spending 0)
)

#end-if
#end-if
#end-if
#end-if
#end-if
#end-if

#end-if

; ======== RESEARCHES - ECONOMY - HIGH PRIORITY

#load-if-defined AZTEC-CIV
(defrule
	(goal gl-current-age gv-dark-up)
	(or	(goal gl-strategy eagle-monk-rush)
		(goal gl-strategy fast-eagles))
=>
	(set-goal gl-FC-type 2-villagers)
	(set-goal gl-required-current-age-time 45)
	(disable-self)
)
#end-if

(defrule
	(nand	(goal gl-FC-type 2-villagers)
		(and	(current-age < castle-age)
			(up-compare-goal gl-strategy-type >= FC)))
	(can-research ri-wheel-barrow)
	(up-compare-goal gl-my-villager-count-total > 19)
=>
	(research ri-wheel-barrow)
)

(defrule
	(or	(and	(soldier-count > 40)
			(and	(up-compare-goal gl-my-villager-count-total > 90)
				(game-time > 3000)))
		(and	(goal gl-nothing-style-map YES)
			(building-type-count-total market == 0)))
	(game-time > 1500)
	(can-research ri-town-watch)
=>
	(research ri-town-watch)
)

(defrule
	(up-compare-goal gl-strategy != fi-monk-rush)
	(or	(up-compare-goal gl-eew-strategy-type != fast-imp)
		(soldier-count > 30))
	(nand	(or	(goal gl-disable-mining-upgrades YES)
			(goal gl-strategy-class basic-class))
		(up-compare-goal gl-my-villager-count-total < 50))
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(dropsite-min-distance stone < 3)
	(or	(strategic-number sn-stone-gatherer-percentage > 5)
		(up-compare-goal CASTLE != 0))
	(can-research ri-stone-mining)
=>
	(research ri-stone-mining)
)

(defrule
	(up-compare-goal gl-strategy != scrush)
	(or	(nand	(building-type-count-total mining-camp < 2)
			(goal CASTLE 2))
		(current-age >= castle-age))
	(nand	(goal gl-strategy heavy-krush)
		(and	(building-type-count-total town-center == 1)
			(game-time < 1700)))
	(or	(up-compare-goal gl-strategy-type <= controlled-flush)
		(up-compare-goal gl-current-age >= gv-feudal-up))
	(can-research ri-double-bit-axe)
=>
	(research ri-double-bit-axe)
)

#load-if-not-defined WONDER-RACE
(defrule
	(current-age-time > 14)
	(up-compare-goal gl-strategy != fast-eagles)
	(or	(nand	(building-type-count-total mining-camp < 2)
			(goal CASTLE 2))
		(current-age >= castle-age))
	(nand	(goal gl-strategy heavy-krush)
		(game-time < 1650))
	(or	(goal gl-strategy-type basic-flush)
		(up-compare-goal gl-current-age >= gv-feudal-up))
	(can-research ri-horse-collar)
=>
	(research ri-horse-collar)
)

#load-if-not-defined UP-MICHI-STYLE
(defrule
	(or	(nand	(building-type-count-total mining-camp < 2)
			(goal CASTLE 2))
		(current-age >= castle-age))
	(up-compare-goal gl-strategy != fast-eagles)
	(up-compare-goal gl-disable-mining-upgrades != YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(can-research ri-gold-mining)
=>
	(research ri-gold-mining)
)

(defrule
	(or	(and	(up-compare-goal gl-feudal-archery >= archers)
			(and	(building-type-count-total archery-range > 1)
				(food-amount > 150)))
		(or	(and	(goal gl-strategy sling)
				(up-research-status c: ri-coinage >= research-pending))
			(and	(goal gl-disable-mining-upgrades YES)
				(up-compare-goal gl-my-villager-count-total > 50))))
	(can-research ri-gold-mining)
=>
	(research ri-gold-mining)
)
#else
(defrule
	(building-type-count-total town-center > 3)
	(strategic-number sn-gold-gatherer-percentage > 0)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(can-research ri-gold-mining)
=>
	(research ri-gold-mining)
)
#end-if

(defrule
	(or	(goal gl-strategy-class basic-class)
		(and	(goal gl-strategy xbow-rush)
			(current-age-time > 600)))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(nand	(goal gl-strategy xbow-boom)
		(and	(research-available ri-bodkin-arrow)
			(goal POSITION FLANK)))
	(can-research-with-escrow ri-heavy-plow)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-heavy-plow)
)

(defrule
	(or	(and	(game-time > 1500)
			(or	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
				(goal gl-islands-style YES)))
		(or	(up-compare-goal gl-current-age >= gv-castle-up)
			(or	(goal gl-strategy monk-boom)
				(goal gl-strategy castle-sling))))
	(can-research-with-escrow ri-heavy-plow)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-heavy-plow)
)

#load-if-defined KOREAN-CIV
(defrule
	(goal gl-strategy korean-boom)
	(can-research-with-escrow ri-heavy-plow)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-heavy-plow)
)
#end-if
#load-if-defined TURKISH-CIV
(defrule
	(goal gl-strategy turkish-fast-imp)
	(or	(building-type-count-total monastery > 0)
		(building-type-count-total siege-workshop > 0))
	(can-research-with-escrow ri-heavy-plow)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-heavy-plow)
)
#end-if

#end-if

; ======== RESEARCHES - UNIT UPGRADES

#load-if-not-defined TURKISH-CIV
#load-if-defined TINY-MAP
(defrule
	(or	(strategic-number sn-allow-resource-spending >= 0)
		(strategic-number sn-allow-resource-spending == -2))
	(goal gl-strategy-class basic-class)
	(up-compare-goal gl-my-villager-count > 45)
	(players-unit-type-count focus-player knight-line > 7)
	(unit-type-count spearman-line > 15)
	(research-available ri-pikeman)
	(building-type-count barracks > 0)
=>
	(set-escrow-percentage food 100)
	(set-escrow-percentage gold 100)
	(up-modify-goal gl-food-gp-points c:+ 16)
	(up-modify-goal gl-gold-gp-points c:+ 8)
	(up-add-research-cost c: ri-pikeman c: -1)
	(set-strategic-number sn-allow-resource-spending -2)
	(chat-to-player my-player-number "Emergency escrow for pikeman")
)

(defrule
	(strategic-number sn-allow-resource-spending == -2)
	(can-research-with-escrow ri-pikeman)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-pikeman)
	(set-strategic-number sn-allow-resource-spending 0)
)
#end-if

#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(or	(and	(players-unit-type-count any-enemy monk > 3)
			(unit-type-count-total scout-cavalry-line > 1))
		(or	(unit-type-count-total scout-cavalry-line >= relative-5-units)
			(or	(and	(unit-type-count-total scout-cavalry-line > 1)
					(food-amount > 1700))
				(and	(strategic-number sn-allow-resource-spending > 5)
					(goal gl-advanced-cavalry LC)))))
	(can-research ri-light-cavalry)
=>
	(research ri-light-cavalry)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(cc-players-unit-type-count 0 gold-mine > 3)
	(civilian-population > 75)
	(soldier-count > 45)
	(unit-type-count-total scout-cavalry-line > 13)
	(building-type-count stable > 0)
	(research-available ri-hussar)
=>
	(up-modify-goal gl-food-gp-points c:+ 10)
	(up-modify-goal gl-gold-gp-points c:+ 10)
	(set-escrow-percentage food 20)
	(set-escrow-percentage gold 20)
	(up-add-research-cost c: ri-hussar c: -1)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(or	(unit-type-count-total scout-cavalry-line >= relative-6-units)
		(or	(and	(unit-type-count-total scout-cavalry-line > 1)
				(food-amount > 2000))
			(and	(strategic-number sn-allow-resource-spending > 5)
				(goal gl-advanced-cavalry LC))))
	(can-research-with-escrow ri-hussar)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-hussar)
)
#end-if
#end-if

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(building-type-count archery-range > 0)
	(or	(and	(unit-type-count-total skirmisher-line > 12)
			(strategic-number sn-allow-resource-spending > 1))
		(and	(goal gl-strategy skirm-boom)
			(players-unit-type-count focus-player archer-line > 7)))
	(unit-type-count-total skirmisher-line > 5)
	(research-available ri-elite-skirmisher)
=>
	(up-modify-goal gl-wood-gp-points c:+ 22)
	(up-modify-goal gl-gold-gp-points c:+ 12)
	(set-escrow-percentage wood 70)
	(set-escrow-percentage gold 70)
	(up-add-research-cost c: ri-elite-skirmisher c: -1)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending > 0)
		(goal gl-strategy skirm-boom))
	(or	(unit-type-count-total skirmisher-line >= relative-5-units)
		(or	(goal gl-advanced-trash YES)
			(or	(goal CASTLE 5)
				(goal CASTLE 9))))
	(can-research-with-escrow ri-elite-skirmisher)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-skirmisher)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(up-compare-goal gl-strategy != xbow-rush)
	(up-compare-goal gl-strategy != heavy-ranged-flush)
	(building-type-count farm > 16)
	(up-compare-goal gl-my-villager-count > 50)
	(or	(goal CASTLE 9)
		(unit-type-count spearman-line > 8))
	(research-available ri-pikeman)
	(building-type-count barracks > 0)
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 70)
	(up-add-research-cost c: ri-pikeman c: -1)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(or	(unit-type-count-total spearman-line >= relative-6-units)
		(or	(and	(goal gl-advanced-trash YES)
				(nor	(players-civ every-enemy mayan)
					(players-civ every-enemy aztec)))
			(goal CASTLE 9)))
	(can-research-with-escrow ri-pikeman)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-pikeman)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(cc-players-unit-type-count 0 gold-mine > 4)
	(or	(goal gl-advanced-trash YES)
		(or	(goal CASTLE 9)
			(unit-type-count-total spearman-line > 14)))
	(unit-type-count-total spearman-line > 5)
	(building-type-count barracks > 0)
	(research-available ri-halberdier)
=>
	(up-modify-goal gl-food-gp-points c:+ 6)
	(up-modify-goal gl-gold-gp-points c:+ 10)
	(set-escrow-percentage food 50)
	(set-escrow-percentage gold 70)
	(up-add-research-cost c: ri-halberdier c: -1)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(or	(unit-type-count-total spearman-line >= relative-6-units)
		(or	(goal CASTLE 1)
			(or	(goal CASTLE 9)
				(goal gl-advanced-trash YES))))
	(can-research-with-escrow ri-halberdier)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-halberdier)
)

#end-if

#load-if-not-defined KOREAN-CIV
(defrule
	(or	(and	(strategic-number sn-allow-resource-spending >= 0)
			(unit-type-count-total camel > 6))
		(or	(and	(strategic-number sn-allow-resource-spending > 4)
				(unit-type-count-total camel >= relative-4-units))
			(civ-selected indian)))
	(can-research ri-heavy-camel)
=>
	(research ri-heavy-camel)
)
#load-if-defined INDIAN-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(soldier-count > 40)
	(up-compare-goal gl-my-villager-count-total > 80)
	(unit-type-count-total camel-line > 12)
	(building-type-count stable > 0)
	(research-available ri-imperial-camel)
=>
	(up-modify-goal gl-food-gp-points c:+ 10)
	(up-modify-goal gl-gold-gp-points c:+ 7)
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 70)
	(up-add-research-cost c: ri-imperial-camel c: -1)
)

(defrule
	(can-research-with-escrow ri-imperial-camel)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-imperial-camel)
)
#end-if

#load-if-defined HUN-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(up-compare-goal gl-my-villager-count-total > 43)
	(or	(unit-type-count-total knight-line > 6)
		(unit-type-count-total cavalry-archer-line > 9))
	(building-type-count stable > 0)
	(research-available ri-bloodlines)
=>
	(up-modify-goal gl-food-gp-points c:+ 5)
	(up-modify-goal gl-gold-gp-points c:+ 4)
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 70)
	(up-add-research-cost c: ri-bloodlines c: -1)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total knight-line >= relative-5-units)
		(unit-type-count-total cavalry-archer-line >= relative-5-units))
	(can-research-with-escrow ri-bloodlines)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-bloodlines)
)
#end-if

#load-if-not-defined BYZANTINE-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total scout-cavalry-line >= relative-5-units)
		(or	(unit-type-count-total knight-line >= relative-5-units)
			(or	(unit-type-count-total cavalry-archer-line >= relative-5-units)
				(or	(unit-type-count-total mangudai-line >= relative-5-units)
					(unit-type-count-total conquistador-line >= relative-5-units)))))
	(can-research-with-escrow ri-bloodlines)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-bloodlines)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal gl-advanced-cavalry knight-CA)
		(or	(goal gl-advanced-cavalry heavy-knights)
			(and	(strategic-number sn-allow-resource-spending > 0)
				(unit-type-count-total camel-line >= relative-5-units))))
	(can-research-with-escrow ri-bloodlines)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-bloodlines)
)
#end-if
#end-if

(defrule
	(or	(up-research-status c: ri-loom >= research-pending)
		(gold-amount > 89))
	(or	(goal gl-advanced-infantry heavy-swordsmen)
		(or	(goal CASTLE 4)
			(unit-type-count-total militiaman-line > 2)))
	(or	(goal gl-eternal-drush YES)
		(or	(up-compare-goal gl-strategy-type <= controlled-flush)
			(up-compare-goal gl-current-age >= gv-feudal-up)))
	(up-research-status c: ri-wheel-barrow >= research-pending)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(current-age-time > 120)
	(building-type-count farm > 13)
	(or	(goal gl-advanced-infantry heavy-swordsmen)
		(or	(goal CASTLE 4)
			(unit-type-count-total militiaman-line > 8)))
	(building-type-count barracks > 0)
	(research-available ri-long-swordsman)
=>
	(up-modify-goal gl-food-gp-points c:+ 8)
	(up-modify-goal gl-gold-gp-points c:+ 6)
	(set-escrow-percentage food 50)
	(set-escrow-percentage gold 40)
	(up-add-research-cost c: ri-long-swordsman c: -1)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(or	(goal gl-advanced-infantry heavy-swordsmen)
		(or	(goal CASTLE 4)
			(unit-type-count-total militiaman-line > 6)))
	(can-research-with-escrow ri-long-swordsman)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-long-swordsman)
)

#load-if-not-defined HUN-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined PERSIAN-CIV
(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(building-type-count farm > 17)
	(or	(unit-type-count-total militiaman-line > 10)
		(or	(goal gl-advanced-infantry heavy-swordsmen)
			(goal CASTLE 4)))
	(building-type-count barracks > 0)
	(up-compare-goal gl-my-villager-count-total > 63)
	(research-available ri-two-handed-swordsman)
=>
	(up-modify-goal gl-food-gp-points c:+ 10)
	(up-modify-goal gl-gold-gp-points c:+ 6)
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-two-handed-swordsman c: -1)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(or	(goal gl-advanced-infantry heavy-swordsmen)
		(or	(goal CASTLE 4)
			(unit-type-count-total militiaman-line > 6)))
	(can-research-with-escrow ri-two-handed-swordsman)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-two-handed-swordsman)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(soldier-count > 50)
	(up-compare-goal gl-my-villager-count-total > 80)
	(building-type-count farm > 25)
	(or	(unit-type-count-total militiaman-line > 15)
		(or	(goal gl-advanced-infantry heavy-swordsmen)
			(goal CASTLE 4)))
	(building-type-count barracks > 0)
	(research-available ri-champion)
=>
	(up-modify-goal gl-food-gp-points c:+ 16)
	(up-modify-goal gl-gold-gp-points c:+ 9)
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-champion c: -1)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(or	(unit-type-count-total militiaman-line > 8)
		(or	(goal gl-advanced-infantry heavy-swordsmen)
			(goal CASTLE 4)))
	(can-research-with-escrow ri-champion)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-champion)
)
#end-if
#end-if
#end-if

(defrule
	(or	(and	(nor	(research-available ri-crossbow)
				(research-available ri-bodkin-arrow))
			(nor	(research-available ri-arbalest)
				(research-available ri-bracer)))
		(and	(research-completed ri-bracer)
			(and	(civ-selected aztec)
				(goal FFA YES))))
=>
	(up-jump-rule 10)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending <= 0)
		(or	(research-completed ri-bodkin-arrow)
			(and	(goal POSITION POCKET)
				(and	(game-time < 1800)
					(or	(up-compare-goal MILITARY != 1)
						(up-compare-goal gl-my-villager-count-total < 95))))))
=>
	(up-jump-rule 1)
)

#load-if-not-defined HUN-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total archer-line > 15)
		(or	(unit-type-count-total skirmisher-line > 15)
			(or	(goal gl-strategy xbow-boom)
				(goal gl-strategy skirm-boom))))
	(building-type-count farm > 15)
	(research-available ri-bodkin-arrow)
=>
	(set-escrow-percentage food 80)
	(set-escrow-percentage gold 80)
	(up-add-research-cost c: ri-bodkin-arrow c: -1)
)
#else
(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total archer-line > 15)
		(or	(unit-type-count-total cavalry-archer-line > 10)
			(or	(unit-type-count-total skirmisher-line > 15)
				(goal gl-strategy skirm-boom))))
	(building-type-count farm > 15)
	(research-available ri-bodkin-arrow)
=>
	(set-escrow-percentage food 80)
	(set-escrow-percentage gold 80)
	(up-add-research-cost c: ri-bodkin-arrow c: -1)
)
#end-if

(defrule
	(or	(strategic-number sn-allow-resource-spending > 0)
		(players-current-age every-enemy <= feudal-age))
	(or	(unit-type-count-total archer-line >= relative-5-units)
		(or	(and	(unit-type-count-total cavalry-archer-line >= relative-4-units)
				(civ-selected hun))
			(unit-type-count-total skirmisher-line >= relative-5-units)))
	(can-research-with-escrow ri-bodkin-arrow)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-bodkin-arrow)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total archer-line > 10)
		(or	(unit-type-count-total cavalry-archer-line > 8)
			(unit-type-count-total skirmisher-line > 10)))
	(research-available ri-bracer)
=>
	(up-modify-goal gl-food-gp-points c:+ 12)
	(up-modify-goal gl-gold-gp-points c:+ 7)
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 70)
	(up-add-research-cost c: ri-bracer c: -1)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total archer-line >= relative-6-units)
		(or	(unit-type-count-total cavalry-archer-line >= relative-6-units)
			(unit-type-count-total skirmisher-line >= relative-6-units)))
	(can-research-with-escrow ri-bracer)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-bracer)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total archer-line > 5)
		(or	(goal gl-advanced-archery heavy-archers)
			(and	(goal gl-strategy xbow-boom)
				(goal POSITION FLANK))))
	(unit-type-count-total archer-line > 0)
	(building-type-count archery-range > 0)
	(research-available ri-crossbow)
=>
	(set-escrow-percentage food 60)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-crossbow c: -1)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(or	(unit-type-count-total archer-line >= relative-6-units)
		(or	(goal gl-advanced-archery heavy-archers)
			(or	(goal gl-strategy xbow-rush)
				(goal gl-strategy xbow-boom))))
	(can-research-with-escrow ri-crossbow)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-crossbow)
)

(defrule
	(or	(goal gl-strategy xbow-rush)
		(or	(goal gl-strategy xbow-boom)
			(goal gl-strategy skirm-boom)))
	(can-research-with-escrow ri-bodkin-arrow)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-bodkin-arrow)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(building-type-count archery-range > 0)
	(unit-type-count-total archer-line > 5)
	(or	(unit-type-count-total archer-line > 13)
		(population >= pop-to-full-pop-attack))
	(research-available ri-arbalest)
=>
	(up-modify-goal gl-food-gp-points c:+ 10)
	(up-modify-goal gl-gold-gp-points c:+ 7)
	(set-escrow-percentage food 60)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-arbalest c: -1)
)

(defrule
	(unit-type-count-total archer-line > 0)
	(or	(unit-type-count-total archer-line > 13)
		(or	(goal gl-advanced-archery heavy-archers)
			(population >= pop-to-full-pop-attack)))
	(can-research-with-escrow ri-arbalest)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-arbalest)
)

#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined SARACEN-CIV
(defrule
	(goal gl-fixed-eco-balancing NO)
	(timer-triggered 3)
	(strategic-number sn-allow-resource-spending >= 0)
	(or	(unit-type-count-total knight-line > 6)
		(goal gl-advanced-cavalry heavy-knights))
	(unit-type-count-total knight-line > 0)
	(or	(research-available ri-cavalier)
		(research-available ri-paladin))
=>
	(up-modify-goal gl-food-gp-points c:+ 13)
	(up-modify-goal gl-gold-gp-points c:+ 8)
	(up-add-research-cost c: ri-paladin c: -1); This shall apply to cavalier as well
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(or	(unit-type-count-total knight-line >= relative-6-units)
		(or	(and	(food-amount > food-for-palas)
				(current-age-time > 60))
			(goal gl-advanced-cavalry heavy-knights)))
	(unit-type-count-total knight-line > 0)
	(or	(can-research-with-escrow ri-cavalier)
		(can-research-with-escrow ri-paladin))
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-cavalier)
	(research ri-paladin)
)

#load-if-defined PERSIAN-CIV
(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(goal gl-advanced-cavalry knight-LC)
	(or	(can-research-with-escrow ri-cavalier)
		(can-research-with-escrow ri-paladin))
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-cavalier)
	(research ri-paladin)
)
#end-if

#end-if
#end-if
#end-if

(defrule
	(or	(soldier-count >= escrow-UU-soldier)
		(population >= escrow-UU-pop))
	(civilian-population >= 85)
	(not	(town-under-attack))
	(unit-type-count-total my-unique-unit-line >= escrow-UU-count)
	(research-available my-unique-unit-upgrade)
=>
	(set-escrow-percentage escrow-UU-resource1 escrow-UU-resource1-count)
	(set-escrow-percentage escrow-UU-resource2 escrow-UU-resource2-count)
	(up-modify-goal gl-food-gp-points c:+ escrow-UU-food-points)
	(up-modify-goal gl-wood-gp-points c:+ escrow-UU-wood-points)
	(up-modify-goal gl-gold-gp-points c:+ escrow-UU-gold-points)
	(up-add-research-cost c: my-unique-unit-upgrade c: -1)
)

(defrule
	(up-compare-const escrow-UU-resource1-count > 0); Escrow may exist
	(unit-type-count-total my-unique-unit-line >= relative-6-units)
	(can-research-with-escrow my-unique-unit-upgrade)
=>
	(release-escrow escrow-UU-resource1)
	(release-escrow escrow-UU-resource2)
	(set-escrow-percentage escrow-UU-resource1 0)
	(set-escrow-percentage escrow-UU-resource2 0)
 	(research my-unique-unit-upgrade)
)

(defrule
	(or	(unit-type-count-total my-unique-unit-line > 8)
		(or	(up-compare-goal CASTLE != 0)
			(and	(unit-type-count-total my-unique-unit-line > 0)
				(population-cap < 65))))
	(can-research-with-escrow my-unique-unit-upgrade)
=>
	(release-escrow escrow-UU-resource1)
	(release-escrow escrow-UU-resource2)
	(set-escrow-percentage escrow-UU-resource1 0)
	(set-escrow-percentage escrow-UU-resource2 0)
 	(research my-unique-unit-upgrade)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending <= 0)
		(nor	(research-available ri-scale-mail)
			(or	(research-available ri-chain-mail)
				(research-available ri-plate-mail))))
=>
	(up-jump-rule 3)
)


(defrule
	(or	(and	(unit-type-count-total militiaman-line > relative-2-units)
			(or	(up-compare-goal gl-current-age >= gv-feudal-up)
				(research-completed ri-fletching)))
		(or	(and	(unit-type-count-total spearman-line > relative-6-units)
				(not	(research-available ri-pikeman)))
			(unit-type-count-total huskarl-line >= relative-6-units)))
=>
	(research ri-scale-mail)
)

(defrule
	(or	(and	(unit-type-count-total militiaman-line >= relative-10-units)
			(not	(research-available ri-long-swordsman)))
		(or	(and	(unit-type-count-total spearman-line > 12)
				(not	(research-available ri-pikeman)))
			(or	(unit-type-count-total eagle-warrior-line > 10)
				(and	(unit-type-count-total spearman-line >= relative-6-units)
					(current-age == imperial-age)))))
=>
	(research ri-chain-mail)
)

(defrule
	(or	(unit-type-count-total militiaman-line >= relative-6-units)
		(or	(unit-type-count-total eagle-warrior-line >= relative-6-units)
			(and	(unit-type-count-total spearman-line >= relative-6-units)
				(or	(and	(strategic-number sn-allow-resource-spending > 2)
						(current-age-time > 15))
					(research-completed ri-halberdier)))))
	(nand	(goal gl-strategy eew-strategy)
		(goal gl-eagles heavy-eagles))
=>
	(research ri-plate-mail)
)

#load-if-defined AZTEC-CIV
(defrule
	(or	(and	(goal CASTLE 0)
			(up-compare-goal gl-strategy != castle-push))
		(and	(research-completed ri-plate-mail)
			(and	(research-completed ri-blast-furnace)
				(and	(research-completed ri-squires)
					(research-completed ri-tracking)))))
=>
	(up-jump-rule 5)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 1))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-plate-mail)))
=>
	(up-jump-rule 2)
)

(defrule
	(unit-type-count-total jaguar-man-line > 12)
	(strategic-number sn-allow-resource-spending > 1)
	(building-type-count farm > 17)
	(up-compare-goal gl-my-villager-count-total > 50)
	(or	(research-available ri-scale-mail)
		(or	(research-available ri-chain-mail)
			(research-available ri-plate-mail)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-plate-mail c: -1)
)

(defrule
	(unit-type-count-total jaguar-man-line >= relative-4-units)
	(strategic-number sn-allow-resource-spending > 0)
	(or	(or	(can-research-with-escrow ri-scale-mail)
			(can-research-with-escrow ri-plate-mail))
		(and	(can-research-with-escrow ri-chain-mail)
			(strategic-number sn-allow-resource-spending > 1)))
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-scale-mail)
	(research ri-chain-mail)
	(research ri-plate-mail)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total jaguar-man-line >= relative-6-units)
	(or	(can-research ri-forging)
		(and	(or	(strategic-number sn-allow-resource-spending > 2)
				(and	(up-compare-goal gl-current-age <= gv-castle)
					(town-under-attack)))
			(or	(can-research ri-iron-casting)
				(can-research ri-blast-furnace))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 3)
	(research-completed ri-chain-mail)
	(not	(research-available ri-plate-mail))
	(unit-type-count-total jaguar-man-line >= relative-6-units)
	(or	(can-research ri-squires)
		(can-research ri-tracking))
=>
	(research ri-squires)
	(research ri-tracking)
)
#end-if

#load-if-defined CELTIC-CIV
(defrule
	(nor	(research-available ri-scale-mail)
		(research-available ri-chain-mail))
	(nor	(research-available ri-plate-mail)
		(research-available ri-squires))
	(nor	(research-available ri-forging)
		(research-available ri-iron-casting))
	(nor	(research-available ri-blast-furnace)
		(research-available ri-tracking))
=>
	(up-jump-rule 5)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 1))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-plate-mail)))
=>
	(up-jump-rule 2)
)

(defrule
	(unit-type-count-total woad-raider-line > 12)
	(strategic-number sn-allow-resource-spending > 1)
	(building-type-count farm > 17)
	(up-compare-goal gl-my-villager-count-total > 50)
	(or	(research-available ri-scale-mail)
		(or	(research-available ri-chain-mail)
			(research-available ri-plate-mail)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-plate-mail c: -1)
)

(defrule
	(unit-type-count-total woad-raider-line >= relative-4-units)
	(strategic-number sn-allow-resource-spending > 0)
	(or	(or	(can-research-with-escrow ri-scale-mail)
			(can-research-with-escrow ri-plate-mail))
		(can-research-with-escrow ri-chain-mail))
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-scale-mail)
	(research ri-chain-mail)
	(research ri-plate-mail)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total woad-raider-line >= relative-6-units)
	(or	(can-research ri-forging)
		(and	(or	(strategic-number sn-allow-resource-spending > 2)
				(and	(up-compare-goal gl-current-age <= gv-castle)
					(town-under-attack)))
			(or	(can-research ri-iron-casting)
				(can-research ri-blast-furnace))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 3)
	(research-completed ri-chain-mail)
	(not	(research-available ri-plate-mail))
	(unit-type-count-total woad-raider-line >= relative-6-units)
	(or	(can-research ri-squires)
		(can-research ri-tracking))
=>
	(research ri-squires)
	(research ri-tracking)
)
#end-if

#load-if-defined FRANKISH-CIV
(defrule
	(nor	(research-available ri-scale-mail)
		(research-available ri-chain-mail))
	(nor	(research-available ri-plate-mail)
		(research-available ri-squires))
	(nor	(research-available ri-forging)
		(research-available ri-iron-casting))
	(nor	(research-available ri-blast-furnace)
		(research-available ri-tracking))
=>
	(up-jump-rule 4)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 1))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-plate-mail)))
=>
	(up-jump-rule 1)
)

(defrule
	(unit-type-count-total throwing-axeman-line >= relative-4-units)
	(strategic-number sn-allow-resource-spending > 0)
	(or	(or	(can-research ri-scale-mail)
			(can-research ri-plate-mail))
		(and	(can-research ri-chain-mail)
			(strategic-number sn-allow-resource-spending > 1)))
=>
	(research ri-scale-mail)
	(research ri-chain-mail)
	(research ri-plate-mail)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total throwing-axeman-line >= relative-6-units)
	(or	(can-research ri-forging)
		(and	(or	(strategic-number sn-allow-resource-spending > 2)
				(and	(up-compare-goal gl-current-age <= gv-castle)
					(town-under-attack)))
			(or	(can-research ri-iron-casting)
				(can-research ri-blast-furnace))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 4)
	(research-completed ri-chain-mail)
	(not	(research-available ri-plate-mail))
	(unit-type-count-total throwing-axeman-line >= relative-6-units)
	(or	(can-research ri-squires)
		(can-research ri-tracking))
=>
	(research ri-squires)
	(research ri-tracking)
)
#end-if

#load-if-defined GOTHIC-CIV
(defrule
	(nor	(research-available ri-scale-mail)
		(research-available ri-chain-mail))
	(not	(research-available ri-squires))
	(nor	(research-available ri-forging)
		(research-available ri-iron-casting))
	(nor	(research-available ri-blast-furnace)
		(research-available ri-tracking))
=>
	(up-jump-rule 5)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 1))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-chain-mail)))
=>
	(up-jump-rule 2)
)

(defrule
	(unit-type-count-total huskarl-line > 12)
	(strategic-number sn-allow-resource-spending > 1)
	(building-type-count farm > 17)
	(up-compare-goal gl-my-villager-count-total > 50)
	(or	(research-available ri-scale-mail)
		(research-available ri-chain-mail))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-chain-mail c: -1)
)

(defrule
	(unit-type-count-total huskarl-line >= relative-4-units)
	(strategic-number sn-allow-resource-spending > 0)
	(or	(can-research-with-escrow ri-scale-mail)
		(and	(can-research-with-escrow ri-chain-mail)
			(strategic-number sn-allow-resource-spending > 1)))
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-scale-mail)
	(research ri-chain-mail)
)

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(unit-type-count-total huskarl-line >= relative-6-units)
	(or	(can-research ri-forging)
		(and	(or	(strategic-number sn-allow-resource-spending > 3)
				(and	(up-compare-goal gl-current-age <= gv-castle)
					(town-under-attack)))
			(or	(can-research ri-iron-casting)
				(can-research ri-blast-furnace))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(strategic-number sn-allow-resource-spending > 3)
		(and	(goal MILITARY 1)
			(and	(up-compare-goal gl-current-age <= gv-castle)
				(research-completed ri-forging))))
	(research-completed ri-chain-mail)
	(unit-type-count-total huskarl-line >= relative-6-units)
	(or	(can-research ri-squires)
		(can-research ri-tracking))
=>
	(research ri-squires)
	(research ri-tracking)
)
#end-if

#load-if-defined INCAN-CIV
(defrule
	(nor	(research-available ri-scale-mail)
		(research-available ri-chain-mail))
	(nor	(research-available ri-plate-mail)
		(research-available ri-squires))
	(nor	(research-available ri-forging)
		(research-available ri-iron-casting))
	(nor	(research-available ri-blast-furnace)
		(research-available ri-tracking))
=>
	(up-jump-rule 12)
)

(defrule
	(research-completed my-unique-unit-upgrade)
=>
	(up-jump-rule 5)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 1))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-plate-mail)))
=>
	(up-jump-rule 2)
)

(defrule
	(unit-type-count-total my-UU > 12)
	(strategic-number sn-allow-resource-spending > 1)
	(building-type-count farm > 17)
	(up-compare-goal gl-my-villager-count-total > 50)
	(or	(research-available ri-scale-mail)
		(or	(research-available ri-chain-mail)
			(research-available ri-plate-mail)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-plate-mail c: -1)
)

(defrule
	(unit-type-count-total my-UU >= relative-4-units)
	(strategic-number sn-allow-resource-spending > 0)
	(or	(or	(can-research-with-escrow ri-scale-mail)
			(can-research-with-escrow ri-plate-mail))
		(can-research-with-escrow ri-chain-mail))
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-scale-mail)
	(research ri-chain-mail)
	(research ri-plate-mail)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total my-UU >= relative-6-units)
	(or	(can-research ri-forging)
		(and	(or	(strategic-number sn-allow-resource-spending > 2)
				(and	(up-compare-goal gl-current-age <= gv-castle)
					(town-under-attack)))
			(or	(can-research ri-iron-casting)
				(can-research ri-blast-furnace))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(strategic-number sn-allow-resource-spending > 3)
		(and	(goal MILITARY 1)
			(and	(up-compare-goal gl-current-age <= gv-castle)
				(research-completed ri-forging))))
	(research-completed ri-chain-mail)
	(unit-type-count-total my-UU >= relative-6-units)
	(or	(can-research ri-squires)
		(can-research ri-tracking))
=>
	(research ri-squires)
	(research ri-tracking)
)

(defrule
	(not	(research-completed my-unique-unit-upgrade))
=>
	(up-jump-rule 4)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 1))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-plate-mail)))
=>
	(up-jump-rule 2)
)

(defrule
	(unit-type-count-total my-elite-UU > 12)
	(strategic-number sn-allow-resource-spending > 1)
	(building-type-count farm > 17)
	(up-compare-goal gl-my-villager-count-total > 50)
	(or	(research-available ri-scale-mail)
		(or	(research-available ri-chain-mail)
			(research-available ri-plate-mail)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-plate-mail c: -1)
)

(defrule
	(unit-type-count-total my-elite-UU >= relative-4-units)
	(strategic-number sn-allow-resource-spending > 0)
	(or	(or	(can-research-with-escrow ri-scale-mail)
			(can-research-with-escrow ri-plate-mail))
		(can-research-with-escrow ri-chain-mail))
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-scale-mail)
	(research ri-chain-mail)
	(research ri-plate-mail)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total my-elite-UU >= relative-6-units)
	(or	(can-research ri-forging)
		(and	(or	(strategic-number sn-allow-resource-spending > 2)
				(and	(up-compare-goal gl-current-age <= gv-castle)
					(town-under-attack)))
			(or	(can-research ri-iron-casting)
				(can-research ri-blast-furnace))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(strategic-number sn-allow-resource-spending > 3)
		(and	(goal MILITARY 1)
			(and	(up-compare-goal gl-current-age <= gv-castle)
				(research-completed ri-forging))))
	(research-completed ri-chain-mail)
	(unit-type-count-total my-elite-UU >= relative-6-units)
	(or	(can-research ri-squires)
		(can-research ri-tracking))
=>
	(research ri-squires)
	(research ri-tracking)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total slinger > 10)
	(or	(research-available ri-fletching)
		(or	(research-available ri-bodkin-arrow)
			(research-available ri-bracer)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-bracer c: -1)
)

(defrule
	(unit-type-count-total slinger >= relative-3-units)
	(or	(can-research-with-escrow ri-fletching)
		(and	(strategic-number sn-allow-resource-spending > 0)
			(or	(can-research-with-escrow ri-bodkin-arrow)
				(can-research-with-escrow ri-bracer))))
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research ri-fletching)
	(research ri-bodkin-arrow)
	(research ri-bracer)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total slinger >= relative-4-units)
	(or	(can-research ri-chemistry)
		(or	(can-research ri-padded-archer-armor)
			(and	(strategic-number sn-allow-resource-spending > 2)
				(or	(can-research ri-leather-archer-armor)
					(can-research ri-ring-archer-armor)))))
=>
	(research ri-chemistry)
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
	(research ri-ring-archer-armor)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending > 2)
		(goal MILITARY 1))
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total slinger >= relative-6-units)
	(or	(can-research ri-ballistics)
		(can-research ri-thumb-ring))
=>
	(research ri-ballistics)
	(research ri-thumb-ring)
)
#end-if

#load-if-defined JAPANESE-CIV
(defrule
	(nor	(research-available ri-scale-mail)
		(research-available ri-chain-mail))
	(nor	(research-available ri-plate-mail)
		(research-available ri-squires))
	(nor	(research-available ri-forging)
		(research-available ri-iron-casting))
	(nor	(research-available ri-blast-furnace)
		(research-available ri-tracking))
=>
	(up-jump-rule 5)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 1))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-plate-mail)))
=>
	(up-jump-rule 2)
)

(defrule
	(unit-type-count-total samurai-line > 12)
	(strategic-number sn-allow-resource-spending > 1)
	(building-type-count farm > 17)
	(up-compare-goal gl-my-villager-count-total > 50)
	(or	(research-available ri-scale-mail)
		(or	(research-available ri-chain-mail)
			(research-available ri-plate-mail)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-plate-mail c: -1)
)

(defrule
	(unit-type-count-total samurai-line >= relative-4-units)
	(strategic-number sn-allow-resource-spending > 0)
	(or	(or	(can-research-with-escrow ri-scale-mail)
			(can-research-with-escrow ri-plate-mail))
		(can-research-with-escrow ri-chain-mail))
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-scale-mail)
	(research ri-chain-mail)
	(research ri-plate-mail)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total samurai-line >= relative-6-units)
	(or	(can-research ri-forging)
		(and	(or	(strategic-number sn-allow-resource-spending > 2)
				(and	(up-compare-goal gl-current-age <= gv-castle)
					(town-under-attack)))
			(or	(can-research ri-iron-casting)
				(can-research ri-blast-furnace))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(strategic-number sn-allow-resource-spending > 3)
		(and	(goal MILITARY 1)
			(and	(up-compare-goal gl-current-age <= gv-castle)
				(research-completed ri-forging))))
	(research-completed ri-chain-mail)
	(unit-type-count-total samurai-line >= relative-6-units)
	(or	(can-research ri-squires)
		(can-research ri-tracking))
=>
	(research ri-squires)
	(research ri-tracking)
)
#end-if

#load-if-defined MAGYAR-CIV
(defrule
	(research-completed my-unique-unit-upgrade)
=>
	(up-jump-rule 4)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total my-UU >= relative-4-units)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(goal CASTLE 2)))
	(or	(or	(can-research ri-scale-barding)
			(can-research ri-plate-barding))
		(and	(can-research ri-chain-barding)
			(strategic-number sn-allow-resource-spending > 1)))
=>
	(research ri-scale-barding)
	(research ri-chain-barding)
	(research ri-plate-barding)
)

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(unit-type-count-total my-UU >= relative-6-units)
	(or	(can-research ri-forging)
		(and	(strategic-number sn-allow-resource-spending > 3)
			(or	(can-research ri-iron-casting)
				(can-research ri-blast-furnace))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total my-UU >= relative-6-units)
	(or	(and	(can-research ri-husbandry)
			(and	(strategic-number sn-allow-resource-spending > 4)
				(research-completed ri-chain-barding)))
		(can-research ri-bloodlines))
=>
	(research ri-bloodlines)
	(research ri-husbandry)
)

(defrule
	(not	(research-completed my-unique-unit-upgrade))
=>
	(up-jump-rule 3)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total my-elite-UU >= relative-4-units)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(goal CASTLE 2)))
	(or	(or	(can-research ri-scale-barding)
			(can-research ri-plate-barding))
		(and	(can-research ri-chain-barding)
			(strategic-number sn-allow-resource-spending > 1)))
=>
	(research ri-scale-barding)
	(research ri-chain-barding)
	(research ri-plate-barding)
)

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(unit-type-count-total my-elite-UU >= relative-6-units)
	(or	(can-research ri-forging)
		(and	(strategic-number sn-allow-resource-spending > 3)
			(or	(can-research ri-iron-casting)
				(can-research ri-blast-furnace))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total my-elite-UU >= relative-6-units)
	(or	(and	(can-research ri-husbandry)
			(and	(strategic-number sn-allow-resource-spending > 4)
				(research-completed ri-chain-barding)))
		(can-research ri-bloodlines))
=>
	(research ri-bloodlines)
	(research ri-husbandry)
)
#end-if

#load-if-defined PERSIAN-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total war-elephant-line >= relative-3-units)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(goal CASTLE 2)))
	(or	(or	(can-research ri-scale-barding)
			(can-research ri-plate-barding))
		(and	(can-research ri-chain-barding)
			(strategic-number sn-allow-resource-spending > 1)))
=>
	(research ri-scale-barding)
	(research ri-chain-barding)
	(research ri-plate-barding)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total war-elephant-line >= relative-5-units)
	(research-completed ri-chain-barding)
	(or	(can-research ri-forging)
		(or	(can-research ri-iron-casting)
			(can-research ri-blast-furnace)))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total war-elephant-line >= relative-4-units)
	(or	(and	(can-research ri-husbandry)
			(and	(strategic-number sn-allow-resource-spending > 4)
				(research-completed ri-chain-barding)))
		(or	(can-research ri-bloodlines)
			(can-research my-unique-research)))
=>
	(research ri-bloodlines)
	(research ri-husbandry)
	(research my-unique-research)
)
#end-if

#load-if-defined SARACEN-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total mameluke-line >= relative-4-units)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(goal CASTLE 2)))
	(or	(or	(can-research ri-scale-barding)
			(can-research ri-plate-barding))
		(can-research ri-chain-barding))
=>
	(research ri-scale-barding)
	(research ri-chain-barding)
	(research ri-plate-barding)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(or	(unit-type-count-total mameluke-line >= relative-4-units)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(goal CASTLE 2)))
	(or	(can-research ri-forging)
		(and	(strategic-number sn-allow-resource-spending > 2)
			(or	(can-research ri-iron-casting)
				(can-research ri-blast-furnace))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total mameluke-line >= relative-3-units)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(goal CASTLE 2)))
	(or	(and	(can-research ri-husbandry)
			(and	(strategic-number sn-allow-resource-spending > 4)
				(research-completed ri-chain-barding)))
		(can-research ri-bloodlines))
=>
	(research ri-bloodlines)
	(research ri-husbandry)
)
#end-if

#load-if-defined SLAVIC-CIV
(defrule
	(research-completed my-unique-unit-upgrade)
=>
	(up-jump-rule 4)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total my-UU >= relative-4-units)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(goal CASTLE 2)))
	(or	(or	(can-research ri-scale-barding)
			(can-research ri-plate-barding))
		(can-research ri-chain-barding))
=>
	(research ri-scale-barding)
	(research ri-chain-barding)
	(research ri-plate-barding)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total my-UU >= relative-6-units)
	(or	(can-research ri-forging)
		(and	(strategic-number sn-allow-resource-spending > 2)
			(or	(can-research ri-iron-casting)
				(can-research ri-blast-furnace))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total my-UU >= relative-6-units)
	(or	(and	(can-research ri-husbandry)
			(and	(strategic-number sn-allow-resource-spending > 4)
				(research-completed ri-chain-barding)))
		(can-research ri-bloodlines))
=>
	(research ri-bloodlines)
	(research ri-husbandry)
)

(defrule
	(not	(research-completed my-unique-unit-upgrade))
=>
	(up-jump-rule 3)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total my-elite-UU >= relative-4-units)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(goal CASTLE 2)))
	(or	(or	(can-research ri-scale-barding)
			(can-research ri-plate-barding))
		(and	(can-research ri-chain-barding)
			(strategic-number sn-allow-resource-spending > 1)))
=>
	(research ri-scale-barding)
	(research ri-chain-barding)
	(research ri-plate-barding)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total my-elite-UU >= relative-6-units)
	(or	(can-research ri-forging)
		(and	(strategic-number sn-allow-resource-spending > 2)
			(or	(can-research ri-iron-casting)
				(can-research ri-blast-furnace))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total my-elite-UU >= relative-6-units)
	(or	(and	(can-research ri-husbandry)
			(and	(strategic-number sn-allow-resource-spending > 4)
				(research-completed ri-chain-barding)))
		(can-research ri-bloodlines))
=>
	(research ri-bloodlines)
	(research ri-husbandry)
)
#end-if

#load-if-defined TEUTONIC-CIV
(defrule
	(nor	(research-available ri-scale-mail)
		(research-available ri-chain-mail))
	(nor	(research-available ri-plate-mail)
		(research-available ri-squires))
	(nor	(research-available ri-forging)
		(research-available ri-iron-casting))
	(nor	(research-available ri-blast-furnace)
		(research-available ri-tracking))
=>
	(up-jump-rule 5)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 1))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-plate-mail)))
=>
	(up-jump-rule 2)
)

(defrule
	(unit-type-count-total teutonic-knight-line > 10)
	(strategic-number sn-allow-resource-spending > 1)
	(building-type-count farm > 17)
	(up-compare-goal gl-my-villager-count-total > 50)
	(or	(research-available ri-scale-mail)
		(or	(research-available ri-chain-mail)
			(research-available ri-plate-mail)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-plate-mail c: -1)
)

(defrule
	(unit-type-count-total teutonic-knight-line >= relative-4-units)
	(strategic-number sn-allow-resource-spending > 0)
	(or	(or	(can-research-with-escrow ri-scale-mail)
			(can-research-with-escrow ri-plate-mail))
		(can-research-with-escrow ri-chain-mail))
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-scale-mail)
	(research ri-chain-mail)
	(research ri-plate-mail)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total teutonic-knight-line >= relative-6-units)
	(or	(can-research ri-forging)
		(and	(or	(strategic-number sn-allow-resource-spending > 2)
				(and	(up-compare-goal gl-current-age <= gv-castle)
					(town-under-attack)))
			(or	(can-research ri-iron-casting)
				(can-research ri-blast-furnace))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(strategic-number sn-allow-resource-spending > 3)
		(and	(goal MILITARY 1)
			(and	(up-compare-goal gl-current-age <= gv-castle)
				(research-completed ri-forging))))
	(research-completed ri-chain-mail)
	(unit-type-count-total teutonic-knight-line >= relative-6-units)
	(or	(can-research ri-squires)
		(can-research ri-tracking))
=>
	(research ri-squires)
	(research ri-tracking)
)
#end-if

#load-if-defined VIKING-CIV
(defrule
	(unit-type-count-total berserk-line > 12)
	(strategic-number sn-allow-resource-spending > 1)
	(building-type-count farm > 17)
	(up-compare-goal gl-my-villager-count-total > 50)
	(or	(research-available ri-scale-mail)
		(or	(research-available ri-chain-mail)
			(research-available ri-plate-mail)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-plate-mail c: -1)
)

(defrule
	(unit-type-count-total berserk-line >= relative-4-units)
	(strategic-number sn-allow-resource-spending > 0)
	(or	(or	(can-research-with-escrow ri-scale-mail)
			(can-research-with-escrow ri-plate-mail))
		(can-research-with-escrow ri-chain-mail))
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-scale-mail)
	(research ri-chain-mail)
	(research ri-plate-mail)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total berserk-line >= relative-6-units)
	(or	(can-research ri-forging)
		(and	(or	(strategic-number sn-allow-resource-spending > 2)
				(and	(up-compare-goal gl-current-age <= gv-castle)
					(town-under-attack)))
			(or	(can-research ri-iron-casting)
				(can-research ri-blast-furnace))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(strategic-number sn-allow-resource-spending > 3)
		(and	(goal MILITARY 1)
			(and	(up-compare-goal gl-current-age <= gv-castle)
				(research-completed ri-forging))))
	(research-completed ri-chain-mail)
	(unit-type-count-total berserk-line >= relative-6-units)
	(or	(can-research ri-squires)
		(can-research ri-tracking))
=>
	(research ri-squires)
	(research ri-tracking)
)
#end-if

#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(or	(up-compare-goal gl-current-age >= gv-feudal-up)
		(up-compare-const gv-feudal-age-end == 1))
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total scout-cavalry-line >= relative-5-units)
		(or	(unit-type-count-total camel-line >= relative-5-units)
			(or	(unit-type-count-total cataphract-line >= relative-3-units)
				(or	(unit-type-count-total knight-line >= relative-5-units)
					(research-completed ri-paladin)))))
=>
	(research ri-scale-barding)
	(research ri-plate-barding)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(or	(unit-type-count-total scout-cavalry-line >= relative-5-units)
		(or	(unit-type-count-total camel-line >= relative-5-units)
			(or	(unit-type-count-total cataphract-line >= relative-3-units)
				(or	(unit-type-count-total knight-line >= relative-5-units)
					(research-completed ri-paladin)))))
	(can-research ri-chain-barding)
=>
	(research ri-chain-barding)
)
#end-if
#end-if

#load-if-defined INDIAN-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total camel-line >= relative-5-units)
	(up-research-status c: ri-chain-barding >= research-pending)
	(or	(can-research ri-forging)
		(or	(can-research ri-iron-casting)
			(and	(can-research ri-blast-furnace)
				(and	(up-research-status c: ri-plate-barding >= research-pending)
					(up-research-status c: ri-heavy-camel >= research-pending)))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(research-completed ri-imperial-camel)
	(or	(can-research ri-scale-barding)
		(or	(can-research ri-chain-barding)
			(can-research ri-plate-barding)))
=>
	(research ri-scale-barding)
	(research ri-chain-barding)
	(research ri-plate-barding)
)
#end-if

(defrule
	(or	(and	(strategic-number sn-allow-resource-spending > 2)
			(up-compare-goal gl-current-age >= gv-feudal-up))
		(up-compare-const gv-feudal-age-end == 1))
	(or	(unit-type-count-total militiaman-line >= relative-6-units)
		(or	(or	(unit-type-count-total spearman-line > 20)
				(and	(unit-type-count-total spearman-line >= relative-6-units)
					(food-amount > 1200)))
			(unit-type-count-total huskarl-line >= relative-6-units)))
	(can-research ri-forging)
=>
	(research ri-forging)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending > 2)
		(and	(unit-type-count-total eagle-warrior-line > 24)
			(current-age == castle-age)))
	(or	(unit-type-count-total militiaman-line >= relative-6-units)
		(or	(or	(unit-type-count-total spearman-line > 20)
				(and	(unit-type-count-total spearman-line >= relative-6-units)
					(food-amount > 1250)))
			(unit-type-count-total eagle-warrior-line >= relative-6-units)))
	(can-research ri-iron-casting)
=>
	(research ri-iron-casting)
)

(defrule
	(strategic-number sn-allow-resource-spending > 3)
	(or	(unit-type-count-total militiaman-line >= relative-6-units)
		(or	(unit-type-count-total spearman-line > 25)
			(and	(unit-type-count-total spearman-line >= relative-6-units)
				(food-amount > 1300))))
	(nand	(research-available ri-plate-mail)
		(not	(research-completed ri-plate-mail)))
	(can-research ri-blast-furnace)
=>
	(research ri-blast-furnace)
)

#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined BYZANTINE-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(unit-type-count-total scout-cavalry-line >= relative-5-units)
		(or	(unit-type-count-total camel-line >= relative-5-units)
			(unit-type-count-total knight-line >= relative-5-units)))
	(or	(can-research ri-forging)
		(or	(and	(can-research ri-iron-casting)
				(research-completed ri-chain-barding))
			(can-research ri-blast-furnace)))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
)
#else
(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(unit-type-count-total scout-cavalry-line >= relative-5-units)
		(or	(unit-type-count-total camel-line >= relative-5-units)
			(or	(unit-type-count-total cataphract-line >= relative-5-units)
				(unit-type-count-total knight-line >= relative-5-units))))
	(or	(can-research ri-forging)
		(and	(can-research ri-iron-casting)
			(research-completed ri-chain-barding)))
=>
	(research ri-forging)
	(research ri-iron-casting)
)
#end-if
#end-if
#end-if

(defrule
	(strategic-number sn-allow-resource-spending > 5)
	(current-age == imperial-age)
	(or	(building-type-count-total bombard-tower > 3)
		(building-type-count-total castle > 3))
	(or	(can-research ri-fletching)
		(or	(can-research ri-bodkin-arrow)
			(or	(can-research ri-bracer)
				(can-research ri-ballistics))))
=>
	(research ri-fletching)
	(research ri-bodkin-arrow)
	(research ri-bracer)
	(research ri-ballistics)
)

(defrule
	(up-compare-goal gl-strategy != heavy-krush)
	(up-compare-goal gl-strategy != gothic-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(and	(town-under-attack)
			(and	(timer-triggered 9)
				(and	(players-military-population any-enemy > 10)
					(soldier-count < 7))))
		(or	(goal gl-strategy xbow-boom)
			(goal gl-strategy skirm-boom)))
	(can-research ri-fletching)
=>
	(research ri-fletching)
)

(defrule
	(or	(unit-type-count-total archer-line >= relative-6-units)
		(or	(unit-type-count-total skirmisher-line >= relative-6-units)
			(or	(and	(goal gl-strategy korean-boom)
					(up-compare-goal gl-current-age >= gv-feudal-up))
				(or	(up-compare-goal gl-feudal-archery > 0)
					(goal gl-feudal-trash YES)))))
	(can-research-with-escrow ri-fletching)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-fletching)
)

(defrule
	(or	(up-compare-goal gl-current-age >= gv-feudal-up)
		(goal gl-strategy fi-archer-flush))
	(or	(goal gl-advanced-cavalry knight-CA)
		(or	(unit-type-count-total cavalry-archer-line >= relative-2-units)
			(or	(goal gl-strategy CA-boom)
				(or	(goal gl-strategy xbow-rush)
					(goal gl-strategy fi-archer-flush)))))
	(can-research-with-escrow ri-fletching)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-fletching)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending > 1)
		(unit-type-count-total galley-line >= relative-6-units))
	(or	(unit-type-count-total archer-line >= relative-6-units)
		(or	(unit-type-count-total galley-line >= relative-6-units)
			(or	(unit-type-count-total skirmisher-line >= relative-6-units)
				(unit-type-count-total cavalry-archer-line >= relative-6-units))))
	(or	(can-research ri-ballistics)
		(can-research ri-chemistry))
=>
	(research ri-ballistics)
	(research ri-chemistry)
)

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(unit-type-count-total archer-line > 17)
		(or	(unit-type-count-total cavalry-archer-line > 15)
			(or	(unit-type-count-total skirmisher-line > 15)
				(goal CASTLE 8))))
	(building-type-count university > 0)
	(research-available ri-chemistry)
=>
	(set-escrow-percentage food 30)
	(set-escrow-percentage gold 30)
	(up-add-research-cost c: ri-chemistry c: -1)
)

(defrule
	(or	(unit-type-count-total archer-line >= relative-6-units)
		(or	(unit-type-count-total skirmisher-line >= relative-6-units)
			(or	(goal CASTLE 8)
				(and	(strategic-number sn-allow-resource-spending > 5)
					(food-amount > 1500)))))
	(can-research-with-escrow ri-chemistry)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-chemistry)
)

(defrule
	(population-cap < 200)
	(or	(can-research-with-escrow ri-chemistry)
		(or	(can-research-with-escrow ri-ballistics)
			(can-research-with-escrow ri-murder-holes)))
=>
	(release-escrow food)
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(research ri-ballistics)
	(research ri-chemistry)
	(research ri-murder-holes)
)

#load-if-defined HUN-CIV
(defrule
	(or	(strategic-number sn-allow-resource-spending > 2)
		(or	(up-compare-goal gl-current-age >= gv-castle-up)
			(or	(goal MILITARY 1)
				(and	(timer-triggered 9)
					(town-under-attack)))))
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total cavalry-archer-line >= relative-6-units)
	(or	(can-research ri-parthian-tactics)
		(can-research ri-thumb-ring))
=>
	(research ri-parthian-tactics)
	(research ri-thumb-ring)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(unit-type-count-total cavalry-archer-line > 19)
	(cc-players-unit-type-count 0 gold-mine > 2)
	(research-available ri-heavy-cavalry-archer)
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 70)
	(up-add-research-cost c: ri-heavy-cavalry-archer c: -1)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(or	(unit-type-count-total cavalry-archer-line >= relative-6-units)
		(population > almost-full-pop))
	(or	(can-research-with-escrow ri-heavy-cavalry-archer)
		(can-research-with-escrow ri-chemistry))
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-chemistry)
	(research ri-heavy-cavalry-archer)
)
#end-if

(defrule
	(nor	(goal gl-advanced-archery CAs)
		(goal gl-strategy sling))
=>
	(up-jump-rule 5)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending > 2)
		(and	(up-compare-goal gl-current-age >= gv-castle-up)
			(strategic-number sn-allow-resource-spending > 1)))
	(goal gl-advanced-archery CAs)
	(unit-type-count-total cavalry-archer-line >= relative-6-units)
	(or	(can-research ri-parthian-tactics)
		(can-research ri-thumb-ring))
=>
	(research ri-parthian-tactics)
	(research ri-thumb-ring)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(cc-players-unit-type-count 0 gold-mine > 2)
	(goal gl-advanced-archery CAs)
	(unit-type-count-total cavalry-archer-line > 19)
	(research-available ri-heavy-cavalry-archer)
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 70)
	(up-add-research-cost c: ri-heavy-cavalry-archer c: -1)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(goal gl-advanced-archery CAs)
	(or	(unit-type-count-total cavalry-archer-line >= relative-6-units)
		(population > almost-full-pop))
	(or	(can-research-with-escrow ri-heavy-cavalry-archer)
		(can-research-with-escrow ri-chemistry))
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-chemistry)
	(research ri-heavy-cavalry-archer)
)

(defrule
	(or	(and	(goal gl-advanced-archery CAs)
			(and	(strategic-number sn-allow-resource-spending > 0)
				(unit-type-count-total cavalry-archer-line > 0)))
		(and	(goal gl-strategy sling)
			(and	(game-time > 1500)
				(and	(building-type-count-total watch-tower > 2)
					(can-research ri-fletching)))))
=>
	(research ri-bloodlines)
	(research ri-fletching)
	(research ri-bodkin-arrow)
)

(defrule
	(goal gl-advanced-archery CAs)
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total cavalry-archer-line > 0)
=>
	(research ri-bracer)
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
	(research ri-ring-archer-armor)
	(research ri-parthian-tactics)
	(research ri-thumb-ring)
	(research ri-ballistics)
	(research ri-chemistry)
)

#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(or	(goal gl-advanced-archery heavy-cannoneers)
		(or	(goal gl-advanced-archery light-cannoneers)
			(or	(and	(goal MILITARY 1)
					(or	(strategic-number sn-minimum-water-body-size-for-dock == 1999)
						(strategic-number sn-minimum-water-body-size-for-dock == 2001)))
				(unit-type-count-total scorpion-line > relative-10-units))))
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)
#end-if

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(or	(and	(or	(goal gl-strategy xbow-rush)
				(strategic-number sn-allow-resource-spending > 2))
			(unit-type-count-total archer-line >= relative-6-units))
		(and	(or	(strategic-number sn-allow-resource-spending > 5)
				(and	(game-time > 3600)
					(gold-amount < 100)))
			(unit-type-count-total skirmisher-line > 18)))
	(can-research ri-thumb-ring)
=>
	(research ri-thumb-ring)
)
#end-if

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(or	(and	(research-completed ri-bodkin-arrow)
			(or	(unit-type-count-total cavalry-archer-line >= relative-6-units)
				(unit-type-count-total mangudai-line >= relative-6-units)))
		(and	(goal gl-strategy turkish-fast-imp)
			(up-compare-goal gl-current-age >= gv-castle-up)))
	(or	(can-research ri-padded-archer-armor)
		(can-research ri-leather-archer-armor))
=>
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total hand-cannoneer >= relative-5-units)
		(and	(research-completed ri-fletching)
			(or	(unit-type-count-total skirmisher-line >= relative-5-units)
				(and	(unit-type-count-total archer-line >= relative-5-units)
					(nor	(research-available ri-crossbow)
						(research-available ri-bodkin-arrow))))))
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(or	(unit-type-count-total hand-cannoneer >= relative-5-units)
		(research-completed ri-bodkin-arrow))
	(or	(unit-type-count-total archer-line >= relative-5-units)
		(or	(unit-type-count-total skirmisher-line >= relative-5-units)
			(unit-type-count-total hand-cannoneer >= relative-5-units)))
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(nand	(research-available ri-bracer)
		(or	(goal gl-strategy xbow-rush)
			(goal gl-strategy fi-archer-flush)))
	(strategic-number sn-allow-resource-spending > 2)
	(or	(unit-type-count-total archer-line >= relative-6-units)
		(or	(unit-type-count-total skirmisher-line >= relative-6-units)
			(unit-type-count-total hand-cannoneer >= relative-6-units)))
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(unit-type-count-total galley-line >= relative-4-units)
	(or	(can-research ri-fletching)
		(or	(and	(can-research ri-bodkin-arrow)
				(up-research-status c: ri-war-galley >= research-pending))
			(or	(can-research ri-bracer)
				(and	(can-research ri-chemistry)
					(strategic-number sn-allow-resource-spending > 3)))))
=>
	(research ri-fletching)
	(research ri-bodkin-arrow)
	(research ri-bracer)
	(research ri-chemistry)
)

#load-if-defined BRITON-CIV
(defrule
	(nor	(research-available ri-fletching)
		(research-available ri-bodkin-arrow))
	(nor	(research-available ri-bracer)
		(research-available ri-chemistry))
	(nor	(research-available ri-padded-archer-armor)
		(research-available ri-leather-archer-armor))
	(nor	(research-available ri-ring-archer-armor)
		(research-available ri-ballistics))
	(not	(research-available ri-thumb-ring))
=>
	(up-jump-rule 5)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 0))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-bracer)))
=>
	(up-jump-rule 2)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total longbowman-line > 10)
	(or	(town-under-attack)
		(or	(goal MILITARY 1)
			(strategic-number sn-allow-resource-spending > 1)))
	(or	(research-available ri-fletching)
		(or	(research-available ri-bodkin-arrow)
			(research-available ri-bracer)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-bracer c: -1)
)

(defrule
	(unit-type-count-total longbowman-line > 0)
	(or	(can-research-with-escrow ri-fletching)
		(and	(strategic-number sn-allow-resource-spending > 0)
			(or	(can-research-with-escrow ri-bodkin-arrow)
				(can-research-with-escrow ri-bracer))))
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research ri-fletching)
	(research ri-bodkin-arrow)
	(research ri-bracer)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total longbowman-line >= relative-4-units)
	(or	(can-research ri-chemistry)
		(or	(can-research ri-padded-archer-armor)
			(and	(strategic-number sn-allow-resource-spending > 2)
				(or	(can-research ri-leather-archer-armor)
					(can-research ri-ring-archer-armor)))))
=>
	(research ri-chemistry)
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
	(research ri-ring-archer-armor)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total longbowman-line >= relative-6-units)
	(can-research ri-ballistics)
=>
	(research ri-ballistics)
)
#end-if

#load-if-defined CHINESE-CIV
(defrule
	(nor	(research-available ri-fletching)
		(research-available ri-bodkin-arrow))
	(nor	(research-available ri-bracer)
		(research-available ri-chemistry))
	(nor	(research-available ri-padded-archer-armor)
		(research-available ri-leather-archer-armor))
	(nor	(research-available ri-ring-archer-armor)
		(research-available ri-ballistics))
	(not	(research-available ri-thumb-ring))
=>
	(up-jump-rule 5)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 0))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-bracer)))
=>
	(up-jump-rule 2)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total chu-ko-nu-line > 10)
	(or	(town-under-attack)
		(or	(goal MILITARY 1)
			(strategic-number sn-allow-resource-spending > 1)))
	(or	(research-available ri-fletching)
		(or	(research-available ri-bodkin-arrow)
			(research-available ri-bracer)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-bracer c: -1)
)

(defrule
	(unit-type-count-total chu-ko-nu-line > 0)
	(or	(can-research-with-escrow ri-fletching)
		(and	(strategic-number sn-allow-resource-spending > 0)
			(or	(can-research-with-escrow ri-bodkin-arrow)
				(can-research-with-escrow ri-bracer))))
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research ri-fletching)
	(research ri-bodkin-arrow)
	(research ri-bracer)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total chu-ko-nu-line >= relative-4-units)
	(or	(can-research ri-chemistry)
		(or	(can-research ri-padded-archer-armor)
			(and	(strategic-number sn-allow-resource-spending > 2)
				(or	(can-research ri-leather-archer-armor)
					(can-research ri-ring-archer-armor)))))
=>
	(research ri-chemistry)
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
	(research ri-ring-archer-armor)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total chu-ko-nu-line >= relative-6-units)
	(or	(can-research ri-ballistics)
		(can-research ri-thumb-ring))
=>
	(research ri-ballistics)
	(research ri-thumb-ring)
)
#end-if

#load-if-defined INDIAN-CIV
(defrule
	(research-completed ri-fletching)
	(research-completed ri-bodkin-arrow)
	(research-completed ri-bloodlines)
	(nor	(research-available ri-bracer)
		(research-available ri-chemistry))
	(nor	(research-available ri-padded-archer-armor)
		(research-available ri-leather-archer-armor))
	(nor	(research-available ri-parthian-tactics)
		(research-available ri-ballistics))
	(nor	(research-available ri-thumb-ring)
		(research-available ri-husbandry))
=>
	(up-jump-rule 14)
)

(defrule
	(research-completed my-unique-unit-upgrade)
=>
	(up-jump-rule 6)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 0))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-bracer)))
=>
	(up-jump-rule 2)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total my-UU > 8)
	(or	(town-under-attack)
		(or	(goal MILITARY 1)
			(strategic-number sn-allow-resource-spending > 1)))
	(or	(research-available ri-fletching)
		(or	(research-available ri-bodkin-arrow)
			(research-available ri-bracer)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-bracer c: -1)
)

(defrule
	(unit-type-count-total my-UU > 0)
	(or	(can-research-with-escrow ri-fletching)
		(and	(strategic-number sn-allow-resource-spending > 0)
			(or	(can-research-with-escrow ri-bodkin-arrow)
				(can-research-with-escrow ri-bracer))))
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research ri-fletching)
	(research ri-bodkin-arrow)
	(research ri-bracer)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total my-UU >= relative-4-units)
	(or	(can-research ri-chemistry)
		(or	(can-research ri-padded-archer-armor)
			(and	(strategic-number sn-allow-resource-spending > 2)
				(or	(can-research ri-leather-archer-armor)
					(can-research ri-ring-archer-armor)))))
=>
	(research ri-chemistry)
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
	(research ri-ring-archer-armor)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total my-UU >= relative-5-units)
	(or	(or	(can-research ri-ballistics)
			(can-research ri-thumb-ring))
		(and	(strategic-number sn-allow-resource-spending > 3)
			(can-research ri-husbandry)))
=>
	(research ri-ballistics)
	(research ri-thumb-ring)
	(research ri-husbandry)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending > 1)
		(goal MILITARY 1))
	(strategic-number sn-allow-resource-spending > 0)
	(or	(can-research ri-parthian-tactics)
		(can-research ri-bloodlines))
	(unit-type-count-total my-UU >= relative-5-units)
=>
	(research ri-parthian-tactics)
	(research ri-bloodlines)
)

(defrule
	(not	(research-completed my-unique-unit-upgrade))
=>
	(up-jump-rule 5)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 0))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-bracer)))
=>
	(up-jump-rule 2)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total my-elite-UU > 8)
	(or	(town-under-attack)
		(or	(goal MILITARY 1)
			(strategic-number sn-allow-resource-spending > 1)))
	(or	(research-available ri-fletching)
		(or	(research-available ri-bodkin-arrow)
			(research-available ri-bracer)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-bracer c: -1)
)

(defrule
	(unit-type-count-total my-elite-UU > 0)
	(or	(can-research-with-escrow ri-fletching)
		(and	(strategic-number sn-allow-resource-spending > 0)
			(or	(can-research-with-escrow ri-bodkin-arrow)
				(can-research-with-escrow ri-bracer))))
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research ri-fletching)
	(research ri-bodkin-arrow)
	(research ri-bracer)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total my-elite-UU >= relative-4-units)
	(or	(can-research ri-chemistry)
		(or	(can-research ri-padded-archer-armor)
			(and	(strategic-number sn-allow-resource-spending > 2)
				(or	(can-research ri-leather-archer-armor)
					(can-research ri-ring-archer-armor)))))
=>
	(research ri-chemistry)
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
	(research ri-ring-archer-armor)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total my-elite-UU >= relative-5-units)
	(or	(or	(can-research ri-ballistics)
			(can-research ri-thumb-ring))
		(and	(strategic-number sn-allow-resource-spending > 3)
			(can-research ri-husbandry)))
=>
	(research ri-ballistics)
	(research ri-thumb-ring)
	(research ri-husbandry)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(can-research ri-parthian-tactics)
	(unit-type-count-total my-elite-UU >= relative-5-units)
=>
	(research ri-parthian-tactics)
)
#end-if

#load-if-defined ITALIAN-CIV
(defrule
	(nor	(research-available ri-fletching)
		(research-available ri-bodkin-arrow))
	(nor	(research-available ri-bracer)
		(research-available ri-chemistry))
	(nor	(research-available ri-padded-archer-armor)
		(research-available ri-leather-archer-armor))
	(nor	(research-available ri-ring-archer-armor)
		(research-available ri-ballistics))
	(not	(research-available ri-thumb-ring))
=>
	(up-jump-rule 12)
)

(defrule
	(research-completed my-unique-unit-upgrade)
=>
	(up-jump-rule 6)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 0))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-bracer)))
=>
	(up-jump-rule 2)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total my-UU > 10)
	(or	(town-under-attack)
		(or	(goal MILITARY 1)
			(strategic-number sn-allow-resource-spending > 1)))
	(or	(research-available ri-fletching)
		(or	(research-available ri-bodkin-arrow)
			(research-available ri-bracer)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-bracer c: -1)
)

(defrule
	(unit-type-count-total my-UU > 0)
	(or	(can-research-with-escrow ri-fletching)
		(and	(strategic-number sn-allow-resource-spending > 0)
			(or	(can-research-with-escrow ri-bodkin-arrow)
				(can-research-with-escrow ri-bracer))))
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research ri-fletching)
	(research ri-bodkin-arrow)
	(research ri-bracer)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total my-UU >= relative-4-units)
	(or	(can-research ri-chemistry)
		(or	(can-research ri-padded-archer-armor)
			(and	(strategic-number sn-allow-resource-spending > 2)
				(or	(can-research ri-leather-archer-armor)
					(can-research ri-ring-archer-armor)))))
=>
	(research ri-chemistry)
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
	(research ri-ring-archer-armor)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total my-UU >= relative-5-units)
	(or	(can-research ri-ballistics)
		(can-research ri-thumb-ring))
=>
	(research ri-ballistics)
	(research ri-thumb-ring)
)

(defrule
	(not	(research-completed my-unique-unit-upgrade))
=>
	(up-jump-rule 5)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 0))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-bracer)))
=>
	(up-jump-rule 2)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total my-elite-UU > 10)
	(or	(town-under-attack)
		(or	(goal MILITARY 1)
			(strategic-number sn-allow-resource-spending > 1)))
	(or	(research-available ri-fletching)
		(or	(research-available ri-bodkin-arrow)
			(research-available ri-bracer)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-bracer c: -1)
)

(defrule
	(unit-type-count-total my-elite-UU > 0)
	(or	(can-research-with-escrow ri-fletching)
		(and	(strategic-number sn-allow-resource-spending > 0)
			(or	(can-research-with-escrow ri-bodkin-arrow)
				(can-research-with-escrow ri-bracer))))
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research ri-fletching)
	(research ri-bodkin-arrow)
	(research ri-bracer)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total my-elite-UU >= relative-4-units)
	(or	(can-research ri-chemistry)
		(or	(can-research ri-padded-archer-armor)
			(and	(strategic-number sn-allow-resource-spending > 2)
				(or	(can-research ri-leather-archer-armor)
					(can-research ri-ring-archer-armor)))))
=>
	(research ri-chemistry)
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
	(research ri-ring-archer-armor)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total my-elite-UU >= relative-5-units)
	(or	(can-research ri-ballistics)
		(can-research ri-thumb-ring))
=>
	(research ri-ballistics)
	(research ri-thumb-ring)
)
#end-if

#load-if-defined KOREAN-CIV
(defrule
	(nor	(research-available ri-fletching)
		(research-available ri-bodkin-arrow))
	(nor	(research-available ri-bracer)
		(research-available ri-chemistry))
	(nor	(research-available ri-padded-archer-armor)
		(research-available ri-leather-archer-armor))
	(nor	(research-available ri-ring-archer-armor)
		(research-available ri-ballistics))
	(nor	(research-available ri-thumb-ring)
		(research-available ri-husbandry))
=>
	(up-jump-rule 6)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 0))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-bracer)))
=>
	(up-jump-rule 2)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total war-wagon-line > 8)
	(or	(town-under-attack)
		(or	(goal MILITARY 1)
			(strategic-number sn-allow-resource-spending > 1)))
	(or	(research-available ri-fletching)
		(or	(research-available ri-bodkin-arrow)
			(research-available ri-bracer)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-bracer c: -1)
)

(defrule
	(unit-type-count-total war-wagon-line > 0)
	(or	(can-research-with-escrow ri-fletching)
		(and	(strategic-number sn-allow-resource-spending > 0)
			(or	(can-research-with-escrow ri-bodkin-arrow)
				(can-research-with-escrow ri-bracer))))
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research ri-fletching)
	(research ri-bodkin-arrow)
	(research ri-bracer)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total war-wagon-line >= relative-4-units)
	(or	(can-research ri-chemistry)
		(or	(can-research ri-padded-archer-armor)
			(and	(strategic-number sn-allow-resource-spending > 2)
				(or	(can-research ri-leather-archer-armor)
					(can-research ri-ring-archer-armor)))))
=>
	(research ri-chemistry)
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
	(research ri-ring-archer-armor)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total war-wagon-line >= relative-5-units)
	(or	(or	(can-research ri-ballistics)
			(can-research ri-thumb-ring))
		(and	(strategic-number sn-allow-resource-spending > 3)
			(can-research ri-husbandry)))
=>
	(research ri-ballistics)
	(research ri-thumb-ring)
	(research ri-husbandry)
)

(defrule
	(goal gl-strategy korean-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(and	(town-under-attack)
			(and	(current-age-time > 330)
				(can-research ri-bodkin-arrow)))
		(can-research ri-fletching))
=>
	(research ri-fletching)
	(research ri-bodkin-arrow)
)
#end-if

#load-if-defined MAYAN-CIV
(defrule
	(nor	(research-available ri-fletching)
		(research-available ri-bodkin-arrow))
	(nor	(research-available ri-bracer)
		(research-available ri-chemistry))
	(nor	(research-available ri-padded-archer-armor)
		(research-available ri-leather-archer-armor))
	(nor	(research-available ri-ring-archer-armor)
		(research-available ri-ballistics))
	(not	(research-available ri-thumb-ring))
=>
	(up-jump-rule 5)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 0))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-bracer)))
=>
	(up-jump-rule 2)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total plumed-archer-line > 10)
	(or	(town-under-attack)
		(or	(goal MILITARY 1)
			(strategic-number sn-allow-resource-spending > 1)))
	(or	(research-available ri-fletching)
		(or	(research-available ri-bodkin-arrow)
			(research-available ri-bracer)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-bracer c: -1)
)

(defrule
	(unit-type-count-total plumed-archer-line > 0)
	(or	(can-research-with-escrow ri-fletching)
		(and	(strategic-number sn-allow-resource-spending > 0)
			(or	(can-research-with-escrow ri-bodkin-arrow)
				(can-research-with-escrow ri-bracer))))
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research ri-fletching)
	(research ri-bodkin-arrow)
	(research ri-bracer)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total plumed-archer-line >= relative-4-units)
	(or	(can-research ri-chemistry)
		(or	(can-research ri-padded-archer-armor)
			(and	(strategic-number sn-allow-resource-spending > 2)
				(or	(can-research ri-leather-archer-armor)
					(can-research ri-ring-archer-armor)))))
=>
	(research ri-chemistry)
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
	(research ri-ring-archer-armor)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total plumed-archer-line >= relative-6-units)
	(or	(can-research ri-ballistics)
		(can-research ri-thumb-ring))
=>
	(research ri-ballistics)
	(research ri-thumb-ring)
)
#end-if

#load-if-defined MONGOL-CIV
(defrule
	(nor	(research-available ri-fletching)
		(research-available ri-bodkin-arrow))
	(nor	(research-available ri-bracer)
		(research-available ri-chemistry))
	(nor	(research-available ri-padded-archer-armor)
		(research-available ri-leather-archer-armor))
	(nor	(research-available ri-parthian-tactics)
		(research-available ri-ballistics))
	(nor	(research-available ri-thumb-ring)
		(research-available ri-husbandry))
=>
	(up-jump-rule 5)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 0))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-bracer)))
=>
	(up-jump-rule 2)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total mangudai-line > 10)
	(or	(town-under-attack)
		(or	(goal MILITARY 1)
			(strategic-number sn-allow-resource-spending > 1)))
	(or	(research-available ri-fletching)
		(or	(research-available ri-bodkin-arrow)
			(research-available ri-bracer)))
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 60)
	(up-add-research-cost c: ri-bracer c: -1)
)

(defrule
	(unit-type-count-total mangudai-line > 0)
	(or	(can-research-with-escrow ri-fletching)
		(and	(strategic-number sn-allow-resource-spending > 0)
			(or	(can-research-with-escrow ri-bodkin-arrow)
				(can-research-with-escrow ri-bracer))))
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research ri-fletching)
	(research ri-bodkin-arrow)
	(research ri-bracer)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total mangudai-line >= relative-4-units)
	(or	(can-research ri-chemistry)
		(or	(can-research ri-padded-archer-armor)
			(and	(strategic-number sn-allow-resource-spending > 2)
				(or	(can-research ri-leather-archer-armor)
					(can-research ri-parthian-tactics)))))
=>
	(research ri-chemistry)
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
	(research ri-parthian-tactics)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(unit-type-count-total mangudai-line >= relative-5-units)
	(or	(or	(can-research ri-ballistics)
			(can-research ri-thumb-ring))
		(and	(strategic-number sn-allow-resource-spending > 3)
			(can-research ri-husbandry)))
=>
	(research ri-ballistics)
	(research ri-thumb-ring)
	(research ri-husbandry)
)
#end-if

#load-if-defined SPANISH-CIV
(defrule
	(nor	(research-available ri-padded-archer-armor)
		(research-available ri-leather-archer-armor))
	(nor	(research-available ri-ring-archer-armor)
		(research-available ri-husbandry))
=>
	(up-jump-rule 3)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 0))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-ring-archer-armor)))
=>
	(up-jump-rule 1)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total conquistador-line >= relative-2-units)
	(or	(can-research ri-padded-archer-armor)
		(and	(strategic-number sn-allow-resource-spending > 1)
			(and	(unit-type-count-total conquistador-line > 3)
				(or	(can-research ri-leather-archer-armor)
					(can-research ri-ring-archer-armor)))))
=>
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
	(research ri-ring-archer-armor)
)

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(strategic-number sn-allow-resource-spending > 3)
		(and	(up-compare-goal gl-current-age <= gv-castle)
			(or	(goal MILITARY 1)
				(and	(town-under-attack)
					(timer-triggered 9)))))
	(unit-type-count-total conquistador-line >= relative-6-units)
	(can-research ri-husbandry)
=>
	(research ri-husbandry)
)
#end-if

#load-if-defined TURKISH-CIV
(defrule
	(nor	(research-available ri-padded-archer-armor)
		(research-available ri-leather-archer-armor))
	(not	(research-available ri-ring-archer-armor))
=>
	(up-jump-rule 3)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending == 0)
		(or	(and	(goal POSITION POCKET)
				(and	(game-time < 1500)
					(and	(or	(not	(town-under-attack))
							(goal MILITARY 0))
						(strategic-number sn-allow-resource-spending == 1))))
			(research-completed ri-ring-archer-armor)))
=>
	(up-jump-rule 1)
)

(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total janissary-line >= relative-2-units)
	(or	(can-research ri-padded-archer-armor)
		(and	(strategic-number sn-allow-resource-spending > 1)
			(or	(can-research ri-leather-archer-armor)
				(can-research ri-ring-archer-armor))))
=>
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
	(research ri-ring-archer-armor)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(or	(players-unit-type-count any-enemy archer-line > 4)
		(or	(players-unit-type-count any-enemy skirmisher-line > 4)
			(or	(players-unit-type-count any-enemy cavalry-archer-line > 3)
				(or	(players-unit-type-count any-enemy plumed-archer-line > 3)
					(players-unit-type-count any-enemy longbowman-line > 3)))))
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)
#end-if

(defrule
	(strategic-number sn-allow-resource-spending > 3)
	(research-completed ri-chain-mail)
	(current-age >= castle-age)
	(or	(unit-type-count-total eagle-warrior-line >= relative-6-units)
		(or	(unit-type-count-total spearman-line >= relative-6-units)
			(unit-type-count-total militiaman-line >= relative-6-units)))
	(or	(can-research ri-squires)
		(can-research ri-tracking))
=>
	(research ri-squires)
	(research ri-tracking)
)

#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined TEUTONIC-CIV
#load-if-not-defined VIKING-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(strategic-number sn-allow-resource-spending > 3)
		(and	(research-completed ri-iron-casting)
			(up-compare-goal gl-current-age <= gv-castle)))
	(or	(unit-type-count-total scout-cavalry-line >= relative-6-units)
		(or	(unit-type-count-total knight-line >= relative-6-units)
			(or	(unit-type-count-total cataphract-line >= relative-6-units)
				(unit-type-count-total camel-line >= relative-6-units))))
	(can-research ri-husbandry)
=>
	(research ri-husbandry)
)
#end-if
#end-if
#end-if
#end-if

#load-if-defined HUN-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(strategic-number sn-allow-resource-spending > 3)
		(and	(research-completed ri-thumb-ring)
			(up-compare-goal gl-current-age <= gv-castle)))
	(unit-type-count-total cavalry-archer-line >= relative-6-units)
	(can-research ri-husbandry)
=>
	(research ri-husbandry)
)
#end-if

#load-if-defined AZTEC-CIV
(defrule
	(or	(and	(goal gl-strategy eew-strategy)
			(and	(or	(up-compare-goal gl-current-age <= gv-castle)
					(unit-type-count-total monk > 4))
				(not	(town-under-attack))))
		(or	(unit-type-count-total monk > 10)
			(up-compare-const gv-michi-style == 1)))
	(unit-type-count-total monk > 1)
	(can-research ri-fervor)
=>
	(research ri-fervor)
)
#end-if

#load-if-not-defined HUN-CIV
#load-if-not-defined GOTHIC-CIV
(defrule
	(or	(goal gl-eew-strategy-type fast-imp)
		(goal gl-strategy turkish-fast-imp))
	(nor	(players-civ every-enemy aztec)
		(players-civ every-enemy mayan))
	(players-military-population any-enemy > 4)
	(players-current-age any-enemy == castle-age)
	(unit-type-count-total monk > 0)
	(can-research ri-sanctity)
=>
	(research ri-sanctity)
)

(defrule
	(strategic-number sn-allow-resource-spending > 5)
	(or	(gold-amount > 1500)
		(and	(unit-type-count-total monastery-class > 17)
			(or	(players-unit-type-count focus-player scorpion-line > 3)
				(or	(players-unit-type-count focus-player mangonel-line > 1)
					(players-unit-type-count focus-player bombard-cannon > 0)))))
	(unit-type-count-total monastery-class > 4)
	(can-research ri-redemption)
=>
	(set-escrow-percentage gold 0)
	(release-escrow gold)
	(research ri-redemption)
)
#end-if
(defrule
	(unit-type-count-total monk > 5)
	(can-research ri-theocracy)
=>
	(research ri-theocracy)
)
#end-if

#load-if-not-defined UP-MICHI-STYLE
(defrule
	(unit-type-count-total monk > 0)
	(or	(and	(or	(unit-type-count-total monk >= relative-4-units)
				(players-unit-type-count any-enemy knight-line > 0))
			(can-research ri-sanctity))
		(and	(unit-type-count-total monk >= relative-6-units)
			(or	(can-research ri-block-printing)
				(can-research ri-illumination))))
=>
	(research ri-sanctity)
	(research ri-block-printing)
	(research ri-illumination)
)
#else
(defrule
	(up-compare-goal gl-current-age >= gv-castle-up)
	(unit-type-count-total monastery-class > 0)
	(or	(unit-type-count-total monastery-class >= relative-3-units)
		(civ-selected aztec))
	(or	(can-research ri-sanctity)
		(or	(can-research ri-block-printing)
			(or	(can-research ri-illumination)
				(can-research ri-theocracy))))
=>
	(research ri-theocracy)
	(research ri-sanctity)
	(research ri-block-printing)
	(research ri-illumination)
)
#end-if

#load-if-defined SPANISH-CIV
#load-if-not-defined UP-GAME-AGE2-X2
(defrule
	(unit-type-count-total missionary >= relative-4-units)
	(or	(can-research ri-theocracy)
		(or	(can-research ri-block-printing)
			(can-research ri-illumination)))
=>
	(research ri-theocracy)
	(research ri-block-printing)
	(research ri-illumination)
)
#else
(defrule
	(unit-type-count-total missionary >= relative-4-units)
	(or	(can-research ri-fervor)
		(or	(can-research ri-theocracy)
			(or	(can-research ri-block-printing)
				(can-research ri-illumination))))
=>
	(research ri-fervor)
	(research ri-theocracy)
	(research ri-block-printing)
	(research ri-illumination)
)
#end-if
#end-if

#load-if-defined AZTEC-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(or	(unit-type-count-total monk > 37)
			(gold-amount > 3500))
		(and	(players-unit-type-count any-enemy monk > 4)
			(and	(population >= pop-to-full-pop-attack)
				(not	(research-available ri-heresy)))))
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
=>
	(research ri-heresy)
	(research ri-faith)
)

(defrule
	(strategic-number sn-allow-resource-spending != -4)
	(or	(goal gl-strategy eagle-rush)
		(or	(goal gl-strategy monk-scorpion-rush)
			(goal gl-strategy scout-skirm-flush)))
	(unit-type-count-total monastery-class > 4)
	(or	(players-unit-type-count any-enemy monk > 6)
		(players-unit-type-count any-enemy missionary > 6))
	(research-available ri-atonement)
=>
	(set-escrow-percentage gold 70)
	(up-add-research-cost c: ri-atonement c: -1)
)

(defrule
	(strategic-number sn-allow-resource-spending != -4)
	(unit-type-count-total monastery-class > 4)
	(or	(or	(players-unit-type-count any-enemy monk > 3)
			(players-unit-type-count any-enemy missionary > 3))
		(and	(unit-type-count-total monk > 15)
			(and	(current-age == imperial-age)
				(current-age-time > 300))))
	(can-research-with-escrow ri-atonement)
=>
	(set-escrow-percentage gold 0)
	(release-escrow gold)
	(research ri-atonement)
)
#else
(defrule
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(strategic-number sn-allow-resource-spending > 5)
	(players-unit-type-count any-enemy monk > 4)
	(population >= pop-to-full-pop-attack)
	(not	(research-available ri-heresy))
	(can-research ri-faith)
=>
	(research ri-faith)
)

(defrule
	(strategic-number sn-allow-resource-spending != -4)
	(or	(goal gl-strategy eagle-rush)
		(or	(goal gl-strategy monk-scorpion-rush)
			(goal gl-strategy scout-skirm-flush)))
	(unit-type-count-total monastery-class > 4)
	(or	(players-unit-type-count any-enemy monk > 6)
		(players-unit-type-count any-enemy missionary > 6))
	(research-available ri-atonement)
=>
	(set-escrow-percentage gold 70)
	(up-add-research-cost c: ri-atonement c: -1)
)

(defrule
	(strategic-number sn-allow-resource-spending != -4)
	(unit-type-count-total monastery-class > 4)
	(or	(players-unit-type-count any-enemy monk > 3)
		(players-unit-type-count any-enemy missionary > 3))
	(can-research-with-escrow ri-atonement)
=>
	(set-escrow-percentage gold 0)
	(release-escrow gold)
	(research ri-atonement)
)
#end-if

#load-if-defined AZTEC-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(current-age-time > 360)
	(unit-type-count-total monk > 7)
	(or	(unit-type-count-total monk > 17)
		(or	(and	(unit-type-count-total monk > 16)
				(up-research-status c: my-unique-research >= research-pending))
			(and	(gold-amount > 1500)
				(and	(up-research-status c: ri-faith >= research-pending)
					(strategic-number sn-allow-resource-spending > 5)))))
	(can-research ri-herbal-medicine)
=>
	(research ri-herbal-medicine)
)
#end-if

(defrule
	(or	(nor	(unit-type-count-total scorpion-line > 3)
			(or	(and	(strategic-number sn-allow-resource-spending > 5)
					(food-amount > 2500))
				(goal gl-advanced-archery scorpions)))
		(not	(research-available ri-heavy-scorpion)))
	(nor	(research-available ri-capped-ram)
		(research-available ri-siege-ram))
=>
	(up-jump-rule 3)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(unit-type-count-total battering-ram-line >= relative-2-units)
	(or	(goal MILITARY 1)
		(current-age-time > 120))
	(or	(can-research ri-capped-ram)
		(and	(or	(unit-type-count-total battering-ram-line >= relative-5-units)
				(food-amount > 2000))
			(and	(can-research ri-siege-ram)
				(strategic-number sn-allow-resource-spending > 3))))
=>
	(research ri-capped-ram)
	(research ri-siege-ram)
)

(defrule
	(or	(unit-type-count-total scorpion-line > 8)
		(and	(goal gl-advanced-archery scorpions)
			(up-compare-goal threat-time > 10000)))
	(strategic-number sn-allow-resource-spending > 0)
	(soldier-count > 60)
	(population > 160)
	(building-type-count siege-workshop > 0)
	(research-available ri-heavy-scorpion)
=>
	(up-modify-goal gl-food-gp-points c:+ 8)
	(up-modify-goal gl-wood-gp-points c:+ 8)
	(set-escrow-percentage food 70)
	(set-escrow-percentage wood 70)
	(up-add-research-cost c: ri-heavy-scorpion c: -1)
)

(defrule
	(or	(unit-type-count-total scorpion-line >= relative-4-units)
		(or	(and	(strategic-number sn-allow-resource-spending > 5)
				(food-amount > 2500))
			(goal gl-advanced-archery scorpions)))
	(can-research-with-escrow ri-heavy-scorpion)
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
	(release-escrow food)
	(release-escrow wood)
	(research ri-heavy-scorpion)
)

#load-if-defined KOREAN-CIV
(defrule
	(or	(soldier-count > 20)
		(population >= almost-full-pop))
	(or	(and	(strategic-number sn-allow-resource-spending > 2)
			(goal gl-strategy-class basic-class))
		(up-research-status c: my-unique-unit-upgrade >= research-pending))
	(or	(can-research ri-onager)
		(can-research ri-siege-onager))
=>
	(research ri-onager)
	(research ri-siege-onager)
)
#end-if

#load-if-defined AZTEC-CIV
(defrule
	(or	(research-completed ri-champion)
		(or	(research-completed my-unique-unit-upgrade)
			(or	(and	(unit-type-count-total eagle-warrior-line > 10)
					(up-research-status c: ri-elite-eagle-warrior >= research-pending))
				(or	(strategic-number sn-allow-resource-spending > 3)
					(goal gl-required-eagle-upgrades full-upgrades)))))
	(strategic-number sn-allow-resource-spending >= 0)
	(can-research my-unique-research)
=>
	(research my-unique-research)
	(set-strategic-number sn-allow-resource-spending 6)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(research-completed ri-bodkin-arrow)
	(nand	(current-age == imperial-age)
		(research-available ri-bracer))
	(unit-type-count-total skirmisher-line >= relative-10-units)
	(can-research ri-atlatl)
=>
	(research ri-atlatl)
)
#end-if
#load-if-defined BRITON-CIV
(defrule
	(civ-selected briton)
	(research-completed ri-bracer)
	(research-completed ri-chemistry)
	(strategic-number sn-allow-resource-spending > 5)
	(or	(unit-type-count-total arbalest >= relative-6-units)
		(or	(unit-type-count-total elite-longbowman >= relative-6-units)
			(or	(unit-type-count-total elite-skirmisher >= relative-6-units)
				(or	(goal gl-strategy default)
					(population-cap < 65)))))
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

(defrule
	(or	(and	(strategic-number sn-allow-resource-spending > 5)
			(soldier-count > 50))
		(goal gl-strategy fi-monk-rush))
	(unit-type-count-total trebuchet-set >= relative-3-units)
	(can-research ri-war-wolf)
=>
	(research ri-war-wolf)
)
#end-if
#load-if-defined BYZANTINE-CIV
(defrule
	(civ-selected byzantine)
	(research-completed my-unique-unit-upgrade)
	(or	(can-research my-unique-research)
		(or	(can-research ri-scale-barding)
			(or	(can-research ri-chain-barding)
				(can-research ri-plate-barding))))
=>
	(research ri-scale-barding)
	(research ri-chain-barding)
	(research ri-plate-barding)
	(research my-unique-research)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(nand	(current-age == imperial-age)
		(research-available ri-fast-fire-ship))
	(unit-type-count-total fire-ship-line > relative-6-units)
	(can-research ri-greek-fire)
=>
	(research ri-greek-fire)
)
#end-if
#load-if-defined CELTIC-CIV
(defrule
	(civ-selected celtic)
	(strategic-number sn-allow-resource-spending > 4)
	(or	(unit-type-count-total battering-ram-line >= relative-4-units)
		(or	(unit-type-count-total mangonel-line >= relative-5-units)
			(and	(unit-type-count-total scorpion-line >= relative-6-units)
				(not	(research-available ri-heavy-scorpion)))))
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(building-type-count castle > 1)
	(can-research ri-stronghold)
=>
	(research ri-stronghold)
)
#end-if
#load-if-defined CHINESE-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total chu-ko-nu-line > 10)
		(unit-type-count-total scorpion-line > 9))
	(research-available my-unique-research)
=>
	(set-escrow-percentage wood 70)
	(set-escrow-percentage gold 70)
	(up-add-research-cost c: my-unique-research c: -1)
)

(defrule
	(civ-selected chinese)
	(strategic-number sn-allow-resource-spending > 0)
	(or	(unit-type-count-total chu-ko-nu-line >= relative-5-units)
		(or	(and	(population >= almost-full-pop)
				(not	(goal CASTLE 0)))
			(unit-type-count-total scorpion >= relative-5-units)))
	(can-research-with-escrow my-unique-research)
=>
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(release-escrow wood)
	(release-escrow gold)
	(research my-unique-research)
)
#end-if
#load-if-defined FRANKISH-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(unit-type-count-total throwing-axeman-line >= relative-5-units)
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

(defrule
	(strategic-number sn-allow-resource-spending > 5)
	(research-completed ri-paladin)
	(can-research ri-chivalry)
=>
	(research ri-chivalry)
)
#end-if
#load-if-defined HUN-CIV
#load-if-defined VICTORY-STANDARD
(defrule
	(or	(enemy-captured-relics)
		(players-building-type-count any-enemy wonder > 0))
	(can-research my-unique-research)
=>
	(research my-unique-research)
)
#end-if
#end-if
#load-if-defined INCAN-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(unit-type-count-total elite-eagle-warrior > 14)
		(or	(unit-type-count-total my-elite-UU > 10)
			(or	(unit-type-count-total slinger > 17)
				(and	(strategic-number sn-allow-resource-spending > 5)
					(goal gl-strategy default)))))
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

(defrule
	(or	(and	(strategic-number sn-allow-resource-spending > 3)
			(nand	(goal gl-eagles 0)
				(and	(goal CASTLE 0)
					(up-compare-goal gl-advanced-archery != slingers))))
		(goal gl-required-eagle-upgrades full-upgrades))
	(strategic-number sn-allow-resource-spending >= 0)
	(can-research my-unique-research)
=>
	(research my-unique-research)
	(set-strategic-number sn-allow-resource-spending 6)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(research-completed ri-bodkin-arrow)
	(nand	(current-age == imperial-age)
		(research-available ri-bracer))
	(or	(unit-type-count-total skirmisher-line > relative-10-units)
		(or	(unit-type-count-total slinger > relative-6-units)
			(strategic-number sn-allow-resource-spending > 3)))
	(can-research ri-andean-sling)
=>
	(research ri-andean-sling)
)
#end-if
#load-if-defined INDIAN-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(unit-type-count-total hand-cannoneer > 12)
		(strategic-number sn-allow-resource-spending > 5))
	(or	(unit-type-count-total hand-cannoneer >= relative-6-units)
		(and	(gold-amount > 1000)
			(goal gl-advanced-archery heavy-cannoneers)))
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(or	(up-compare-goal gl-my-villager-count-total > 70)
		(population > almost-full-pop))
	(can-research ri-sultans)
=>
	(research ri-sultans)
)
#end-if
#load-if-defined ITALIAN-CIV
(defrule
	(soldier-count > 40)
	(strategic-number sn-allow-resource-spending > 2)
	(players-building-type-count any-ally market > 0)
	(can-research-with-escrow my-unique-research)
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research my-unique-research)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(research-completed ri-leather-archer-armor)
	(or	(unit-type-count-total my-UU > 15)
		(or	(unit-type-count-total my-elite-UU > 7)
			(and	(population >= pop-to-full-pop-attack)
				(unit-type-count-total my-UU >= relative-6-units))))
	(not	(research-available my-unique-unit-upgrade))
	(can-research ri-pavise)
=>
	(research ri-pavise)
)
#end-if
#load-if-defined JAPANESE-CIV
(defrule
	(civ-selected japanese)
	(research-completed my-unique-unit-upgrade)
	(gold-amount > 900)
	(wood-amount > 1500)
	(strategic-number sn-allow-resource-spending > 5)
	(unit-type-count-total trebuchet-set > 0)
	(can-research my-unique-research)
=>
	(research my-unique-research)
)
#end-if
#load-if-defined KOREAN-CIV
(defrule
	(civ-selected korean)
	(strategic-number sn-allow-resource-spending > 5)
	(unit-type-count-total mangonel-line >= relative-2-units)
	(or	(soldier-count > 40)
		(population > almost-full-pop))
	(up-research-status c: ri-siege-onager >= research-pending)
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(or	(unit-type-count-total turtle-ship-line > 9)
		(research-completed ri-elite-turtle-ship))
	(unit-type-count-total turtle-ship-line >= relative-3-units)
	(can-research ri-panokseon)
=>
	(research ri-panokseon)
)
#end-if
#load-if-defined MAGYAR-CIV
(defrule
	(unit-type-count-total cavalry-archer-line > 0)
	(research-completed ri-heavy-cavalry-archer)
	(strategic-number sn-allow-resource-spending > 5)
	(can-research-with-escrow my-unique-research)
=>
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(release-escrow wood)
	(release-escrow gold)
	(research my-unique-research)
)

(defrule
	(or	(strategic-number sn-allow-resource-spending > 1)
		(up-compare-goal gl-my-villager-count-total > 70))
	(strategic-number sn-allow-resource-spending > 0)
	(not	(goal CASTLE 0))
	(can-research-with-escrow ri-mercenaries)
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research ri-mercenaries)
)
#end-if
#load-if-defined MAYAN-CIV
(defrule
	(or	(and	(unit-type-count-total eagle-warrior-line >= relative-4-units)
			(and	(strategic-number sn-allow-resource-spending > 2)
				(up-research-status c: ri-elite-eagle-warrior >= research-pending)))
		(goal gl-required-eagle-upgrades full-upgrades))
	(strategic-number sn-allow-resource-spending >= 0)
	(can-research my-unique-research)
=>
	(research my-unique-research)
	(set-strategic-number sn-allow-resource-spending 6)
)
#end-if
#load-if-defined MONGOL-CIV
(defrule
	(civ-selected mongol)
	(or	(goal MILITARY 1)
		(strategic-number sn-allow-resource-spending > 5))
	(or	(unit-type-count-total battering-ram-line >= relative-4-units)
		(or	(unit-type-count-total mangonel-line >= relative-5-units)
			(and	(unit-type-count-total scorpion-line >= relative-6-units)
				(not	(research-available ri-heavy-scorpion)))))
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

(defrule
	(civ-selected mongol)
	(game-time > 2400)
	(can-research ri-nomads)
=>
	(research ri-nomads)
)
#end-if
#load-if-defined PERSIAN-CIV
(defrule
	(or	(not	(goal MILITARY 1))
		(strategic-number sn-allow-resource-spending > 5))
	(strategic-number sn-allow-resource-spending > 3)
	(game-time > 2700)
	(building-type-count-total castle > 3)
	(can-research ri-boiling-oil)
=>
	(research ri-boiling-oil)
)
#end-if
#load-if-defined SARACEN-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 5)
	(or	(and	(unit-type-count-total camel-line >= relative-3-units)
			(research-completed ri-heavy-camel))
		(up-research-status c: my-unique-unit-upgrade >= research-pending))
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

(defrule
	(or	(unit-type-count-total monk-set >= relative-5-units)
		(or	(goal gl-strategy fi-monk-rush)
			(and	(strategic-number sn-allow-resource-spending > 5)
				(unit-type-count-total trade-cart > 20))))
	(can-research ri-madrasah)
=>
	(research ri-madrasah)
)
#end-if
#load-if-defined SLAVIC-CIV
(defrule
	(or	(unit-type-count-total spearman-line >= relative-4-units)
		(unit-type-count-total militiaman-line >= relative-4-units))
	(strategic-number sn-allow-resource-spending > 5)
	(can-research-with-escrow my-unique-research)
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research my-unique-research)
)

(defrule
	(or	(unit-type-count-total monk-set >= relative-5-units)
		(or	(goal gl-strategy fi-monk-rush)
			(and	(strategic-number sn-allow-resource-spending > 5)
				(unit-type-count-total trade-cart > 20))))
	(can-research-with-escrow ri-orthodoxy)
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research ri-orthodoxy)
)
#end-if
#load-if-defined SPANISH-CIV
(defrule
	(civ-selected spanish)
	(current-age-time > 60)
	(strategic-number sn-allow-resource-spending > 0)
	(or	(soldier-count > 50)
		(town-under-attack))
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

(defrule
	(or	(unit-type-count-total monk-set >= relative-5-units)
		(or	(goal gl-strategy fi-monk-rush)
			(unit-type-count-total missionary >= relative-5-units)))
	(research-completed ri-redemption)
	(can-research-with-escrow ri-inquisition)
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(release-escrow food)
	(release-escrow gold)
	(research ri-inquisition)
)
#end-if
#load-if-defined TEUTONIC-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 5)
	(food-amount > 1000)
	(or	(research-completed ri-paladin)
		(and	(goal gl-advanced-cavalry 0)
			(unit-type-count-total knight-line < 5)))
	(building-type-count-total castle > 3)
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

(defrule
	(strategic-number sn-allow-resource-spending > 5)
	(or	(research-completed ri-paladin)
		(or	(and	(goal gl-advanced-cavalry 0)
				(unit-type-count-total knight-line < 5))
			(up-compare-const gv-castle-age-end == 1)))
	(can-research ri-ironclad)
=>
	(research ri-ironclad)
)
#end-if
#load-if-defined TURKISH-CIV
(defrule
	(or	(and	(strategic-number sn-allow-resource-spending > 5)
			(or	(building-type-count-total bombard-tower > 3)
				(or	(unit-type-count-total bombard-cannon >= relative-4-units)
					(or	(unit-type-count-total cannon-galleon-line >= relative-4-units)
						(gold-amount > 3000)))))
		(up-compare-const gv-michi-style == 1))
	(can-research my-unique-research)
=>
	(research my-unique-research)
)
#end-if
#load-if-defined VIKING-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 5)
	(unit-type-count-total berserk-line >= relative-5-units)
	(or	(players-unit-type-count any-enemy knight-line > 6)
		(or	(players-unit-type-count any-enemy scout-cavalry-line > 9)
			(or	(players-unit-type-count any-enemy tarkan-line > 6)
				(or	(players-unit-type-count any-enemy cavalry-archer-line > 6)
					(or	(players-unit-type-count any-enemy boyar > 5)
						(food-amount > 1400))))))
	(research-completed my-unique-unit-upgrade)
	(can-research ri-chieftains)
=>
	(research ri-chieftains)
)

(defrule
	(strategic-number sn-allow-resource-spending > 5)
	(unit-type-count-total berserk-line > 0)
	(research-completed my-unique-unit-upgrade)
	(can-research my-unique-research)
=>
	(research my-unique-research)
)
#end-if

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(and	(current-age-time > 30)
			(or	(goal gl-strategy-class basic-class)
				(or	(goal gl-eagles heavy-eagles)
					(food-amount > 800))))
		(goal gl-strategy knight-boom))
	(nand	(unit-available eagle-warrior-line)
		(can-afford-research my-unique-research))
	(can-research ri-conscription)
=>
	(research ri-conscription)
)

#load-if-not-defined BYZANTINE-CIV
#load-if-not-defined CHINESE-CIV
#load-if-not-defined HUN-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined PERSIAN-CIV
#load-if-not-defined TURKISH-CIV
#load-if-not-defined GOTHIC-CIV
(defrule
	(current-age-time > 30)
	(strategic-number sn-allow-resource-spending > 3)
	(or	(unit-type-count-total battering-ram-line >= relative-4-units)
		(or	(unit-type-count-total mangonel-line >= relative-6-units)
			(and	(unit-type-count-total scorpion-line > relative-6-units)
				(not	(research-available ri-heavy-scorpion)))))
	(can-research ri-siege-engineers)
=>
	(research ri-siege-engineers)
)
#else
(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(and	(strategic-number sn-allow-resource-spending > 5)
			(research-completed my-unique-unit-upgrade))
		(building-type-count-total castle < 2))
	(nor	(goal CASTLE 0)
		(goal CASTLE 11))
	(can-research ri-anarchy)
=>
	(research ri-anarchy)
)

(defrule
	(strategic-number sn-allow-resource-spending > 5)
	(can-research ri-perfusion)
=>
	(research ri-perfusion)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if

; =============== HIGH PRIORITY UNITS

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == 2002)
=>
	(up-jump-rule 14)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
=>
	(up-jump-rule 6)
)

(defrule
	(or	(strategic-number sn-minimum-water-body-size-for-dock != 1000)
		(building-type-count dock == 0))
=>
	(up-jump-rule 2)
)

(defrule
	(unit-type-count villager-wood > 29)
	(strategic-number sn-allow-resource-spending >= 0)
	(goal gl-heavy-water-map YES)
	(warboat-count > 4)
	(or	(wood-amount < 200)
		(gold-amount < 150))
	(unit-available cannon-galleon-line)
	(players-unit-type-count focus-player galley-line < 5)
	(players-unit-type-count focus-player fire-ship-line < 5)
	(players-unit-type-count focus-player longboat-line < 5)
	(players-unit-type-count focus-player turtle-ship-line < 1)
	(unit-type-count-total cannon-galleon-line < 4)
	(population <= pop-to-full-pop-attack)
=>
	(set-escrow-percentage wood 70)
	(set-escrow-percentage gold 70)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(goal gl-heavy-water-map YES)
	(warboat-count > relative-4-units)
	(players-unit-type-count focus-player galley-line < 5)
	(players-unit-type-count focus-player fire-ship-line < 5)
	(players-unit-type-count focus-player longboat-line < 5)
	(players-unit-type-count focus-player turtle-ship-line < 1)
	(unit-type-count-total cannon-galleon-line < 4)
	(can-train-with-escrow cannon-galleon-line)
=>
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(release-escrow gold)
	(release-escrow wood)
	(train cannon-galleon-line)
)

(defrule
	(or	(and	(strategic-number sn-minimum-water-body-size-for-dock != 1999)
			(strategic-number sn-minimum-water-body-size-for-dock != 2001))
		(building-type-count dock == 0))
=>
	(up-jump-rule 2)
)

(defrule
	(game-time > 2400)
	(strategic-number sn-allow-resource-spending >= 0)
	(warboat-count > 45)
	(population > 150)
	(or	(wood-amount < 200)
		(gold-amount < 150))
	(dropsite-min-distance wood >= 0)
	(dropsite-min-distance wood < 10)
	(unit-type-count villager-wood > 19)
	(up-compare-goal MILITARY >= 1)
	(unit-available cannon-galleon-line)
	(unit-type-count-total cannon-galleon-line < 4)
	(population <= pop-to-full-pop-attack)
=>
	(set-escrow-percentage wood 100)
	(set-escrow-percentage gold 100)
)

(defrule
	(game-time > 2400)
	(strategic-number sn-allow-resource-spending >= 0)
	(or	(warboat-count > 45)
		(population > almost-full-pop))
	(up-compare-goal MILITARY >= 1)
	(unit-type-count-total cannon-galleon-line < 4)
	(can-train-with-escrow cannon-galleon-line)
=>
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(release-escrow gold)
	(release-escrow wood)
	(train cannon-galleon-line)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock != 2001)
	(up-compare-goal gl-strategy != monk-mango-push)
	(strategic-number sn-allow-resource-spending >= 0)
	(or	(goal MILITARY 1)
		(players-building-type-count any-enemy bombard-tower > 0))
	(unit-type-count-total battering-ram-line < 6)
	(or	(game-time > 3000)
		(player-human target-player))
	(soldier-count > 40)
	(can-train-with-escrow battering-ram-line)
=>
	(train battering-ram-line)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock != 2001)
	(strategic-number sn-allow-resource-spending >= 0)
	(game-time > 2100)
	(up-compare-goal MILITARY <= 1)
	(town-under-attack)
	(up-projectile-detected projectile-fortification < 5000)
	(unit-type-count-total trebuchet-set < 1)
	(soldier-count > 20)
	(or	(soldier-count > 45)
		(up-player-distance target-player < 40))
	(can-train-with-escrow trebuchet)
=>
	(release-escrow gold)
	(release-escrow wood)
	(train trebuchet)
)

(defrule
	(or	(strategic-number sn-minimum-water-body-size-for-dock != 998)
		(or	(building-type-count castle == 0)
			(or	(not	(unit-available trebuchet))
				(soldier-count < 20))))
=>
	(up-jump-rule 4)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(up-player-distance target-player < 40)
	(or	(players-building-type-count target-player castle > 0)
		(players-building-type-count target-player bombard-tower > 0))
	(unit-type-count villager-gold > 9)
	(unit-type-count-total trebuchet-set < 2)
	(soldier-count > 20)
	(population > 120)
	(population <= pop-to-full-pop-attack)
	(or	(wood-amount < 200)
		(gold-amount < 200))
	(game-time < 4800)
=>
	(set-escrow-percentage wood 100)
	(set-escrow-percentage gold 100)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(up-player-distance target-player < 40)
	(or	(players-building-type-count target-player castle > 0)
		(players-building-type-count target-player bombard-tower > 0))
	(or	(unit-type-count villager-gold > 9)
		(unit-type-count-total trade-cart > 17))
	(unit-type-count-total trebuchet-set < 2)
	(population > 120)
	(can-train-with-escrow trebuchet)
=>
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(release-escrow wood)
	(release-escrow gold)
	(train trebuchet)
)

(defrule
	(strategic-number sn-allow-resource-spending > 5)
	(population <= pop-to-full-pop-attack); We aren't popped but almost
	(player-human target-player)
	(players-building-type-count target-player castle > 0)
	(or	(unit-type-count villager-gold > 9)
		(unit-type-count-total trade-cart > 23))
	(unit-type-count-total trebuchet-set < 2)
	(population > 165)
	(soldier-count > 40)
	(or	(wood-amount < 200)
		(gold-amount < 200))
	(game-time < 4800)
=>
	(set-escrow-percentage wood 100)
	(set-escrow-percentage gold 100)
)

(defrule
	(strategic-number sn-allow-resource-spending > 5)
	(player-human target-player)
	(or	(players-building-type-count target-player castle > 0)
		(players-building-type-count target-player bombard-tower > 0))
	(or	(unit-type-count villager-gold > 9)
		(unit-type-count-total trade-cart > 23))
	(unit-type-count-total trebuchet-set < 2)
	(soldier-count > 40)
	(can-train-with-escrow trebuchet)
=>
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(release-escrow wood)
	(release-escrow gold)
	(train trebuchet)
)

(defrule
	(game-time > 5)
	(strategic-number sn-minimum-water-body-size-for-dock != 2001)
	(up-compare-goal gl-strategy != gothic-boom)
	(up-compare-goal gl-strategy != michi-boom)
	(up-compare-goal CASTLE != 0)
	(strategic-number sn-allow-resource-spending > 5)
	(research-completed my-unique-unit-upgrade)
	(unit-type-count-total my-unique-unit-line < 25)
	(unit-type-count-total my-UU < 25)
	(unit-type-count-total my-elite-UU < 25)
	(or	(can-train my-unique-unit-line)
		(can-train my-UU))
=>
	(train my-unique-unit-line)
	(train my-unique-unit)
)

; ======== RESEARCHES - ECONOMY - LOW PRIORITY

#load-if-not-defined WONDER-RACE
(defrule
	(nand	(goal gl-strategy heavy-krush)
		(and	(game-time < 2200)
			(civ-selected saracen)))
	(nand	(unit-type-count-total galley-line > 6)
		(research-available ri-war-galley))
	(up-compare-goal gl-strategy != fast-eagles)
	(or	(food-amount > 200)
		(current-age-time > 120))
	(can-research ri-bow-saw)
=>
	(research ri-bow-saw)
)

(defrule
	(nor	(research-available ri-gold-shaft-mining)
		(research-available ri-hand-cart))
	(or	(nor	(research-available ri-masonry)
			(or	(research-available ri-stonecutting)
				(research-available ri-architecture)))
		(game-time < defensive-technology-time))
	(nor	(research-available ri-two-man-saw)
		(research-available ri-crop-rotation))
	(not	(research-available ri-guilds))
=>
	(up-jump-rule 7)
)

(defrule
	(nand	(building-type-count-total town-center < 2)
		(goal gl-strategy-class basic-class))
	(or	(and	(soldier-count > 30)
			(up-compare-goal gl-strategy != fi-archer-flush))
		(or	(and	(up-compare-goal gl-current-age >= gv-castle-up)
				(or	(up-compare-goal gl-strategy != turkish-fast-imp)
					(building-type-count-total archery-range > 1)))
			(building-type-count-total town-center > 5)))
	(can-research ri-gold-shaft-mining)
=>
	(research ri-gold-shaft-mining)
)

(defrule
	(not	(goal gl-strategy CA-rush))
	(nand	(goal MILITARY 0)
		(and	(goal TSA 0)
			(up-compare-goal threat-time < 10000)))
	(research-available ri-hand-cart)
	(up-compare-goal gl-my-villager-count-total > 90); Important but too expensive to be the first upgrade to take
=>
	(set-escrow-percentage wood 30)
	(set-escrow-percentage food 30)
	(up-add-research-cost c: ri-hand-cart c: -1)
)

#load-if-defined UP-MICHI-STYLE
(defrule
	(or	(and	(up-compare-goal gl-my-villager-count-total > 50)
			(nand	(up-compare-goal gl-my-villager-count-total < 71)
				(goal gl-strategy michi-boom)))
		(or	(up-compare-goal gl-my-villager-count-total >= difficulty-villager-cap)
			(up-compare-goal gl-my-villager-count-total >= imperial-villager-cap)))
	(can-research-with-escrow ri-hand-cart)
=>
	(release-escrow wood)
	(release-escrow food)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(research ri-hand-cart)
)
#else
(defrule
	(or	(and	(up-compare-goal gl-my-villager-count-total > 50)
			(nand	(up-compare-goal gl-my-villager-count-total < 71)
				(goal gl-strategy monk-boom)))
		(or	(up-compare-goal gl-my-villager-count-total >= difficulty-villager-cap)
			(up-compare-goal gl-my-villager-count-total >= imperial-villager-cap)))
	(can-research-with-escrow ri-hand-cart)
=>
	(release-escrow wood)
	(release-escrow food)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(research ri-hand-cart)
)
#end-if

(defrule
	(strategic-number sn-allow-resource-spending > 3)
	(building-type-count-total town-center > 3)
	(soldier-count > 50)
	(dropsite-min-distance stone < 4) 
	(or	(strategic-number sn-stone-gatherer-percentage > 8)
		(and	(strategic-number sn-stone-gatherer-percentage > 5)
			(and	(strategic-number sn-allow-resource-spending > 5)
				(or	(cc-players-unit-type-count 0 stone-mine > huge-stone-mine-amount)
					(food-amount > 1200)))))
	(can-research ri-stone-shaft-mining)
=>
	(research ri-stone-shaft-mining)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(nand	(or	(goal gl-eew-strategy-type fast-imp)
			(goal gl-strategy turkish-fast-imp))
		(current-age-time < 360))
	(or	(population > 55)
		(population > almost-full-pop))
	(or	(current-age-time > 15)
		(up-compare-const gv-michi-style == 1))
	(can-research-with-escrow ri-guilds)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-guilds)
)

(defrule
	(or	(current-age-time > 180)
		(strategic-number sn-allow-resource-spending > 2))
	(nand	(goal gl-strategy turkish-fast-imp)
		(game-time <= 2300))
	(or	(can-research ri-crop-rotation)
		(and	(can-research ri-two-man-saw)
			(not	(research-available ri-crop-rotation))))
=>
	(research ri-crop-rotation)
	(research ri-two-man-saw)
)


(defrule
	(game-time > defensive-technology-time); 3000 normally, 2300 in michi
	(strategic-number sn-allow-resource-spending > 3)
	(military-population > 50)
	(or	(can-research ri-masonry)
		(or	(can-research ri-architecture)
			(can-research ri-stonecutting)))
=>
	(research ri-masonry)
	(research ri-stonecutting)
	(research ri-architecture)
)

(defrule
	(or	(and	(building-type-count-total watch-tower > 3)
			(players-unit-type-count any-enemy monk > 6))
		(and	(or	(building-type-count-total castle > 1)
				(building-type-count-total bombard-tower > 3))
			(strategic-number sn-allow-resource-spending > 3)))
	(can-research ri-murder-holes)
=>
	(research ri-murder-holes)
)

(defrule
	(game-time > defensive-technology-time)
	(strategic-number sn-allow-resource-spending > 3)
	(or	(military-population > 50)
		(population > almost-full-pop))
	(can-research ri-hoardings)
	(or	(food-amount > 1600)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(building-type-count-total castle > 0)))
=>
	(research ri-hoardings)
)

#load-if-defined UP-MICHI-STYLE
(defrule
	(building-type-count-total town-center > 5)
	(food-amount > 350)
	(or	(up-research-status c: ri-hand-cart >= research-pending)
		(food-amount > 450))
	(can-research ri-stone-shaft-mining)
=>
	(research ri-stone-shaft-mining)
)
#end-if
#end-if

#load-if-not-defined DEATH-MATCH
#load-if-not-defined DARK-AGE-START
(defrule
	(game-time <= 51)
	(goal gl-current-age gv-dark)
	(goal SLING 0)
	(up-compare-goal gl-strategy != turtle-rush)
	(strategic-number sn-minimum-water-body-size-for-dock == 2001)
=>
	(set-goal DOCK 2)
	(set-goal gl-strategy watermap-fc)
	(set-strategic-number sn-allow-new-build-order 2)
)
#end-if
#end-if

; ============== BUILDINGS - DARK

(defrule
	(true)
=>
	(up-get-fact unit-type-count villager gl-my-villager-count)
	(up-get-fact unit-type-count villager gl-my-villager-count-total)
	(up-modify-goal temporary-goal3 s:= sn-food-gatherer-percentage)
	(up-modify-goal gl-max-farm-count g:= gl-my-villager-count)
	(up-modify-goal gl-max-farm-count g:* temporary-goal3)
	(up-modify-goal gl-max-farm-count c:/ 100)
	(up-get-fact unit-type-count villager-hunter temporary-goal)
	(up-modify-goal gl-max-farm-count g:- temporary-goal)
	(up-get-fact unit-type-count villager-forager temporary-goal)
	(up-modify-goal gl-max-farm-count g:- temporary-goal)
	(up-get-fact unit-type-count villager-fisherman temporary-goal)
	(up-modify-goal gl-max-farm-count g:- temporary-goal)
)

#load-if-not-defined HUN-CIV
(defrule
	(or	(up-compare-goal gl-nothing-style-map != YES)
		(housing-headroom <= 2))
	(unit-type-count transport-ship == 0)
	(strategic-number sn-town-center-start == 1)
	(up-pending-objects c: house < 1)
	(building-type-count-total house < 1)
	(game-time < 10)
	(building-type-count-total town-center > 0)
	(population-headroom > 3)
	(housing-headroom <= dark-housing-cap)
	(can-build house)
=>
	(up-assign-builders c: house c: 2)
	(up-set-placement-data my-player-number villager-class c: 2)
	(up-build place-control 0 c: house)
)

(defrule
	(or	(unit-type-count transport-ship == 0)
		(game-time > 30))
	(strategic-number sn-allow-new-build-order >= 1)
	(strategic-number sn-town-center-start == 1)
	(building-type-count-total town-center > 0)
	(up-compare-goal gl-current-age <= gv-dark-up)
	(up-pending-objects c: house < 1)
	(population-headroom > 3)
	(or	(up-compare-goal gl-nothing-style-map != YES)
		(housing-headroom <= 2))
	(housing-headroom <= dark-housing-cap)
	(can-build house)
=>
	(build house)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(strategic-number sn-town-center-start == 1)
	(building-type-count-total town-center > 0)
	(up-compare-goal gl-current-age > gv-dark-up)
	(up-pending-objects c: house < 1)
	(population-headroom > 3)
	(housing-headroom < 4)
	(can-build house)
=>
	(build house)
)
#end-if

(defrule
	(current-age > feudal-age)
	(building-type-count-total mill > 0)
	(building-type-count-total lumber-camp > 0)
=>
	(up-jump-rule 12)
)

(defrule
	(goal gl-normal-milling 0)
	(up-compare-goal gl-my-villager-count > 7)
	(up-compare-goal gl-current-age <= gv-dark)
	(building-type-count-total lumber-camp == 0)
	(resource-found wood)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(build lumber-camp)
	(set-strategic-number sn-maximum-wood-drop-distance 5)
	(chat-to-player my-player-number "Lumber camp")
	(enable-timer 10 5)
)

(defrule
	(goal gl-normal-milling 0)
	(game-time >= berry-walk-time)
	(building-type-count town-center > 0)
	(or	(unit-type-count-total fishing-ship > 1)
		(wood-amount > 250))
	(building-type-count-total mill == 0)
	(resource-found food)
	(can-build mill)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(set-strategic-number sn-preferred-mill-placement 0)
	(set-strategic-number sn-maximum-food-drop-distance 10)
	(set-goal gl-normal-milling 1)
	(build mill)
	(chat-to-player my-player-number "Mill")
)

(defrule
	(goal gl-normal-milling 0)
	(game-time >= berry-walk-time)
	(building-type-count town-center > 0)
	(unit-type-count-total fishing-ship > 1)
	(building-type-count-total mill == 0)
	(not	(resource-found food))
	(can-build mill)
=>
	(set-strategic-number sn-preferred-mill-placement 1)
	(set-strategic-number sn-maximum-food-drop-distance 10)
	(set-goal gl-normal-milling 1)
	(build mill)
	(chat-to-player my-player-number "Mill")
)

#load-if-not-defined UP-MICHI-STYLE
(defrule
	(up-compare-goal gl-my-villager-count-total > 18)
	(up-compare-goal gl-close-deer != YES)
	(dropsite-min-distance deer-hunting < 27)
	(strategic-number sn-enable-boar-hunting < 2)
	(or	(strategic-number sn-minimum-water-body-size-for-dock == 998)
		(and	(unit-type-count-total fishing-ship > 1)
			(and	(up-compare-goal gl-strategy-type >= FC)
				(building-type-count-total mill == 1))))
	(building-type-count-total mill < 2)
	(can-build mill)
=>
	(set-strategic-number sn-preferred-mill-placement 1)
	(build mill)
	(chat-to-player my-player-number "Mill")
)

(defrule
	(true)
=>
	(do-nothing)
	(disable-self)
)
#else
(defrule
	(strategic-number sn-nomad-style-start == 0)
	(goal gl-heavy-resources HIGH)
	(up-compare-goal gl-my-villager-count-total > 18)
	(building-type-count-total mill == 1)
	(building-type-count-total lumber-camp > 0)
	(resource-found food)
	(can-build mill)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 6)
	(set-strategic-number sn-preferred-mill-placement 0)
	(build mill)
	(chat-to-player my-player-number "Mill")
)

(defrule
	(up-compare-goal gl-my-villager-count-total > 23)
	(dropsite-min-distance deer-hunting < 27)
	(strategic-number sn-enable-boar-hunting < 2)
	(building-type-count-total lumber-camp > 1)
	(or	(building-type-count-total mill == 2)
		(and	(up-compare-goal gl-heavy-resources != HIGH)
			(building-type-count-total mill == 1)))
	(can-build mill)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(set-strategic-number sn-preferred-mill-placement 1)
	(build mill)
	(chat-to-player my-player-number "Mill")
)
#end-if
(defrule
	(game-time < 1200)
	(strategic-number sn-nomad-style-start == 0)
	(up-compare-const gv-michi-style != 1)
	(goal gl-heavy-resources HIGH)
	(up-compare-goal gl-my-villager-count-total > 24)
	(building-type-count-total mill == 2)
	(building-type-count-total lumber-camp > 0)
	(resource-found food)
	(can-build mill)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 6)
	(set-strategic-number sn-preferred-mill-placement 0)
	(build mill)
	(chat-to-player my-player-number "Mill")
)

(defrule
	(strategic-number sn-allow-new-build-order <= -2)
	(strategic-number sn-allow-new-build-order >= -4)
	(up-compare-goal gl-my-villager-count-total > 20)
	(strategic-number sn-camp-max-distance < 17)
	(up-compare-goal gl-current-age <= gv-dark)
	(building-type-count-total lumber-camp == 1)
	(building-type-count-total mill > 0)
	(resource-found wood)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(set-strategic-number sn-camp-max-distance 17)
	(build lumber-camp)
	(chat-to-player my-player-number "Second lumber")
)

(defrule
	(strategic-number sn-allow-new-build-order <= -2)
	(strategic-number sn-allow-new-build-order >= -4)
	(up-compare-goal gl-my-villager-count-total > 20)
	(strategic-number sn-camp-max-distance <= 24)
	(up-compare-goal gl-current-age <= gv-dark)
	(building-type-count-total lumber-camp == 1)
	(building-type-count-total mill > 0)
	(resource-found wood)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(set-strategic-number sn-camp-max-distance 24)
	(build lumber-camp)
	(chat-to-player my-player-number "Second lumber")
)

(defrule
	(strategic-number sn-allow-new-build-order <= -2)
	(strategic-number sn-allow-new-build-order >= -4)
	(up-compare-goal gl-my-villager-count-total > 20)
	(strategic-number sn-camp-max-distance > 24)
	(up-compare-goal gl-current-age <= gv-dark)
	(building-type-count-total lumber-camp == 1)
	(building-type-count-total mill > 0)
	(resource-found wood)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(build lumber-camp)
	(chat-to-player my-player-number "Second lumber")
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(strategic-number sn-nomad-style-start == 0)
	(strategic-number sn-minimum-water-body-size-for-dock != 2001)
	(strategic-number sn-skip-first-mining-camp == 0)
	(current-age < castle-age)
	(nand	(goal gl-DRUSH YES)
		(goal gl-current-age gv-dark))
	(strategic-number sn-gold-gatherer-percentage > 0)
	(building-type-count-total mining-camp < 6)
	(dropsite-min-distance gold > 3)
	(resource-found gold)
	(can-build mining-camp)
=>
	(set-strategic-number sn-dropsite-separation-distance 4)
	(set-strategic-number sn-camp-max-distance 19)
	(build mining-camp)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(strategic-number sn-nomad-style-start == 1)
	(strategic-number sn-minimum-water-body-size-for-dock != 2001)
	(strategic-number sn-skip-first-mining-camp == 0)
	(current-age < castle-age)
	(strategic-number sn-gold-gatherer-percentage > 0)
	(building-type-count-total mining-camp < 6)
	(dropsite-min-distance gold > 3)
	(resource-found gold)
	(can-build mining-camp)
=>
	(set-strategic-number sn-dropsite-separation-distance 4)
	(build mining-camp)
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(strategic-number sn-minimum-water-body-size-for-dock == 2001)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age < castle-age)
	(building-type-count-total mining-camp < 6)
	(or	(not	(civ-selected saracen))
		(up-compare-goal gl-current-age >= gv-feudal-up))
	(dropsite-min-distance gold > 3)
	(resource-found gold)
	(can-build mining-camp)
=>
	(set-strategic-number sn-dropsite-separation-distance 4)
	(set-strategic-number sn-camp-max-distance 30)
	(build mining-camp)
)

#load-if-defined KOREAN-CIV
(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(strategic-number sn-gold-gatherer-percentage > 0)
	(strategic-number sn-nomad-style-start == 0)
	(goal gl-strategy korean-boom)
	(dropsite-min-distance stone > 3)
	(or	(resource-found stone)
		(building-type-count-total mining-camp < 3))
	(building-type-count-total mining-camp < 3)
	(dropsite-min-distance gold < 4)
	(can-build mining-camp)
=>
	(set-strategic-number sn-dropsite-separation-distance 4)
	(set-strategic-number sn-camp-max-distance 24)
	(build mining-camp)
)
#end-if

#load-if-defined DEFEND-WONDER
(defrule
	(up-compare-goal gl-current-age >= gv-castle-up)
	(civilian-population > 25)
	(building-type-count-total mining-camp < 3)
	(can-build mining-camp)
=>
	(build mining-camp)
)
#end-if

(defrule
	(building-type-count-total mining-camp >= 3)
=>
	(up-jump-rule 4)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(strategic-number sn-gold-gatherer-percentage > 0)
	(strategic-number sn-nomad-style-start == 0)
	(goal gl-strategy castle-drop)
	(dropsite-min-distance stone > 3)
	(or	(resource-found stone)
		(building-type-count-total mining-camp < 3))
	(building-type-count-total mining-camp < 3)
	(dropsite-min-distance gold < 4)
	(can-build mining-camp)
=>
	(set-strategic-number sn-dropsite-separation-distance 4)
	(set-strategic-number sn-camp-max-distance 24)
	(build mining-camp)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(strategic-number sn-gold-gatherer-percentage > 0)
	(strategic-number sn-nomad-style-start == 1)
	(or	(goal gl-strategy korean-boom)
		(goal gl-strategy castle-drop))
	(dropsite-min-distance stone > 3)
	(or	(resource-found stone)
		(building-type-count-total mining-camp < 3))
	(dropsite-min-distance gold < 4)
	(can-build mining-camp)
=>
	(set-strategic-number sn-camp-max-distance 45)
	(set-strategic-number sn-dropsite-separation-distance 4)
	(build mining-camp)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(strategic-number sn-nomad-style-start == 1)
	(strategic-number sn-gold-gatherer-percentage > 0)
	(strategic-number sn-stone-gatherer-percentage > 3)
	(dropsite-min-distance stone > 3)
	(or	(resource-found stone)
		(building-type-count-total mining-camp < 3))
	(building-type-count-total mining-camp < 3)
	(dropsite-min-distance gold < 4)
	(can-build mining-camp)
=>
	(set-strategic-number sn-camp-max-distance 45)
	(set-strategic-number sn-dropsite-separation-distance 4)
	(build mining-camp)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(strategic-number sn-nomad-style-start == 0)
	(strategic-number sn-gold-gatherer-percentage > 0)
	(strategic-number sn-stone-gatherer-percentage > 3)
	(dropsite-min-distance stone > 3)
	(or	(resource-found stone)
		(building-type-count-total mining-camp < 3))
	(building-type-count-total mining-camp < 3)
	(dropsite-min-distance gold < 4)
	(can-build mining-camp)
=>
	(set-strategic-number sn-dropsite-separation-distance 4)
	(set-strategic-number sn-camp-max-distance 24)
	(build mining-camp)
)

(defrule
	(up-pending-objects c: mining-camp < 1)
	(up-compare-goal gl-current-age >= gv-castle)
	(cc-players-unit-type-count 0 gold-mine > 8)
	(building-type-count town-center > 2)
	(game-time > 2100)
	(or	(building-type-count-total mining-camp < 6)
		(game-time > 2500))
	(or	(building-type-count-total mining-camp < 8)
		(game-time > 3000))
	(building-type-count-total mining-camp < 11)
	(can-build mining-camp)
=>
	(set-strategic-number sn-dropsite-separation-distance 8)
	(build mining-camp)
)

(defrule
	(building-type-count-total mill >= 2)
=>
	(up-jump-rule 4)
)

(defrule
	(goal gl-normal-milling 1)
	(strategic-number sn-allow-new-build-order >= 1)
	(dropsite-min-distance deer-hunting < 27)
	(up-compare-goal gl-my-villager-count-total > 8)
	(building-type-count-total mill == 0)
	(strategic-number sn-start-with-forage == 0)
	(can-build mill)
=>
	(set-strategic-number sn-preferred-mill-placement 1)
	(build mill)
	(chat-to-player my-player-number "Mill")
	(set-strategic-number sn-maximum-hunt-drop-distance dark-hunt-distance)
)

(defrule
	(goal gl-normal-milling 1)
	(game-time > 10)
	(strategic-number sn-nomad-style-start == 1)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count-total > 5)
	(unit-type-count villager-forager > 0)
	(building-type-count-total mill == 0)
	(can-build mill)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(set-strategic-number sn-preferred-mill-placement 0)
	(build mill)
	(chat-to-player my-player-number "Mill")
)

(defrule
	(strategic-number sn-nomad-style-start == 1)
	(or	(or	(and	(up-compare-goal gl-my-villager-count-total > 10)
				(strategic-number sn-sheep-count < 7))
			(and	(up-compare-goal gl-my-villager-count-total > 6)
				(strategic-number sn-sheep-count < 5)))
		(up-compare-goal gl-my-villager-count-total > 13))
	(dropsite-min-distance deer-hunting < 22)
	(building-type-count-total mill == 0)
	(can-build mill)
=>
	(set-strategic-number sn-preferred-mill-placement 1)
	(build mill)
	(chat-to-player my-player-number "Mill")
)

(defrule
	(strategic-number sn-nomad-style-start == 1)
	(up-compare-goal gl-my-villager-count-total > 8)
	(strategic-number sn-sheep-count < 5)
	(dropsite-min-distance deer-hunting > 7)
	(dropsite-min-distance deer-hunting < 22)
	(unit-type-count villager-forager == 0)
	(game-time > 420)
=>
	(set-strategic-number sn-preferred-mill-placement 1)
	(disable-self)
)

#load-if-not-defined UP-MICHI-STYLE
(defrule
	(strategic-number sn-allow-new-build-order >= -1)
	(strategic-number sn-allow-new-build-order <= 1)
	(up-compare-goal gl-my-villager-count-total > 12)
	(building-type-count-total mill == 0)
	(resource-found food)
	(can-build mill)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(set-strategic-number sn-preferred-mill-placement 0)
	(build mill)
	(set-strategic-number sn-maximum-food-drop-distance 10)
	(chat-to-player my-player-number "Mill")
)
#else
(defrule
	(strategic-number sn-allow-new-build-order >= -1)
	(strategic-number sn-allow-new-build-order <= 1)
	(up-compare-goal gl-my-villager-count-total > 12)
	(building-type-count-total mill == 0)
	(resource-found food)
	(can-build mill)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-preferred-mill-placement 0)
	(build mill)
	(set-strategic-number sn-maximum-food-drop-distance 10)
	(chat-to-player my-player-number "Mill")
)
#end-if

(defrule
	(current-age > feudal-age)
	(building-type-count-total mill > 0)
	(building-type-count-total lumber-camp > 0)
=>
	(up-jump-rule 17)
)

(defrule
	(goal gl-nothing-style-map YES)
=>
	(up-jump-rule 16)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-my-villager-count-total > 16)
	(building-type-count-total mill == 0)
	(can-build mill)
=>
	(set-strategic-number sn-preferred-mill-placement 1)
	(build mill)
	(set-strategic-number sn-maximum-food-drop-distance 10)
	(chat-to-player my-player-number "Mill anyway")
)

(defrule
	(strategic-number sn-allow-new-build-order == 2)
	(or	(up-compare-goal gl-my-villager-count-total > 22)
		(and	(wood-amount > 150)
			(building-type-count-total dock > 0)))
	(building-type-count town-center > 0)
	(building-type-count-total mill == 0)
	(can-build mill)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(set-strategic-number sn-preferred-mill-placement 0)
	(build mill)
	(set-strategic-number sn-maximum-food-drop-distance 10)
	(chat-to-player my-player-number "Mill")
)

(defrule
	(up-compare-goal gl-my-villager-count-total > 10)
	(up-compare-goal gl-current-age <= gv-dark)
	(building-type-count-total mill > 0)
	(building-type-count-total lumber-camp == 0)
	(resource-found wood)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(build lumber-camp)
	(set-strategic-number sn-maximum-wood-drop-distance 5)
	(chat-to-player my-player-number "Lumber camp")
	(enable-timer 10 5)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(up-compare-goal gl-my-villager-count-total > 20)
	(strategic-number sn-camp-max-distance < 17)
	(up-compare-goal gl-current-age <= gv-dark-up)
	(building-type-count-total lumber-camp == 1)
	(building-type-count-total mill > 0)
	(resource-found wood)
	(can-build lumber-camp)
	(nand	(goal gl-DRUSH YES)
		(building-type-count-total barracks < 1))
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(set-strategic-number sn-camp-max-distance 17)
	(build lumber-camp)
	(chat-to-player my-player-number "Second lumber")
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(up-compare-goal gl-my-villager-count-total > 20)
	(strategic-number sn-camp-max-distance <= 24)
	(up-compare-goal gl-current-age <= gv-dark-up)
	(building-type-count-total lumber-camp == 1)
	(building-type-count-total mill > 0)
	(resource-found wood)
	(can-build lumber-camp)
	(nand	(goal gl-DRUSH YES)
		(building-type-count-total barracks < 1))
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(set-strategic-number sn-camp-max-distance 24)
	(build lumber-camp)
	(chat-to-player my-player-number "Second lumber")
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(up-compare-goal gl-my-villager-count-total > 20)
	(strategic-number sn-camp-max-distance > 24)
	(up-compare-goal gl-current-age <= gv-dark-up)
	(building-type-count-total lumber-camp == 1)
	(building-type-count-total mill > 0)
	(resource-found wood)
	(can-build lumber-camp)
	(nand	(goal gl-DRUSH YES)
		(building-type-count-total barracks < 1))
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(build lumber-camp)
	(chat-to-player my-player-number "Second lumber")
)

(defrule
	(current-age == dark-age)
	(up-compare-goal gl-strategy != michi-boom)
	(or	(and	(building-type-count-total town-center > 1)
			(goal DOCK 0))
		(and	(wood-amount >= 375)
			(goal gl-current-age gv-dark-up)))
	(up-compare-goal g:!= gl-strategy flush-overwrite)
	(up-compare-goal g:!= gl-strategy grush)
	(building-type-count-total farm g:< gl-max-farm-count)
	(building-type-count-total farm < 25)
	(wood-amount >= 160)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(goal gl-close-deer YES)
=>
	(up-jump-rule 1)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(building-type-count-total lumber-camp > 0)
	(goal gl-current-age gv-dark)
	(idle-farm-count < 1)
	(up-compare-goal gl-DRUSH != YES)
	(building-type-count-total mill < 2)
	(or	(and	(building-type-count-total farm < 9)
			(and	(building-type-count-total farm > 4)
				(dropsite-min-distance deer-hunting > 27)))
		(wood-amount > 160))
	(building-type-count-total farm < 11)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-current-age <= gv-dark-up)
	(building-type-count-total lumber-camp > 0)
	(up-compare-goal gl-DRUSH != YES)
	(or	(goal gl-strategy korean-boom)
		(goal gl-strategy castle-drop))
	(nand	(building-type-count-total mining-camp < 2)
		(up-compare-goal gl-my-villager-count-total > 25))
	(or	(dropsite-min-distance deer-hunting > 27)
		(dropsite-min-distance deer-hunting < 5))
	(building-type-count-total farm < 6)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(up-compare-goal gl-current-age <= gv-dark-up)
	(up-compare-goal gl-DRUSH != YES)
	(or	(dropsite-min-distance deer-hunting > 27)
		(or	(dropsite-min-distance deer-hunting < 5)
			(building-type-count-total mill > 1)))
	(building-type-count-total lumber-camp > 0)
	(or	(goal gl-eew-strategy-type fast-imp)
		(goal gl-strategy-type FC2))
	(building-type-count-total farm < 8)
	(idle-farm-count < 1)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(or	(building-type-count-total town-center > 1)
		(strategic-number sn-nomad-style-start == 1))
	(current-age == dark-age)
	(goal gl-current-age gv-dark)
	(building-type-count-total farm > 3)
	(building-type-count-total lumber-camp > 0)
	(idle-farm-count < 1)
	(can-build farm)
=>
	(build farm)
)

#load-if-not-defined UP-MICHI-STYLE
(defrule
	(goal gl-normal-milling 1)
	(game-time >= berry-walk-time)
	(building-type-count-total town-center > 0)
	(or	(up-compare-goal gl-my-villager-count-total > 7)
		(unit-type-count villager-forager > 0))
	(building-type-count-total mill == 0)
	(or	(resource-found food)
		(up-compare-goal gl-my-villager-count-total > 17))
	(can-build mill)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(build mill)
	(set-strategic-number sn-maximum-food-drop-distance 10)
	(chat-to-player my-player-number "Mill")
)
#else
(defrule
	(goal gl-normal-milling 1)
	(game-time >= berry-walk-time)
	(building-type-count-total town-center > 0)
	(or	(up-compare-goal gl-my-villager-count-total > 7)
		(unit-type-count villager-forager > 0))
	(building-type-count-total mill == 0)
	(or	(resource-found food)
		(up-compare-goal gl-my-villager-count-total > 17))
	(can-build mill)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(build mill)
	(set-strategic-number sn-maximum-food-drop-distance 10)
	(chat-to-player my-player-number "Mill")
)
#end-if

(defrule
	(goal gl-normal-milling 1)
	(building-type-count-total town-center > 0)
	(game-time > no-sheep-mill-time); 15 in low resources start, else 60
	(or	(and	(strategic-number sn-nomad-style-start == 0)
			(resource-found food))
		(wood-amount > 250))
	(unit-type-count villager-shepherd == 0)
	(unit-type-count-total sheep == 0)
	(building-type-count-total mill == 0)
	(can-build mill)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(build mill)
	(set-strategic-number sn-maximum-food-drop-distance 10)
	(chat-to-player my-player-number "No sheep - mill")
)

(defrule
	(building-type-count town-center > 0)
	(game-time > 120)
	(wood-amount > 250)
	(unit-type-count-total sheep == 0)
	(building-type-count-total mill == 0)
	(dropsite-min-distance food == -1)
	(can-build mill)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(build mill)
	(set-strategic-number sn-maximum-food-drop-distance 10)
	(chat-to-player my-player-number "Mill anyway")
)

(defrule
	(building-type-count-total town-center > 0)
	(game-time > 330)
	(or	(building-type-count-total dock > 0)
		(game-time > 570))
	(or	(map-type nomad)
		(up-compare-const gv-nomad-style == 1))
	(building-type-count-total mill == 0)
	(can-build mill)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(build mill)
)

#load-if-not-defined UP-MICHI-STYLE
(defrule
	(or	(up-compare-goal gl-current-age != gv-dark)
		(or	(up-compare-goal DOCK != 0)
			(or	(building-type-count-total lumber-camp < 1)
				(or	(building-type-count-total town-center < 1)
					(or	(goal gl-DRUSH YES)
						(building-type-count-total farm >= 9))))))
=>
	(up-jump-rule 2)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(or	(and	(dropsite-min-distance deer-hunting > 27)
			(and	(building-type-count-total mill < 2)
				(up-compare-goal gl-close-deer != YES)))
		(or	(building-type-count-total farm < 2)
			(and	(building-type-count-total mill > 1)
				(and	(up-compare-goal gl-feudal-infantry > 0)
					(building-type-count-total farm < 4)))))
	(can-build farm)
=>
	(build farm)
)

(defrule
	(strategic-number sn-allow-new-build-order == 1); >= 1
	(or	(up-compare-goal gl-strategy-type >= FC)
		(or	(building-type-count-total farm < 2)
			(and	(building-type-count-total farm < 4)
				(strategic-number sn-sheep-count < 7))))
	(building-type-count-total farm < 6)
	(or	(nand	(dropsite-min-distance deer-hunting <= 27)
			(building-type-count-total mill < 2))
		(goal gl-close-deer YES))
	(can-build farm)
=>
	(build farm)
)
#else
(defrule
	(strategic-number sn-allow-new-build-order == 1)
	(building-type-count-total town-center > 0)
	(goal gl-current-age gv-dark)
	(building-type-count-total mill < 3)
	(or	(and	(building-type-count-total farm < 4)
			(and	(game-time > 600)
				(dropsite-min-distance deer-hunting == 255)))
		(up-compare-goal gl-heavy-resources != HIGH))
	(building-type-count-total farm < 6)
	(building-type-count-total lumber-camp >= 1)
	(can-build farm)
=>
	(build farm)
)
#end-if

#load-if-not-defined UP-MICHI-STYLE
(defrule
	(up-compare-goal gl-nothing-style-map != YES)
	(up-compare-goal gl-current-age >= gv-castle)
	(building-type-count-total mill > 0)
	(building-type-count-total lumber-camp > 0)
=>
	(up-jump-rule 9)
)

(defrule
	(goal gl-nothing-style-map YES)
=>
	(up-jump-rule 11)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(building-type-count-total town-center > 0)
	(goal gl-current-age gv-dark)
	(strategic-number sn-boars-on-map == NONE)
	(up-compare-goal gl-DRUSH != YES)
	(goal DOCK 0)
	(or	(nand	(dropsite-min-distance deer-hunting <= 27)
			(building-type-count-total mill < 2))
		(goal gl-close-deer YES))
	(idle-farm-count < 1)
	(up-pending-objects c: farm < 1)
	(building-type-count-total lumber-camp >= 1)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(building-type-count-total town-center > 0)
	(goal gl-current-age gv-dark)
	(goal gl-DRUSH YES)
	(building-type-count-total barracks > 0)
	(building-type-count-total farm < 6)
	(or	(dropsite-min-distance deer-hunting > 27); +mill <2
		(or	(building-type-count-total farm < 3)
			(or	(wood-amount > 160)
				(goal gl-close-deer YES))))
	(building-type-count-total lumber-camp >= 1)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(building-type-count-total town-center > 0)
	(goal gl-current-age gv-dark)
	(not	(goal DOCK 0))
	(unit-type-count-total fishing-ship > 11)
	(dropsite-min-distance deer-hunting > 27)
	(building-type-count-total mill < 2)
	(building-type-count-total farm < 7)
	(building-type-count-total lumber-camp >= 1)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(building-type-count-total town-center > 0)
	(goal gl-current-age gv-dark)
	(not	(goal DOCK 0))
	(or	(game-time > 300)
		(starting-resources == low-resources))
	(wood-amount > 200)
	(or	(building-type-count-total farm < 6)
		(goal gl-boar-eaten 0))
	(building-type-count-total farm < 7)
	(building-type-count-total lumber-camp >= 1)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(strategic-number sn-allow-new-build-order >= 1)
	(building-type-count-total town-center > 0)
	(goal gl-current-age gv-dark)
	(not	(goal DOCK 0))
	(building-type-count-total dock > 1)
	(wood-amount >= dock-farm-wood)
	(building-type-count-total farm < 9)
	(or	(idle-farm-count <= 1)
		(building-type-count-total farm < 7))
	(building-type-count-total lumber-camp >= 1)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(up-compare-goal gl-current-age <= gv-dark-up)
	(dropsite-min-distance deer-hunting <= 27)
=>
	(up-jump-rule 1)
)

(defrule
	(up-compare-goal gl-current-age <= gv-dark-up)
	(up-compare-goal gl-strategy != fast-eagles)
	(or	(goal gl-current-age gv-dark)
		(and	(goal gl-strategy turkish-fast-imp)
			(building-type-count-total farm < 11)))
	(up-compare-goal gl-DRUSH != YES)
	(idle-farm-count < 1)
	(unit-type-count villager-hunter == 0)
	(unit-type-count villager-forager == 0)
	(up-compare-goal gl-my-villager-count-total > 21)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(up-compare-goal gl-current-age >= gv-dark-up)
	(goal gl-strategy flush)
	(or	(and	(current-age == dark-age)
			(and	(wood-amount >= 375)
				(food-amount < 350)))
		(and	(goal gl-feudal-infantry men-at-arms)
			(building-type-count-total archery-range > 0)))
	(idle-farm-count < 1)
	(building-type-count-total farm < 18)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(or	(and	(goal gl-current-age gv-feudal)
			(and	(goal gl-strategy xbow-rush)
				(building-type-count-total farm g:< gl-max-farm-count)))
		(and	(goal gl-eew-strategy-type fast-imp)
			(and	(goal gl-eagles flush-counter-eagles)
				(up-compare-goal gl-current-age >= gv-feudal-up))))
	(building-type-count-total blacksmith > zero-value)
	(idle-farm-count < 1)
	(building-type-count-total farm < 16)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(up-pending-objects c: mining-camp < 1)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(goal gl-strategy flush)
	(strategic-number sn-skip-first-mining-camp == 0)
	(building-type-count-total barracks > 0)
	(building-type-count-total mining-camp < 2)
	(goal gl-feudal-trash 0)
	(dropsite-min-distance gold > 3)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(build mining-camp)
)
#end-if

(defrule
	(up-compare-goal gl-current-age >= gv-dark-up)
	(or	(not	(goal gl-strategy flush))
		(players-unit-type-count any-enemy militiaman-line > 2))
	(or	(strategic-number sn-skip-first-mining-camp == 0)
		(timer-triggered 8))
	(or	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
		(up-compare-goal gl-current-age >= gv-feudal-up))
	(building-type-count-total mining-camp < 2)
	(dropsite-min-distance gold > 3)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(build mining-camp)
)

#load-if-defined REGICIDE
(defrule
	(up-compare-goal gl-nothing-style-map != YES)
	(up-compare-goal gl-my-villager-count-total >= 20)
	(building-type-count-total mining-camp < 2)
	(dropsite-min-distance gold > 3)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(build mining-camp)
)
#end-if

(defrule
	(goal gl-current-age gv-dark)
	(strategic-number sn-nomad-style-start == 1)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count-total > 5)
	(dropsite-min-distance wood > 4)
	(building-type-count-total lumber-camp == 0)
	(or	(map-type nomad)
		(up-compare-const gv-nomad-style == 1))
	(resource-found wood)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(set-strategic-number sn-camp-max-distance 27)
	(build lumber-camp)
)

#load-if-not-defined WONDER-RACE
#load-if-not-defined DEFEND-WONDER
(defrule
	(goal gl-TC-lost NO)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1999)
	(or	(goal gl-strategy flush)
		(or	(goal gl-strategy knight-archer)
			(or	(goal gl-strategy heavy-krush)
				(or	(goal gl-strategy CA-boom)
					(goal gl-strategy xbow-rush)))))
	(building-type-count-total barracks < 1)
	(can-build barracks)
=>
	(build barracks)
)

#load-if-not-defined MIGRATION-MAP
(defrule
	(or	(up-compare-goal gl-current-age >= gv-dark-up)
		(goal gl-feudal-infantry men-at-arms))
	(or	(and	(game-time > 1800)
			(goal DOCK 2))
		(or	(and	(goal gl-strategy CA-rush)
				(up-compare-goal gl-current-age <= gv-feudal))
			(goal gl-strategy xbow-boom)))
	(up-compare-goal gl-my-villager-count-total > barracks-villagers); 26 with low resource start, 21 with medium, 14 with high/turbo random
	(building-type-count-total barracks < 1)
	(can-build barracks)
=>
	(build barracks)
)
#end-if
#else
(defrule
	(goal gl-TC-lost NO)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1999)
	(game-time > 660)
	(or	(goal gl-strategy flush)
		(or	(goal gl-strategy knight-archer)
			(or	(goal gl-strategy heavy-krush)
				(or	(goal gl-strategy CA-boom)
					(goal gl-strategy xbow-rush)))))
	(building-type-count-total barracks < 1)
	(can-build barracks)
=>
	(build barracks)
)
#end-if
#end-if

; ============== BUILDINGS - FEUDAL

#load-if-defined KOREAN-CIV
(defrule
	(goal gl-strategy korean-boom)
	(current-age == feudal-age)
	(or	(players-military-population any-enemy > 1)
		(and	(up-compare-goal gl-current-age >= gv-feudal-up)
			(strategic-number sn-build-towers-at-home == 0)))
	(building-type-count-total watch-tower < 7)
	(can-build watch-tower)
=>
	(set-strategic-number sn-maximum-town-size 16)
	(build watch-tower)
	(set-strategic-number sn-build-towers-at-home 1)
	(chat-to-player my-player-number "Tower")
)

(defrule
	(goal gl-strategy korean-boom)
	(current-age == castle-age)
	(or	(stone-amount > 224)
		(building-type-count-total town-center > 2))
	(building-type-count-total watch-tower < 7)
	(strategic-number sn-maximum-town-size < 16)
	(can-build watch-tower)
=>
	(set-strategic-number sn-maximum-town-size 16)
)

(defrule
	(goal gl-strategy korean-boom)
	(current-age == castle-age)
	(or	(stone-amount > 224)
		(building-type-count-total town-center > 2))
	(building-type-count-total watch-tower < 7)
	(strategic-number sn-maximum-town-size > 15)
	(can-build watch-tower)
=>
	(build watch-tower)
	(set-strategic-number sn-build-towers-at-home 1)
	(chat-to-player my-player-number "Tower")
)
#end-if

#load-if-not-defined TURKISH-CIV
(defrule
	(or	(and	(goal gl-advanced-archery heavy-archers)
			(and	(wood-amount > 500)
				(and	(building-type-count-total barracks < 3)
					(building-type-count-total town-center > 2))))
		(and	(goal gl-strategy-class basic-class)
			(goal gl-eagles extra-eagles)))
	(building-type-count-total barracks < 4)
	(current-age >= castle-age)
	(can-build barracks)
=>
	(build barracks)
)

(defrule
	(goal gl-TC-lost NO)
	(players-unit-type-count any-enemy knight-line > 4)
	(or	(goal gl-eew-strategy-type boom)
		(and	(up-compare-goal gl-current-age <= gv-feudal)
			(and	(building-type-count-total barracks < 2)
				(up-compare-goal gl-strategy-type <= controlled-flush))))
	(not	(goal gl-strategy krush))
	(building-type-count-total barracks < 3)
	(can-build barracks)
=>
	(build barracks)
)
#else
(defrule
	(goal gl-strategy default)
	(game-time > 1200)
	(current-age >= castle-age)
	(building-type-count-total town-center > 2)
	(or	(building-type-count-total stable < 2)
		(building-type-count-total town-center > 3))
	(building-type-count-total stable < 4)
	(can-build stable)
=>
	(build stable)
)
#end-if

#load-if-not-defined MIGRATION-MAP
(defrule
	(goal gl-TC-lost NO)
	(up-compare-goal gl-scattered-islets-style <= 0)
	(or	(game-time > 4000)
		(or	(and	(game-time > 2400)
				(goal gl-strategy-class basic-class))
			(and	(building-type-count-total barracks < 1)
				(not	(building-available archery-range)))))
	(game-time > 1800)
	(building-type-count-total barracks < 3)
	(can-build barracks)
=>
	(build barracks)
)
#else
(defrule
	(goal gl-TC-lost NO)
	(up-compare-goal gl-migration-progress >= 4)
	(or	(game-time > 4000)
		(or	(and	(game-time > 2400)
				(goal gl-strategy-class basic-class))
			(and	(building-type-count-total barracks < 1)
				(not	(building-available archery-range)))))
	(game-time > 1800)
	(building-type-count-total barracks < 3)
	(can-build barracks)
=>
	(build barracks)
)
#end-if

#load-if-defined KOREAN-CIV
(defrule
	(goal gl-strategy korean-boom)
	(or	(building-type-count-total barracks < 1)
		(and	(building-type-count-total barracks < 2)
			(building-type-count-total town-center > 1)))
	(or	(players-unit-type-count focus-player knight-line > 3)
		(players-unit-type-count focus-player battering-ram-line > 0))
	(can-build barracks)
=>
	(build barracks)
)
#end-if

#load-if-defined SARACEN-CIV
(defrule
	(or	(goal gl-strategy heavy-krush)
		(and	(or	(strategic-number sn-allow-resource-spending > 2)
				(and	(building-type-count-total town-center > 2)
					(strategic-number sn-allow-resource-spending > 1)))
			(and	(building-type-count-total stable < 1)
				(unit-type-count-total mameluke-line > 6))))
	(building-type-count-total stable < 2)
	(building-type-count-total market > 0)
	(can-build stable)
=>
	(build stable)
)
#end-if

#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(or	(building-type-count-total stable > 1)
		(wood-amount < 175))
=>
	(up-jump-rule 6)
)

(defrule
	(game-time > 1400)
	(up-compare-const gv-feudal-age-end == 1)
	(or	(up-research-status c: ri-bloodlines >= research-pending)
		(research-available ri-bloodlines))
	(or	(and	(building-type-count-total stable < 2)
			(nor	(civ-selected gothic)
				(civ-selected japanese)))
		(up-compare-goal gl-my-villager-count-total > 80))
	(building-type-count-total stable < 4)
	(can-build stable)
=>
	(build stable)
)

(defrule
	(or	(and	(goal gl-strategy knight-archer)
			(building-type-count-total stable < 1))
		(and	(goal gl-strategy heavy-krush)
			(building-type-count-total market > 0)))
	(or	(building-type-count-total stable < 1)
		(up-compare-goal gl-current-age >= gv-feudal-up))
	(building-type-count-total stable < 2)
	(can-build stable)
=>
	(build stable)
)

(defrule
	(game-time > 180); For weird starts
	(or	(up-compare-goal gl-advanced-cavalry != 0)
		(and	(up-compare-goal gl-current-age >= gv-castle-up)
			(and	(goal gl-strategy-class basic-class)
				(research-completed ri-light-cavalry))))
	(or	(building-type-count-total stable < 1)
		(building-type-count-total town-center > 1))
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(building-type-count-total stable < 2)
	(can-build stable)
=>
	(build stable)
)

(defrule
	(goal gl-strategy-class basic-class)
	(game-time > 600)
	(nand	(up-compare-goal gl-current-age >= gv-feudal-up)
		(building-type-count-total town-center < 2))
	(or	(and	(players-unit-type-count focus-player monk > 3)
			(building-type-count-total stable < 1))
		(or	(players-unit-type-count focus-player monk > 6)
			(research-completed ri-heavy-camel)))
	(building-type-count-total stable < 2)
	(can-build stable)
=>
	(build stable)
)


(defrule
	(strategic-number sn-allow-resource-spending > 1)
	(or	(unit-type-count-total cavalry-archer-line > 20)
		(or	(unit-type-count-total mangudai-line > 20)
			(or	(unit-type-count-total conquistador-line > 15)
				(and	(unit-type-count-total war-wagon-line > 12)
					(strategic-number sn-allow-resource-spending > 3)))))
	(building-type-count-total town-center > 2)
	(building-type-count-total stable < 1)
	(can-build stable)
=>
	(build stable)
)

(defrule
	(goal gl-strategy default)
	(game-time > 600)
	(or	(and	(up-compare-goal gl-current-age >= gv-feudal-up)
			(town-under-attack))
		(building-type-count-total town-center > 1))
	(or	(and	(up-compare-goal gl-current-age <= gv-castle)
			(building-type-count-total stable < 1))
		(game-time > 3100))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(building-type-count-total stable < 2)
	(can-build stable)
=>
	(build stable)
)

(defrule
	(goal gl-strategy-class basic-class)
	(game-time > relative-gt-3000)
	(or	(research-completed ri-hussar)
		(research-completed ri-paladin))
	(wood-amount > 400)
	(strategic-number sn-allow-resource-spending > 5)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(building-type-count-total stable < 8)
	(can-build stable)
=>
	(build stable)
)
#end-if
#end-if

(defrule
	(goal gl-strategy-class basic-class)
	(or	(and	(game-time > relative-gt-3000)
			(wood-amount > 400))
		(players-unit-type-count any-enemy paladin > 10))
	(or	(research-completed ri-champion)
		(or	(research-completed ri-halberdier)
			(research-completed ri-elite-eagle-warrior)))
	(strategic-number sn-allow-resource-spending > 5)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(building-type-count-total barracks < 10)
	(can-build barracks)
=>
	(build barracks)
)

(defrule
	(goal gl-strategy-class basic-class)
	(game-time > relative-gt-3000)
	(or	(research-completed ri-arbalest)
		(or	(research-completed ri-bracer)
			(unit-available hand-cannoneer)))
	(wood-amount > 400)
	(strategic-number sn-allow-resource-spending > 5)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(building-type-count-total archery-range < 10)
	(can-build archery-range)
=>
	(build archery-range)
)

(defrule
	(building-type-count town-center > 0)
	(or	(building-type-count-total mill < 5)
		(and	(building-type-count-total farm > 60)
			(and	(wood-amount > 350)
				(strategic-number sn-allow-resource-spending > 5))))
	(building-type-count-total mill < 7)
	(building-type-count-total farm > 30)
	(can-build mill)
=>
	(set-strategic-number sn-mill-max-distance 24)
	(build mill)
)

(defrule
	(game-time > 2400)
	(up-compare-goal gl-my-villager-count > 90)
	(building-type-count-total mill < 8)
	(wood-amount > 500)
	(building-type-count town-center > 3)
	(strategic-number sn-food-gatherer-percentage > 42)
	(building-type-count-total farm < 30)
	(can-build mill)
=>
	(set-strategic-number sn-mill-max-distance 30)
	(build mill)
)

(defrule
	(building-type-count town-center > 0)
	(nand	(building-type-count-total blacksmith < one-value)
		(building-type-count-total farm > 11))
	(research-completed ri-horse-collar)
	(or	(and	(building-type-count-total mill == 1)
			(building-type-count-total farm > 15))
		(and	(building-type-count-total mill == 2)
			(building-type-count-total farm > 23)))
	(can-build mill)
=>
	(build mill)
)

(defrule
	(goal gl-TC-lost NO)
	(up-compare-goal gl-current-age >= gv-feudal)
	(or	(and	(goal gl-advanced-infantry heavy-swordsmen)
			(nand	(building-type-count-total barracks > 0)
				(building-type-count-total town-center < 2)))
		(and	(building-type-count-total barracks < 2)
			(and	(players-unit-type-count any-enemy knight-line > 0)
				(up-compare-goal gl-current-age <= gv-feudal))))
	(building-type-count-total barracks < 3)
	(can-build barracks)
=>
	(build barracks)
)

#load-if-not-defined TURKISH-CIV
#load-if-not-defined MIGRATION-MAP
(defrule
	(goal gl-TC-lost NO)
	(up-compare-goal gl-current-age >= gv-feudal)
	(goal gl-strategy-class basic-class)
	(strategic-number sn-allow-resource-spending > 0)
	(or	(and	(or	(players-unit-type-count focus-player knight-line > 5)
				(players-unit-type-count target-player knight-line > 5))
			(up-compare-goal gl-my-villager-count-total > 50))
		(and	(goal gl-advanced-infantry heavy-swordsmen)
			(town-under-attack)))
	(building-type-count-total barracks < 2)
	(can-build barracks)
=>
	(build barracks)
)
#end-if
#else
(defrule
	(goal gl-strategy turkish-fast-imp)
	(up-compare-goal gl-current-age >= gv-castle-up)
	(or	(and	(players-unit-type-count focus-player monk > 3)
			(building-type-count-total stable < 1))
		(or	(players-unit-type-count focus-player monk > 6)
			(game-time > 3600)))
	(building-type-count-total stable < 2)
	(can-build stable)
=>
	(build stable)
)

(defrule
	(goal gl-TC-lost NO)
	(goal gl-strategy-class basic-class)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(and	(strategic-number sn-allow-resource-spending > 1)
			(players-unit-type-count focus-player knight-line > 5))
		(goal gl-strategy default))
	(building-type-count-total stable < 3)
	(or	(and	(up-compare-goal gl-my-villager-count-total > 90)
			(strategic-number sn-allow-resource-spending > 2))
		(building-type-count-total stable < 1))
	(can-build stable)
=>
	(build stable)
)
#end-if

(defrule
	(or	(and	(goal gl-eew-strategy-type fast-imp)
			(and	(goal gl-eagles heavy-eagles)
				(research-completed ri-plate-mail)))
		(and	(goal gl-advanced-infantry heavy-swordsmen)
			(up-compare-goal gl-my-villager-count-total > 75)))
	(up-compare-goal gl-my-villager-count-total > 55)
	(building-type-count-total barracks < 6)
	(can-build barracks)
=>
	(build barracks)
)

#load-if-not-defined MIGRATION-MAP
(defrule
	(goal gl-TC-lost NO)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(building-type-count-total barracks < 2)
	(or	(and	(goal gl-advanced-trash YES)
			(nor	(players-civ every-enemy aztec)
				(players-civ every-enemy mayan)))
		(and	(building-type-count-total barracks < 1)
			(or	(players-unit-type-count focus-player monk > 3)
				(goal gl-strategy skirm-boom))))
	(can-build barracks)
=>
	(build barracks)
)
#end-if

(defrule
	(or	(up-compare-goal gl-my-villager-count-total > 40)
		(and	(game-time > 1200)
			(up-compare-goal gl-my-villager-count-total >= imperial-villager-cap)))
	(resource-found wood)
=>
	(enable-timer 8 0)
	(disable-self)
)

(defrule
	(up-pending-objects c: mining-camp < 1)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(goal gl-feudal-trash 0)
	(nand	(strategic-number sn-skip-first-mining-camp == 1)
		(up-compare-goal gl-current-age <= gv-feudal))
	(cc-players-unit-type-count 0 gold-mine > 2)
	(up-compare-goal gl-my-villager-count-total > 22)
	(building-type-count-total mining-camp < 13)
	(dropsite-min-distance gold > 4)
	(dropsite-min-distance gold < 255)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(set-strategic-number sn-dropsite-separation-distance 10)
	(build mining-camp)
)

(defrule
	(or	(goal gl-strategy xbow-rush)
		(goal gl-strategy CA-rush))
	(or	(building-type-count-total archery-range > 2)
		(and	(town-under-attack)
			(timer-triggered 9)))
	(building-type-count-total mining-camp < 3)
	(dropsite-min-distance gold >= 0)
	(dropsite-min-distance gold < 4)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(set-strategic-number sn-dropsite-separation-distance 6)
	(set-strategic-number sn-camp-max-distance 32)
	(build mining-camp)
)

(defrule
	(or	(dropsite-min-distance wood < 0)
		(dropsite-min-distance wood >= 255))
=>
	(up-jump-rule 1)
)

(defrule
	(building-type-count-total lumber-camp < 3)
	(up-compare-goal gl-scattered-islets-style <= 0)
	(up-compare-goal gl-current-age >= gv-feudal)
	(current-age-time > 60)
	(or	(and	(goal gl-strategy default)
			(and	(current-age == feudal-age)
				(current-age-time > 240)))
		(dropsite-min-distance wood > 2))
	(can-build lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(set-strategic-number sn-camp-max-distance 27)
	(build lumber-camp)
)

(defrule
	(timer-triggered 8)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(up-compare-goal CASTLE != 0)
	(or	(building-type-count-total mining-camp < 12)
		(wood-amount > 400))
	(up-compare-goal gl-my-villager-count-total > 22)
	(or	(up-pending-objects c: mining-camp < 1)
		(strategic-number sn-defer-dropsite-update == 0))
	(dropsite-min-distance stone > 3)
	(dropsite-min-distance stone < 255)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(set-strategic-number sn-dropsite-separation-distance 6)
	(build mining-camp)
)

(defrule
	(or	(not	(timer-triggered 8))
		(up-compare-goal gl-scattered-islets-style >= 1))
=>
	(up-jump-rule 3)
)

(defrule
	(timer-triggered 8)
	(up-compare-goal gl-my-villager-count-total > 22)
	(game-time < 1800)
	(dropsite-min-distance wood >= 0)
	(dropsite-min-distance wood < 255)
	(current-age <= castle-age)
	(resource-found wood)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(enable-timer 8 360)
	(build lumber-camp)
)

(defrule
	(timer-triggered 8)
	(up-compare-goal gl-my-villager-count-total > 22)
	(game-time >= 1800)
	(dropsite-min-distance wood >= 0)
	(dropsite-min-distance wood < 255)
	(current-age <= castle-age)
	(civilian-population < 100)
	(resource-found wood)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(enable-timer 8 220)
	(build lumber-camp)
)

(defrule
	(timer-triggered 8)
	(up-compare-goal gl-my-villager-count-total > 22)
	(dropsite-min-distance wood >= 0)
	(dropsite-min-distance wood < 255)
	(or	(current-age == imperial-age)
		(and	(game-time >= 1800)
			(civilian-population >= 100)))
	(resource-found wood)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(enable-timer 8 130)
	(build lumber-camp)
)

#load-if-defined CELTIC-CIV
(defrule
	(up-compare-goal gl-current-age > gv-dark-up)
	(building-type-count-total mining-camp < 2)
	(current-age == castle-age)
	(goal gl-strategy scorpion-rush)
	(dropsite-min-distance gold >= 0)
	(dropsite-min-distance gold < 255)
	(up-compare-goal gl-my-villager-count-total > 22)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(set-strategic-number sn-dropsite-separation-distance 6)
	(build mining-camp)
)
#end-if

(defrule
	(or	(goal gl-strategy-class basic-class)
		(goal gl-eew-strategy-type boom))
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(strategic-number sn-stone-gatherer-percentage == 0)
	(or	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
		(stone-amount == 0))
	(stone-amount < 200)
	(or	(building-type-count-total town-center < 2)
		(stone-amount < 100))
	(building-type-count-total town-center < 3)
=>
	(set-strategic-number sn-stone-gatherer-percentage 9)
)

(defrule
	(or	(goal gl-strategy-class basic-class)
		(goal gl-eew-strategy-type boom))
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal CASTLE 0)
	(or	(stone-amount >= 200)
		(and	(stone-amount >= 100)
			(building-type-count-total town-center > 1)))
	(strategic-number sn-stone-gatherer-percentage == 9)
=>
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(up-retask-gatherers stone c: 6)
)

#load-if-not-defined UP-MICHI-STYLE
(defrule
	(up-compare-goal gl-nothing-style-map != YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(game-time > 1800); 1600
	(or	(and	(strategic-number sn-stone-gatherer-percentage > 0)
			(or	(dropsite-min-distance stone > 4)
				(building-type-count-total mining-camp < 2)))
		(building-type-count-total town-center > 2))
	(building-type-count-total mining-camp < 5)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(set-strategic-number sn-dropsite-separation-distance 6)
	(build mining-camp)
)

(defrule
	(up-compare-goal gl-nothing-style-map != YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(stone-amount < 100)
	(building-type-count-total town-center > 1)
	(or	(and	(strategic-number sn-stone-gatherer-percentage > 0)
			(or	(dropsite-min-distance stone > 4)
				(building-type-count-total mining-camp < 2)))
		(building-type-count-total town-center > 3)); 2
	(building-type-count-total mining-camp < 5)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(set-strategic-number sn-dropsite-separation-distance 6)
	(build mining-camp)
)
#else
(defrule
	(up-compare-goal gl-nothing-style-map != YES)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(building-type-count town-center > 0)
	(or	(and	(strategic-number sn-stone-gatherer-percentage > 0)
			(dropsite-min-distance stone > 3))
		(and	(building-type-count-total town-center > 4)
			(game-time > 1800)))
	(building-type-count-total mining-camp < 5)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(set-strategic-number sn-dropsite-separation-distance 6)
	(build mining-camp)
)
#end-if

#load-if-not-defined UP-MICHI-STYLE
(defrule
	(goal gl-strategy turkish-fast-imp)
	(building-type-count-total town-center > 0)
	(or	(up-compare-goal gl-current-age >= gv-feudal-up)
		(and	(building-type-count-total farm < 7)
			(building-type-count-total blacksmith > 0)))
	(or	(wood-amount > 235)
		(building-type-count-total farm < 9))
	(idle-farm-count < 1)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(goal gl-strategy-type basic-flush)
	(goal gl-current-age gv-feudal)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(or	(and	(research-completed ri-horse-collar)
			(building-type-count-total farm g:< gl-max-farm-count))
		(and	(building-type-count-total farm < 7)
			(current-age-time > 30)))
	(nand	(goal gl-strategy sling)
		(building-type-count-total market == 0))
	(can-build farm)
=>
	(build farm)
)

(defrule
	(goal gl-strategy-type basic-flush)
	(current-age == feudal-age)
	(strategic-number sn-minimum-water-body-size-for-dock != 998)
	(building-type-count-total farm g:< gl-max-farm-count)
	(or	(building-type-count-total barracks > 0)
		(goal gl-strategy sling))
	(or	(building-type-count-total stable > 0)
		(or	(building-type-count-total archery-range > 1)
			(or	(goal gl-feudal-infantry men-at-arms)
				(goal gl-strategy sling))))
	(can-build farm)
=>
	(build farm)
)

#load-if-not-defined WONDER-RACE
#load-if-not-defined AZTEC-CIV
(defrule
	(up-compare-goal gl-strategy-type >= FC)
	(or	(strategic-number sn-minimum-water-body-size-for-dock == 998)
		(food-amount < 550))
	(food-amount < 800)
	(building-type-count-total farm g:< gl-max-farm-count)
	(goal gl-current-age gv-feudal); Feudal, feudal-up
	(building-type-count-total blacksmith > 0)
	(or	(building-type-count-total market > 0)
		(or	(building-type-count-total stable > 0)
			(building-type-count-total archery-range > 0)))
	(idle-farm-count < 1)
	(can-build farm)
=>
	(build farm)
)
#else
(defrule
	(up-compare-goal gl-strategy-type >= FC)
	(up-compare-goal gl-strategy != fast-eagles)
	(or	(strategic-number sn-minimum-water-body-size-for-dock == 998)
		(food-amount < 550))
	(food-amount < 800)
	(building-type-count-total farm g:< gl-max-farm-count)
	(goal gl-current-age gv-feudal)
	(building-type-count-total blacksmith > 0)
	(or	(building-type-count-total market > 0)
		(building-type-count-total archery-range > 0))
	(idle-farm-count < 1)
	(can-build farm)
=>
	(build farm)
)
#end-if
#end-if

#load-if-not-defined FEUDAL-AGE-START
(defrule
	(up-compare-goal gl-strategy != fast-eagles)
	(or	(goal gl-strategy-class basic-class)
		(and	(building-type-count-total farm < 6)
			(up-compare-goal gl-strategy-type >= FC)))
	(goal DOCK 0)
	(current-age == feudal-age)
	(up-compare-goal gl-current-age >= gv-feudal)
	(current-age-time > 150)
	(building-type-count-total farm g:< gl-max-farm-count)
	(idle-farm-count <= 1)
	(can-build farm)
=>
	(build farm)
)
#else
(defrule
	(up-compare-goal gl-strategy != fast-eagles)
	(or	(goal gl-strategy-class basic-class)
		(and	(building-type-count-total farm < 6)
			(up-compare-goal gl-strategy-type >= FC)))
	(goal DOCK 0)
	(current-age == feudal-age)
	(up-compare-goal gl-current-age >= gv-feudal)
	(current-age-time > 150)
	(idle-farm-count <= 1)
	(building-type-count-total farm < 8)
	(can-build farm)
=>
	(build farm)
)
#end-if

#load-if-defined DARK-AGE-START
(defrule
	(or	(goal gl-eew-strategy-type fast-imp)
		(goal gl-strategy korean-boom))
	(or	(current-age == feudal-age)
		(building-type-count-total farm < 10))
	(nand	(goal gl-eagles flush-counter-eagles)
		(building-type-count-total barracks < 1))
	(or	(up-compare-goal gl-current-age <= gv-feudal)
		(building-type-count-total mining-camp >= 1))
	(research-completed ri-horse-collar)
	(building-type-count-total farm g:< gl-max-farm-count)
	(can-build farm)
=>
	(build farm)
)
#else
(defrule
	(or	(goal gl-eew-strategy-type fast-imp)
		(goal gl-strategy korean-boom))
	(or	(building-type-count-total farm < 8)
		(current-age > feudal-age))
	(building-type-count-total farm < 10)
	(nand	(goal gl-eagles flush-counter-eagles)
		(building-type-count-total barracks < 1))
	(up-compare-goal gl-current-age >= gv-feudal)
	(building-type-count-total mining-camp >= 1)
	(research-completed ri-horse-collar)
	(building-type-count-total farm g:< gl-max-farm-count)
	(can-build farm)
=>
	(build farm)
)
#end-if

(defrule
	(goal gl-strategy xbow-rush)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(building-type-count-total farm < 7)
		(or	(and	(building-type-count-total farm < 10)
				(not	(research-completed ri-bodkin-arrow)))
			(and	(building-type-count-total town-center > 1)
				(and	(building-type-count-total farm g:< gl-max-farm-count)
					(building-type-count-total farm < 17)))))
	(can-build farm)
=>
	(build farm)
)
#else
(defrule
	(goal gl-strategy michi-boom)
	(up-compare-goal gl-current-age >= gv-castle)
	(building-type-count-total farm g:< gl-max-farm-count)
	(up-pending-objects c: farm < 3)
	(or	(research-completed ri-heavy-plow)
		(and	(wood-amount < 125)
			(and	(food-amount < 125)
				(current-age-time > 30))))
	(idle-farm-count <= 6)
	(can-build farm)
=>
	(build farm)
)
#end-if

; ======== BUILDINGS - CASTLE

(defrule
	(goal gl-strategy default)
	(or	(game-time > 2100)
		(and	(building-type-count-total town-center > 2)
			(starting-age != dark-age)))
	(or	(strategic-number sn-minimum-water-body-size-for-dock == 998)
		(game-time > 3000))
	(building-type-count-total farm g:< gl-max-farm-count)
	(building-type-count town-center > 0)
	(or	(research-completed ri-heavy-plow)
		(food-amount < 125))
	(can-build farm)
=>
	(build farm)
)

#load-if-defined UP-ALLY-IN-GAME
(load "Barbarian_2.0\SLING")
#end-if

(load "Barbarian_2.0\MonksAndTrebs")
(load "Barbarian_2.0\MIX")

#load-if-defined GOTHIC-CIV
(defrule
	(goal gl-strategy gothic-boom)
	(building-type-count-total farm g:< gl-max-farm-count)
	(building-type-count-total town-center > 3)
	(up-pending-objects c: farm < 3)
	(building-type-count-total barracks > 2)
	(research-completed ri-heavy-plow)
	(idle-farm-count <= 6)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(goal gl-strategy gothic-boom)
	(building-type-count-total farm g:< gl-max-farm-count)
	(building-type-count-total town-center > 3)
	(building-type-count-total barracks > 7)
	(research-completed ri-crop-rotation)
	(can-build farm)
=>
	(build farm)
)
#end-if

(defrule
	(game-time > 3000)
	(goal MILITARY 1)
	(or	(unit-type-count-total trade-cart > 8)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(and	(gold-amount > 600)
				(food-amount > 1100))))
	(or	(goal CASTLE 0)
		(building-type-count-total castle > 2))	
	(can-research ri-bombard-tower)
=>
	(research ri-bombard-tower)
)

(defrule
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(game-time > 3000)
	(up-compare-goal MILITARY != 1)
	(or	(goal CASTLE 0)
		(building-type-count-total castle > 2))
	(building-type-count-total castle > 0)
	(or	(unit-type-count-total trade-cart > 9)
		(and	(gold-amount > 500)
			(strategic-number sn-allow-resource-spending > 5)))
	(building-type-count-total bombard-tower < 6)
	(can-build bombard-tower)
=>
	(up-set-placement-data my-player-number -1 g: gl-my-town-size)
	(up-build place-control 0 c: bombard-tower)
)

#load-if-not-defined TURKISH-CIV
(defrule
	(game-time > 3000)
	(goal MILITARY 1)
	(unit-type-count-total unpacked-trebuchet > 0)
	(building-type-count-total castle > 0)
	(or	(goal CASTLE 0)
		(building-type-count-total castle > 2))
	(or	(unit-type-count-total trade-cart > 8)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(gold-amount > 600)))
	(can-build bombard-tower)
=>
	(up-set-placement-data my-player-number unpacked-trebuchet c: 2)
	(up-build place-control 0 c: bombard-tower)
)

(defrule
	(game-time > 3000)
	(goal MILITARY 1)
	(unit-type-count-total unpacked-trebuchet == 0)
	(building-type-count-total castle > 0)
	(or	(goal CASTLE 0)
		(building-type-count-total castle > 2))
	(or	(unit-type-count-total trade-cart > 8)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(gold-amount > 600)))
	(can-build bombard-tower)
=>
	(set-strategic-number sn-placement-zone-size 20); Spread towers a bit so we can control a larger area
	(up-build place-forward 0 c: bombard-tower)
)
#else
(defrule
	(game-time > 3000)
	(goal MILITARY 1)
	(building-type-count-total castle > 0)
	(or	(goal CASTLE 0)
		(building-type-count-total castle > 2))
	(or	(unit-type-count-total trade-cart > 8)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(gold-amount > 600)))
	(unit-type-count-total unpacked-trebuchet > 0)
	(building-type-count-total bombard-tower < 8)
	(can-build bombard-tower)
=>
	(up-set-placement-data my-player-number unpacked-trebuchet c: 2)
	(up-build place-control 0 c: bombard-tower)
)

(defrule
	(game-time > 3000)
	(goal MILITARY 1)
	(building-type-count-total castle > 0)
	(or	(goal CASTLE 0)
		(building-type-count-total castle > 2))
	(or	(unit-type-count-total trade-cart > 8)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(gold-amount > 600)))
	(building-type-count-total bombard-tower < 8)
	(can-build bombard-tower)
=>
	(set-strategic-number sn-placement-zone-size 20)
	(set-strategic-number sn-ignore-tower-elevation 1)
	(up-build place-forward 0 c: bombard-tower)
)

(defrule
	(game-time > 3000)
	(goal MILITARY 1)
	(building-type-count-total castle > 0)
	(or	(goal CASTLE 0)
		(building-type-count-total castle > 2))
	(or	(unit-type-count-total trade-cart > 8)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(gold-amount > 600)))
	(unit-type-count-total unpacked-trebuchet > 0)
	(research-completed my-unique-research)
	(can-build bombard-tower)
=>
	(up-set-placement-data my-player-number unpacked-trebuchet c: 2)
	(up-build place-control 0 c: bombard-tower)
)

(defrule
	(game-time > 3000)
	(goal MILITARY 1)
	(building-type-count-total castle > 0)
	(or	(goal CASTLE 0)
		(building-type-count-total castle > 2))
	(or	(unit-type-count-total trade-cart > 8)
		(and	(strategic-number sn-allow-resource-spending > 5)
			(gold-amount > 600)))
	(research-completed my-unique-research)
	(can-build bombard-tower)
=>
	(set-strategic-number sn-placement-zone-size 20)
	(set-strategic-number sn-ignore-tower-elevation 1)
	(up-build place-forward 0 c: bombard-tower)
)
#end-if

(defrule
	(or	(goal gl-strategy-class basic-class)
		(goal gl-eew-strategy-type boom))
	(current-age >= castle-age)
	(strategic-number sn-stone-gatherer-percentage == 0)
	(game-time > 1800)
	(building-type-count-total town-center > 1)
	(building-type-count-total castle < 1)
	(stone-amount < castle-stone)
=>
	(set-strategic-number sn-stone-gatherer-percentage 10)
)

(defrule
	(or	(and	(strategic-number sn-stone-gatherer-percentage > 8)
			(building-type-count-total castle > 1))
		(and	(strategic-number sn-stone-gatherer-percentage == 0)
			(and	(goal gl-strategy-class basic-class)
				(or	(game-time > 3000)
					(up-compare-goal CASTLE != 0)))))
	(game-time > 1500)
=>
	(set-strategic-number sn-stone-gatherer-percentage 8)
	(disable-self)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
=>
	(up-jump-rule 2)
)

(defrule
	(building-type-count town-center > 0)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age >= castle-age)
	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
	(or	(strategic-number sn-minimum-water-body-size-for-dock == 1999)
		(or	(building-type-count-total farm < 10); 9
			(or	(unit-type-count-total fishing-ship < 6)
				(or	(up-compare-goal gl-current-age >= gv-castle-up)
					(wood-amount > 350)))))
	(idle-farm-count < 1)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(or	(and	(strategic-number sn-minimum-water-body-size-for-dock > 1000)
			(strategic-number sn-minimum-water-body-size-for-dock != 2002))
		(goal gl-strategy michi-boom))
=>
	(up-jump-rule 3)
)

(defrule
	(building-type-count town-center > 0)
	(up-compare-goal gl-current-age >= gv-castle)
	(or	(goal gl-strategy-class basic-class)
		(goal gl-eew-strategy-type boom))
	(nand	(goal gl-eagles flush-counter-eagles)
		(building-type-count-total barracks < 1))
	(or	(up-pending-objects c: farm < 3)
		(and	(game-time > 2400)
			(wood-amount > 300)))
	(building-type-count-total farm g:< gl-max-farm-count)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(up-compare-goal gl-current-age >= gv-dark-up)
	(building-type-count-total farm g:< gl-max-farm-count)
	(research-completed ri-heavy-plow)
	(or	(strategic-number sn-food-gatherer-percentage > 34)
		(wood-amount > 300))
	(up-compare-goal gl-my-villager-count-total > 55)
	(up-pending-objects c: farm < 5)
	(idle-farm-count <= 6)
	(not	(goal gl-strategy gothic-boom))
	(can-build farm)
=>
	(build farm)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal gl-strategy-class basic-class)
		(or	(goal gl-eew-strategy-type boom)
			(goal gl-strategy monk-boom)))
	(or	(and	(research-completed ri-heavy-plow)
			(building-type-count-total town-center > 2))
		(goal SLING 1))
	(research-completed ri-horse-collar)
	(building-type-count-total farm g:< gl-max-farm-count)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(or	(and	(goal MILITARY 1)
			(and	(unit-type-count-total trade-cart > 10)
				(or	(game-time > 3600)
					(wood-amount > 2000))))
		(and	(goal gl-strategy michi-boom)
			(and	(building-type-count-total town-center >= michi-TCs)
				(building-type-count-total siege-workshop < 1))))
	(building-type-count-total siege-workshop < 5)
	(can-build siege-workshop)
=>
	(build siege-workshop)
)

(defrule
	(up-compare-goal gl-current-age >= gv-dark-up)
	(or	(and	(or	(current-age == imperial-age)
				(or	(goal gl-strategy korean-boom)
					(and	(goal gl-strategy CA-rush)
						(wood-amount > 500))))
			(research-completed ri-heavy-plow))
		(goal gl-strategy scorpion-rush))
	(current-age >= castle-age)
	(building-type-count-total farm g:< gl-max-farm-count)
	(can-build farm)
=>
	(build farm)
)

#load-if-defined TINY-MAP
(defrule
	(goal gl-strategy xbow-rush)
	(wood-amount > 300)
	(building-type-count-total archery-range > 2)
	(game-time > 1500)
	(building-type-count-total town-center < 4)
=>
	(set-goal TC 1)
	(disable-self)
)

(defrule
	(soldier-count > 35)
	(players-military-population every-enemy < 33)
	(or	(goal gl-eew-strategy-type fast-imp)
		(or	(goal gl-strategy xbow-rush)
			(or	(goal gl-strategy turkish-fast-imp)
				(goal gl-strategy scorpion-rush))))
	(game-time > 1800)
	(building-type-count-total town-center < 4)
=>
	(set-goal TC 1)
	(disable-self)
)

(defrule
	(soldier-count > 50)
	(or	(players-military-population every-enemy < 48)
		(soldier-count > 70))
	(or	(goal gl-eew-strategy-type fast-imp)
		(or	(goal gl-strategy xbow-rush)
			(or	(goal gl-strategy turkish-fast-imp)
				(goal gl-strategy scorpion-rush))))
	(building-type-count-total town-center < 4)
=>
	(set-goal TC 1)
	(disable-self)
)
#else
(defrule
	(or	(goal gl-strategy scorpion-rush)
		(or	(goal gl-strategy xbow-rush)
			(and	(or	(goal gl-strategy turkish-fast-imp)
					(goal gl-eew-strategy-type fast-imp))
				(soldier-count > 30))))
	(or	(goal MILITARY 0)
		(game-time > 1800))
	(game-time > 1500)
	(building-type-count-total town-center < 4)
=>
	(set-goal TC 1)
	(disable-self)
)
#end-if

(defrule
	(up-pending-objects c: town-center == 0)
	(strategic-number sn-town-center-placement != 0)
=>
	(set-strategic-number sn-town-center-placement 0)
)

(defrule
	(game-time < 2500)
=>
	(up-get-fact sn-maximum-town-size 0 gl-my-town-size)
)

(defrule
	(game-time < relative-gt-1800)
=>
	(set-goal gl-my-town-size min-added-tc-distance)
)

(defrule
	(game-time >= relative-gt-1800)
	(game-time < relative-gt-2100)
	(up-compare-goal gl-my-town-size >= 23)
=>
	(set-goal gl-my-town-size 23)
)

(defrule
	(game-time >= relative-gt-2100)
	(up-compare-goal gl-my-town-size >= 26)
=>
	(set-goal gl-my-town-size 26)
)

#load-if-not-defined WONDER-RACE
#load-if-not-defined NOMAD-MAP
#load-if-not-defined UP-NOMAD-RESOURCES
(defrule
	(strategic-number sn-nomad-style-start == 1)
	(building-type-count-total town-center < 1)
	(can-build-with-escrow town-center)
	(game-time >= 8)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(release-escrow wood)
	(release-escrow stone)
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-build place-normal 0 c: town-center)
	(chat-to-player my-player-number "No town center - build new!")
	(enable-timer 10 5)
)

(defrule
	(strategic-number sn-nomad-style-start != 1)
	(building-type-count-total town-center < 1)
	(can-build-with-escrow town-center)
=>
	(set-strategic-number sn-maximum-town-size 255)
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(release-escrow wood)
	(release-escrow stone)
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(build town-center)
	(chat-to-player my-player-number "No town center - build new!")
	(enable-timer 10 5)
)
#else
(defrule
	(strategic-number sn-nomad-style-start == 1)
	(building-type-count-total town-center < 1)
	(can-build-with-escrow town-center)
	(game-time >= 20)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(release-escrow wood)
	(release-escrow stone)
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-build place-normal 0 c: town-center)
	(chat-to-player my-player-number "No town center - build new!")
	(enable-timer 10 5)
)

(defrule
	(strategic-number sn-nomad-style-start != 1)
	(building-type-count-total town-center < 1)
	(can-build-with-escrow town-center)
	(game-time >= 20)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(release-escrow wood)
	(release-escrow stone)
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(build town-center)
	(chat-to-player my-player-number "No town center - build new!")
	(enable-timer 10 5)
)
#end-if
#else
(defrule
	(strategic-number sn-nomad-style-start == 1)
	(building-type-count-total town-center < 1)
	(can-build-with-escrow town-center)
	(game-time >= 20)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(release-escrow wood)
	(release-escrow stone)
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-build place-normal 0 c: town-center)
	(chat-to-player my-player-number "No town center - build new!")
	(enable-timer 10 5)
)

(defrule
	(strategic-number sn-nomad-style-start != 1)
	(building-type-count-total town-center < 1)
	(can-build-with-escrow town-center)
	(game-time >= 20)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(release-escrow wood)
	(release-escrow stone)
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(build town-center)
	(chat-to-player my-player-number "No town center - build new!")
	(enable-timer 10 5)
)
#end-if
#else
#load-if-not-defined NOMAD-MAP
(defrule
	(strategic-number sn-nomad-style-start == 1)
	(building-type-count-total town-center < 1)
	(can-build-with-escrow town-center)
	(game-time >= 8)
	(game-time < 600)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(release-escrow wood)
	(release-escrow stone)
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-build place-normal 0 c: town-center)
	(chat-to-player my-player-number "No town center - build new!")
	(enable-timer 10 5)
)

(defrule
	(game-time < 600)
	(strategic-number sn-nomad-style-start != 1)
	(building-type-count-total town-center < 1)
	(can-build-with-escrow town-center)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(release-escrow wood)
	(release-escrow stone)
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(build town-center)
	(chat-to-player my-player-number "No town center - build new!")
	(enable-timer 10 5)
)
#else
(defrule
	(strategic-number sn-nomad-style-start == 1)
	(building-type-count-total town-center < 1)
	(can-build-with-escrow town-center)
	(game-time >= 20)
	(game-time < 600)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(release-escrow wood)
	(release-escrow stone)
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-build place-normal 0 c: town-center)
	(chat-to-player my-player-number "No town center - build new!")
	(enable-timer 10 5)
)

(defrule
	(strategic-number sn-nomad-style-start != 1)
	(building-type-count-total town-center < 1)
	(can-build-with-escrow town-center)
	(game-time >= 20)
	(game-time < 600)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(release-escrow wood)
	(release-escrow stone)
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(build town-center)
	(chat-to-player my-player-number "No town center - build new!")
	(enable-timer 10 5)
)
#end-if
#end-if

#load-if-not-defined MIGRATION-MAP
#load-if-not-defined WONDER-RACE
(defrule
	(or	(building-type-count-total town-center >= preferred-TC-number)
		(or	(and	(or	(building-type-count-total wonder > 0)
					(or	(players-building-type-count any-ally wonder > 0)
						(players-building-type-count any-enemy wonder > 0)))
				(and	(game-time < 900); 600
					(building-type-count-total town-center > 2))); 2
			(or	(goal gl-wonder-assault YES)
				(goal gl-strategy landing))))
=>
	(up-jump-rule 7)
)

(defrule
	(or	(goal gl-strategy-class basic-class)
		(or	(goal gl-eew-strategy-type boom)
			(or	(goal gl-strategy korean-boom)
				(or	(goal gl-strategy eagle-rush)
					(goal TC 1)))))
	(game-time > 2500)
	(building-type-count-total town-center < preferred-TC-number)
	(can-build-with-escrow town-center)
=>
	(set-strategic-number sn-town-center-placement 0)
	(release-escrow wood)
	(build town-center)
	(chat-to-player my-player-number "Town center")
)

(defrule
	(up-compare-goal gl-strategy != skirm-boom)
	(or	(goal gl-strategy-class basic-class)
		(or	(goal gl-eew-strategy-type boom)
			(or	(goal gl-strategy korean-boom)
				(goal gl-strategy eagle-rush))))
	(building-type-count-total town-center == 1)
	(can-build-with-escrow town-center)
=>
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement mining-camp)
	(release-escrow wood)
	(build town-center)
	(chat-to-player my-player-number "Town center")
)

(defrule
	(goal TC 1)
	(or	(nand	(goal gl-strategy monk-scorpion-boom)
			(building-type-count-total monastery < 1))
		(goal POSITION POCKET))
	(building-type-count-total town-center == 1)
	(can-build-with-escrow town-center)
=>
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement mining-camp)
	(release-escrow wood)
	(build town-center)
	(chat-to-player my-player-number "Town center")
)

(defrule
	(up-compare-goal gl-strategy != skirm-boom)
	(or	(goal gl-strategy-class basic-class)
		(or	(goal gl-eew-strategy-type boom)
			(or	(goal gl-strategy korean-boom)
				(goal gl-strategy eagle-rush))))
	(building-type-count-total town-center == 2)
	(can-build-with-escrow town-center)
=>
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(release-escrow wood)
	(build town-center)
	(chat-to-player my-player-number "Town center")
)

(defrule
	(goal TC 1)
	(or	(nand	(goal gl-strategy monk-scorpion-boom)
			(building-type-count-total siege-workshop < 1))
		(goal POSITION POCKET))
	(building-type-count-total town-center == 2)
	(can-build-with-escrow town-center)
=>
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(release-escrow wood)
	(build town-center)
	(chat-to-player my-player-number "Town center")
)

(defrule
	(or	(goal gl-strategy-class basic-class)
		(or	(goal gl-eew-strategy-type boom)
			(or	(goal gl-strategy korean-boom)
				(or	(goal gl-strategy eagle-rush)
					(goal TC 1)))))
	(building-type-count-total town-center == 3)
	(can-build-with-escrow town-center)
=>
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement mining-camp)
	(release-escrow wood)
	(build town-center)
	(chat-to-player my-player-number "Town center")
)

(defrule
	(up-compare-goal gl-strategy != war-galley-rush)
	(up-compare-goal gl-strategy != fire-ship-rush)
	(or	(building-type-count-total dock > 1)
		(and	(goal gl-strategy skirm-boom)
			(or	(up-research-status c: ri-elite-skirmisher >= research-pending)
				(wood-amount > 400))))
	(building-type-count-total town-center < 4)
	(can-build-with-escrow town-center)
=>
	(up-modify-sn sn-camp-max-distance g:= gl-my-town-size)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(release-escrow wood)
	(build town-center)
	(chat-to-player my-player-number "Town center")
)
#end-if

(defrule
	(or	(goal gl-strategy-class basic-class)
		(or	(goal gl-eew-strategy-type boom)
			(or	(goal gl-strategy korean-boom)
				(or	(goal gl-strategy eagle-rush)
					(goal TC 1)))))
	(strategic-number sn-maximum-town-size < min-added-tc-distance)
	(building-type-count-total town-center < 4)
	(can-build-with-escrow town-center)
=>
	(set-strategic-number sn-maximum-town-size min-added-tc-distance)
	(enable-timer 10 5)
)
#end-if

#load-if-not-defined WONDER-RACE
#load-if-defined UP-MICHI-STYLE
(defrule
	(goal gl-strategy michi-boom)
	(building-type-count-total town-center < michi-TCs)
	(can-build-with-escrow town-center)
=>
	(release-escrow wood)
	(build town-center)
	(chat-to-player my-player-number "Town center")
)
#end-if

(defrule
	(or	(and	(building-type-count-total siege-workshop < 1)
			(and	(goal gl-eew-strategy-type fast-imp)
				(game-time > 2070)))
		(and	(building-type-count-total town-center > 2)
			(goal gl-advanced-archery scorpions)))
	(building-type-count-total siege-workshop < 3)
	(can-build siege-workshop)
=>
	(build siege-workshop)
)

(defrule
	(or	(and	(goal gl-strategy-class basic-class)
			(and	(players-unit-type-count focus-player scorpion-line > 9)
				(building-type-count-total town-center > 1)))
		(and	(goal gl-eew-strategy-type fast-imp)
			(and	(building-type-count-total siege-workshop < 1)
				(and	(building-type-count-total castle == 0)
					(current-age-time > 1320)))))
	(building-type-count-total siege-workshop < 2)
	(can-build siege-workshop)
=>
	(build siege-workshop)
)

(defrule
	(game-time > 960)
	(strategic-number sn-minimum-water-body-size-for-dock != 2001)
	(or	(and	(goal MILITARY 1)
			(nand	(or	(goal POSITION POCKET)
					(players-building-type-count target-player stone-wall-line > 10))
				(building-type-count-total town-center < 3)))
		(and	(goal gl-strategy korean-boom)
			(building-type-count-total town-center > 2)))
	(building-type-count-total siege-workshop < 1)
	(can-build siege-workshop)
=>
	(build siege-workshop)
)

(defrule
	(building-type-count-total monastery > 0)
	(or	(goal gl-strategy turkish-fast-imp)
		(and	(goal SLING 1)
			(goal gl-strategy eew-strategy)))
	(building-type-count-total siege-workshop < 1)
	(can-build siege-workshop)
=>
	(build siege-workshop)
)

(defrule
	(up-compare-goal gl-current-age == gv-castle)
	(or	(and	(food-amount > 870)
			(gold-amount > 670))
		(building-type-count-total dock > 1))
	(food-amount > 800)
	(building-type-count-total siege-workshop < 1)
	(building-type-count-total university < 1)
	(building-type-count-total castle < 1)
	(can-build siege-workshop)
=>
	(build siege-workshop)
)

#load-if-not-defined SARACEN-CIV
(defrule
	(game-time > 300)
	(or	(and	(goal gl-strategy heavy-krush)
			(building-type-count-total monastery < 1))
		(and	(civ-selected aztec)
			(and	(unit-type-count-total trade-cart > 30)
				(and	(research-completed ri-block-printing)
					(strategic-number sn-allow-resource-spending > 5)))))
	(building-type-count-total monastery < 3)
	(can-build monastery)
=>
	(build monastery)
)
#end-if

(defrule
	(game-time > 300)
	(or	(goal gl-strategy eew-strategy)
		(or	(goal gl-strategy xbow-rush)
			(or	(goal gl-strategy turkish-fast-imp)
				(game-time > 2400))))
	(up-compare-goal gl-eagles != flush-counter-eagles)
	(nand	(strategic-number sn-enemy-flush-notice == 1)
		(building-type-count-total siege-workshop < 1))
	(building-type-count-total monastery < 1)
	(can-build monastery)
=>
	(build monastery)
)

(defrule
	(or	(unit-type-count-total conquistador-line > 15)
		(or	(unit-type-count-total mangudai-line > 15)
			(or	(and	(goal gl-strategy turkish-fast-imp)
					(and	(building-type-count-total siege-workshop > 0)
						(building-type-count-total monastery > 0)))
				(goal gl-advanced-archery heavy-cannoneers))))
	(building-type-count-total barracks < 1)
	(can-build barracks)
=>
	(build barracks)
)

#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(or	(and	(building-type-count-total stable < 1)
			(or	(unit-type-count-total conquistador-line > 10)
				(unit-type-count-total mangudai-line > 10)))
		(and	(goal gl-strategy knight-archer)
			(and	(building-type-count-total stable < 2)
				(or	(up-compare-goal gl-my-villager-count-total > 80)
					(goal SLING 3)))))
	(can-build stable)
=>
	(build stable)
)
#end-if
#end-if

#load-if-defined TURKISH-CIV
(defrule
	(current-age >= castle-age); MegaRandom is a funny map ^^
	(building-type-count-total farm g:< gl-max-farm-count)
	(goal gl-strategy turkish-fast-imp)
	(building-type-count-total monastery > 0)
	(building-type-count-total farm < 17)
	(nand	(building-type-count-total farm > 12)
		(unit-type-count-total fire-ship-line > 0))
	(nand	(food-amount > 670)
		(building-type-count-total siege-workshop < 1))
	(can-build farm)
=>
	(build farm)
)

(defrule
	(up-compare-goal gl-current-age >= gv-castle-up)
	(building-type-count-total mining-camp < 3)
	(goal gl-strategy turkish-fast-imp)
	(building-type-count-total archery-range > 1)
	(dropsite-min-distance gold >= 0)
	(dropsite-min-distance gold < 255)
	(building-type-count-total mining-camp < 10)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(set-strategic-number sn-dropsite-separation-distance 8)
	(build mining-camp)
)
#end-if

(defrule
	(up-pending-objects c: mining-camp < 1)
	(up-compare-goal gl-current-age >= gv-castle-up)
	(cc-players-unit-type-count 0 gold-mine > 11)
	(dropsite-min-distance gold > 6)
	(dropsite-min-distance gold < 255)
	(building-type-count-total mining-camp < 10)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(set-strategic-number sn-dropsite-separation-distance 8)
	(build mining-camp)
)
#end-if

(defrule
	(up-compare-goal gl-current-age >= gv-dark-up)
	(or	(current-age >= castle-age)
		(and	(goal gl-feudal-trash YES)
			(strategic-number sn-gold-gatherer-percentage > 0)))
	(or	(building-type-count-total mining-camp < 8)
		(wood-amount > 400))
	(building-type-count-total mining-camp < 16)
	(up-pending-objects c: mining-camp < 1)
	(dropsite-min-distance gold < 255)
	(dropsite-min-distance gold > 4)
	(can-build mining-camp)
=>
	(set-strategic-number sn-dropsite-separation-distance 10)
	(build mining-camp)
)

#load-if-defined KOREAN-CIV
(defrule
	(goal gl-strategy korean-boom)
	(current-age == castle-age)
	(building-type-count-total farm g:< gl-max-farm-count)
	(food-amount < 200)
	(building-type-count-total farm < 17)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(goal gl-strategy korean-boom)
	(goal gl-advanced-cavalry LC)
	(building-type-count-total town-center > 1)
	(building-type-count-total barracks < 1)
	(not	(building-available archery-range))
	(can-build barracks)
=>
	(build barracks)
)
#end-if

#load-if-not-defined WONDER-RACE
#load-if-defined FEUDAL-AGE-END
(defrule
	(game-time > 1500)
	(up-compare-goal MILITARY != 1)
	(can-build watch-tower)
=>
	(set-strategic-number sn-placement-zone-size 30)
	(up-set-placement-data my-player-number -1 s: sn-maximum-town-size)
	(up-build place-control 0 c: watch-tower)
)

(defrule
	(game-time > 1500)
	(goal MILITARY 1)
	(can-build watch-tower)
=>
	(up-build place-forward 0 c: watch-tower)
)
#end-if

(defrule
	(or	(stone-amount < castle-stone)
		(or	(and	(goal gl-strategy castle-push)
				(or	(goal MILITARY 1)
					(and	(game-time < 1300)
						(building-type-count-total castle < 1))))
			(and	(map-type migration)
				(up-compare-goal gl-migration-progress <= 3))))
=>
	(up-jump-rule 6)
)

(defrule
	(up-compare-goal MILITARY != 1)
	(up-compare-goal threat-time < 20000)
	(soldier-count < 25)
	(goal gl-strategy castle-drop)
	(game-time < 1500)
	(or	(up-compare-goal gl-rush-suitability-on-map <= LOW)
		(or	(goal POSITION POCKET)
			(and	(building-type-count watch-tower > 1)
				(unit-type-count 504 > 0))))
	(not	(player-human focus-player))
=>
	(up-jump-rule 1)
)

(defrule
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(or	(building-type-count-total castle == 2)
		(and	(up-compare-goal MILITARY != 1)
			(and	(up-compare-goal threat-time < 20000)
				(soldier-count < 25))))
	(can-build castle)
=>
	(set-strategic-number sn-maximum-town-size 21)
	(build castle)
	(chat-to-player my-player-number "Castle!")
	(set-goal gl-castle-placed YES)
	(set-goal gl-castle-control YES)
	(set-goal castle-dropped-timer 20)
	(set-goal gl-defensive-castle-placed YES)
)

(defrule
	(or	(strategic-number sn-percent-attack-soldiers == 0)
		(strategic-number sn-percent-building-cancellation == 100))
=>
	(up-jump-rule 1)
)

(defrule
	(goal MILITARY 1)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(nand	(or	(goal gl-strategy eew-strategy)
			(up-compare-const first-castle-value == 1))
		(building-type-count-total castle < 1))
	(players-building-count any-enemy > 0)
	(can-build castle)
=>
	(up-build place-forward 0 c: castle)
	(chat-to-player my-player-number "Forward castle!")
	(set-strategic-number sn-stone-gatherer-percentage 6)
	(set-goal gl-castle-placed placed-forward)
	(set-goal gl-castle-control placed-forward)
	(set-goal castle-dropped-timer 40)
	(set-goal gl-defensive-castle-placed NO)
)

(defrule
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(up-compare-goal gl-strategy != turtle-rush)
	(up-compare-goal gl-strategy != korean-boom)
	(up-compare-goal gl-strategy != scout-skirm-flush)
	(building-type-count-total castle < 1)
	(can-build castle)
=>
	(up-set-placement-data my-player-number -1 c: 10)
	(set-strategic-number sn-placement-zone-size 5)
	(up-build place-control 0 c: castle)
	(set-strategic-number sn-stone-gatherer-percentage 6)
	(chat-to-player my-player-number "Castle!")
	(set-goal gl-castle-placed YES)
	(set-goal gl-castle-control YES)
	(set-goal castle-dropped-timer 20)
	(set-goal gl-defensive-castle-placed YES)
)

(defrule
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(or	(goal gl-strategy korean-boom)
		(or	(goal gl-strategy scout-skirm-flush)
			(building-type-count-total castle > 0)))
	(can-build castle)
=>
	(up-set-placement-data my-player-number -1 c: 10)
	(set-strategic-number sn-placement-zone-size 5)
	(up-build place-control 0 c: castle)
	(chat-to-player my-player-number "Castle!")
	(set-goal gl-castle-placed YES)
	(set-goal gl-castle-control YES)
	(set-goal castle-dropped-timer 20)
	(set-goal gl-defensive-castle-placed YES)
)

(defrule
	(up-pending-objects c: castle == 0)
	(strategic-number sn-placement-zone-size == 5)
=>
	(set-strategic-number sn-placement-zone-size 0)
)

(defrule
	(or	(building-type-count-total town-center > 2)
		(building-type-count-total barracks < 2))
	(or	(goal CASTLE 1)
		(or	(goal CASTLE 4)
			(or	(goal CASTLE 6)
				(goal CASTLE 9))))
	(or	(building-type-count-total barracks < 3)
		(up-compare-goal gl-my-villager-count-total > 80))
	(building-type-count-total barracks < 6)
	(can-build barracks)
=>
	(build barracks)
)

(defrule
	(goal gl-TC-lost NO)
	(or	(goal CASTLE 3)
		(or	(goal CASTLE 5)
			(or	(goal CASTLE 8)
				(goal CASTLE 9))))
	(or	(building-type-count-total archery-range < 2)
		(and	(up-compare-goal gl-my-villager-count-total > 80)
			(building-type-count-total archery-range < 6)))
	(can-build archery-range)
=>
	(build archery-range)
)

#load-if-not-defined HUN-CIV
(defrule
	(or	(not	(goal gl-advanced-cavalry 0))
		(and	(goal gl-strategy heavy-krush)
			(unit-type-count-total town-center > 1)))
	(or	(building-type-count-total stable < 2)
		(or	(unit-type-count-total town-center > 2)
			(goal gl-strategy heavy-krush)))
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(building-type-count-total stable < 4)
	(can-build stable)
=>
	(build stable)
)
#else
(defrule
	(not	(goal gl-advanced-cavalry 0))
	(or	(building-type-count-total stable < 1)
		(unit-type-count-total town-center > 1))
	(or	(building-type-count-total stable < 2)
		(unit-type-count-total town-center > 2))
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(building-type-count-total stable < 4)
	(can-build stable)
=>
	(build stable)
)
#end-if

(defrule
	(goal gl-advanced-archery heavy-archers)
	(or	(and	(research-completed ri-crossbow)
			(and	(building-type-count-total town-center > 1)
				(or	(building-type-count-total archery-range < 3)
					(up-compare-goal gl-my-villager-count-total > 90))))
		(and	(building-type-count-total archery-range < 2)
			(up-compare-goal gl-current-age >= gv-feudal-up)))
	(building-type-count-total archery-range < 7)
	(can-build archery-range)
=>
	(build archery-range)
)

(defrule
	(up-compare-goal gl-current-age >= gv-castle-up)
	(or	(goal gl-advanced-archery heavy-cannoneers)
		(and	(goal gl-advanced-archery light-cannoneers)
			(building-type-count-total archery-range < 3)))
	(or	(building-type-count-total archery-range < 3)
		(and	(up-compare-goal gl-my-villager-count-total > 90)
			(building-type-count-total archery-range < 6)))
	(can-build archery-range)
=>
	(build archery-range)
)

(defrule
	(or	(goal RAM 1)
		(and	(goal gl-strategy eew-strategy)
			(or	(building-type-count-total town-center > 2)
				(and	(goal gl-eew-strategy-type fast-imp)
					(and	(or	(building-type-count-total archery-range > 0)
							(building-type-count-total dock > 1))
						(up-compare-goal gl-current-age <= gv-castle))))))
	(building-type-count-total siege-workshop < 1)
	(can-build siege-workshop)
=>
	(build siege-workshop)
)

(defrule
	(up-compare-goal gl-strategy != xbow-rush)
	(or	(and	(soldier-count > 40)
			(building-type-count-total town-center > 2))
		(goal MILITARY 1))
	(nand	(goal POSITION POCKET)
		(building-type-count-total town-center < 3))
	(strategic-number sn-minimum-water-body-size-for-dock != 2001)
	(building-type-count-total siege-workshop < 1)
	(can-build siege-workshop)
=>
	(build siege-workshop)
)

(defrule
	(or	(enemy-buildings-in-town)
		(and	(goal MILITARY 1)
			(game-time > 3200)))
	(building-type-count-total town-center > 2)
	(or	(building-type-count-total siege-workshop < 2)
		(building-type-count-total town-center > 3))
	(building-type-count-total siege-workshop < 3)
	(or	(soldier-count > 70)
		(population > 190))
	(can-build siege-workshop)
=>
	(build siege-workshop)
)

#load-if-not-defined MIGRATION-MAP
#load-if-not-defined UP-MICHI-STYLE
#load-if-defined KOREAN-CIV
(defrule
	(goal gl-strategy korean-boom)
	(up-compare-goal gl-current-age >= gv-castle)
	(or	(and	(up-compare-goal gl-my-villager-count-total > 55)
			(and	(players-unit-type-count focus-player knight-line > 3)
				(building-type-count-total town-center > 2)))
		(building-type-count-total monastery < 1))
	(building-type-count-total monastery < 3)
	(can-build monastery)
=>
	(build monastery)
)

(defrule
	(up-compare-goal gl-strategy != xbow-rush)
;	(up-compare-goal gl-strategy != wall-boom)
	(game-time > 300)
	(up-compare-goal gl-strategy != heavy-krush)
	(or	(players-building-type-count every-ally monastery < 1)
		(building-type-count-total town-center > 2))
	(or	(building-type-count-total monastery < 1)
		(and	(players-unit-type-count focus-player knight-line > 0)
			(and	(building-type-count-total town-center > 3)
				(goal gl-current-age gv-castle))))
	(building-type-count-total monastery < 2)
	(can-build monastery)
=>
	(build monastery)
)
#else
#load-if-defined DARK-AGE-START
(defrule
	(up-compare-goal gl-strategy != xbow-rush)
	(up-compare-goal gl-strategy != fast-eagles)
	(up-compare-goal gl-strategy != heavy-krush)
	(or	(players-building-type-count every-ally monastery < 1)
		(building-type-count-total town-center > 2))
	(or	(building-type-count-total monastery < 1)
		(and	(players-unit-type-count focus-player knight-line > 0)
			(and	(building-type-count-total town-center > 3)
				(goal gl-current-age gv-castle))))
	(building-type-count-total monastery < 2)
	(can-build monastery)
=>
	(build monastery)
)
#else
(defrule
	(up-compare-goal gl-strategy != xbow-rush)
	(game-time > 300)
	(up-compare-goal gl-strategy != heavy-krush)
	(or	(players-building-type-count every-ally monastery < 1)
		(building-type-count-total town-center > 2))
	(or	(building-type-count-total monastery < 1)
		(and	(players-unit-type-count focus-player knight-line > 0)
			(and	(building-type-count-total town-center > 3)
				(goal gl-current-age gv-castle))))
	(building-type-count-total monastery < 2)
	(can-build monastery)
=>
	(build monastery)
)
#end-if
#end-if
#else
(defrule
	(or	(building-type-count-total town-center >= michi-TCs)
		(goal gl-strategy default))
	(building-type-count-total town-center > 3)
	(building-type-count-total monastery < 1)
	(can-build monastery)
=>
	(build monastery)
)
#end-if
#else
(defrule
	(up-compare-goal gl-migration-progress >= 4)
	(building-type-count town-center > 0)
	(building-type-count-total monastery < 1)
	(can-build monastery)
=>
	(build monastery)
)
#end-if

#load-if-defined TURKISH-CIV
(defrule
	(game-time > 300)
	(goal gl-strategy turkish-fast-imp)
	(building-type-count-total archery-range > 1)
	(or	(building-type-count-total monastery == 0)
		(and	(players-unit-type-count focus-player knight-line > 0)
			(and	(building-type-count-total monastery == 1)
				(building-type-count-total archery-range > 2))))
	(can-build monastery)
=>
	(build monastery)
)

(defrule
	(or	(goal gl-strategy turkish-fast-imp)
		(and	(goal gl-strategy xbow-boom)
			(and	(building-type-count-total archery-range < 3)
				(players-military-population focus-player > 16))))
	(or	(building-type-count-total archery-range < 3)
		(and	(up-compare-goal gl-my-villager-count-total > 50)
			(players-unit-type-count every-enemy monk < 7)))
	(building-type-count-total archery-range < 5)
	(can-build archery-range)
=>
	(build archery-range)
)
#end-if

(defrule
	(or	(and	(game-time > 2700)
			(up-compare-goal gl-strategy != gothic-boom))
		(and	(up-compare-goal gl-strategy-type >= FC)
			(and	(building-type-count-total archery-range > 0)
				(and	(wood-amount > 550)
					(and	(goal gl-current-age gv-feudal)
						(building-type-count-total market < 1))))))
	(building-type-count-total archery-range < 3)
	(can-build archery-range)
=>
	(build archery-range)
)

(defrule
	(building-type-count-total archery-range < 2)
	(goal gl-strategy knight-archer)
	(nand	(goal POSITION POCKET)
		(building-type-count-total town-center < 3))
	(or	(goal SLING 3)
		(players-military-population any-enemy > 17))
	(can-build archery-range)
=>
	(build archery-range)
)

#load-if-defined FEUDAL-AGE-END
(defrule
	(up-compare-goal gl-my-villager-count-total > 55)
	(or	(building-type-count-total archery-range < 5)
		(up-compare-goal gl-my-villager-count-total > 80))
	(building-type-count-total archery-range < 10)
	(can-build archery-range)
=>
	(build archery-range)
)

(defrule
	(up-compare-goal gl-my-villager-count-total > 45)
	(or	(building-type-count-total barracks < 3)
		(up-compare-goal gl-my-villager-count-total > 65))
	(or	(building-type-count-total barracks < 4)
		(up-compare-goal gl-my-villager-count-total > 90))
	(building-type-count-total barracks < 10)
	(can-build barracks)
=>
	(build barracks)
)
#end-if

#load-if-defined DARK-AGE-START
(defrule
	(or	(goal gl-strategy heavy-krush)
		(or	(building-type-count-total town-center > 2)
			(or	(goal gl-strategy eagle-rush)
				(or	(goal gl-strategy sling)
					(and	(building-type-count-total town-center > 1)
						(and	(wood-amount > 400)
							(game-time > 1800)))))))
	(building-type-count-total market < 1)
	(can-build market)
=>
	(build market)
)
#else
(defrule
	(up-compare-goal gl-current-age > gv-dark-up)
	(or	(goal gl-strategy heavy-krush)
		(or	(building-type-count-total town-center > 2)
			(or	(goal gl-strategy eagle-rush)
				(and	(building-type-count-total town-center > 1)
					(and	(wood-amount > 400)
						(game-time > 1800))))))
	(building-type-count-total market < 1)
	(can-build market)
=>
	(build market)
)
#end-if

#load-if-not-defined POST-IMPERIAL-AGE-START
#load-if-not-defined DEFEND-WONDER

#load-if-not-defined TURKISH-CIV
(defrule
	(up-compare-goal gl-current-age >= gv-castle-up)
	(or	(goal CASTLE 8)
		(or	(goal gl-advanced-archery heavy-cannoneers)
			(or	(goal gl-advanced-archery light-cannoneers)
				(goal gl-advanced-archery archer-to-gun-transfer))))
	(building-type-count-total university == 0)
	(can-build university)
=>
	(build university)
)
#end-if

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(or	(up-compare-goal gl-current-age >= gv-castle-up)
		(or	(unit-type-count-total archer-line > 10)
			(or	(unit-type-count-total skirmisher-line > 10)
				(or	(unit-type-count-total cavalry-archer-line > 10)
					(unit-type-count-total mangudai-line > 10)))))
	(or	(building-type-count-total town-center > 2)
		(goal gl-strategy scorpion-rush))
	(building-type-count-total university == 0)
	(can-build university)
=>
	(build university)
)

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(current-age == imperial-age)
	(nand	(not	(research-completed my-unique-research))
		(goal gl-strategy eew-strategy))
	(or	(and	(unit-type-count-total battering-ram-line > 3)
			(and	(goal MILITARY 1)
				(soldier-count > 40)))
		(game-time > 2700))
	(building-type-count-total university == 0)
	(can-build university)
=>
	(build university)
)

(defrule
	(strategic-number sn-allow-resource-spending > 2)
	(goal gl-strategy xbow-rush)
	(nand	(goal TC 1)
		(and	(building-type-count-total town-center < 3)
			(stone-amount >= 100)))
	(up-compare-goal gl-my-villager-count-total > 60)
	(unit-type-count-total archer-line > 60)
	(building-type-count-total university < 1)
	(can-build university)
=>
	(build university)
)
#end-if
#end-if

; ======== UNITS - ARMY

#load-if-not-defined DEATH-MATCH
(defrule
	(or	(and	(or	(strategic-number sn-minimum-water-body-size-for-dock == 2001)
				(or	(and	(strategic-number sn-minimum-water-body-size-for-dock == 1999)
						(warboat-count < 25))
					(and	(population > 270)
						(strategic-number sn-allow-resource-spending < 6))))
			(soldier-count > 10))
		(goal gl-TC-lost YES))
=>
	(up-jump-rule rules-to-be-jumped)
)
#load-if-not-defined TURKISH-CIV
(defrule
	(game-time > 2400)
	(up-research-status c: ri-paladin < research-available)
	(up-research-status c: ri-onager >= research-available)
	(strategic-number sn-allow-resource-spending > 5)
	(or	(players-unit-type-count focus-player scorpion-line > 5)
		(players-unit-type-count target-player scorpion-line > 5))
	(or	(unit-type-count-total trade-cart > 11)
		(gold-amount > 1200))
	(soldier-count > 55)
	(unit-type-count-total mangonel-line < 5)
	(can-train mangonel-line)
=>
	(train mangonel-line)
)
#else
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(game-time > 2400)
	(strategic-number sn-allow-resource-spending > 5)
	(or	(players-unit-type-count focus-player scorpion-line > 5)
		(players-unit-type-count target-player scorpion-line > 5))
	(or	(unit-type-count-total trade-cart > 11)
		(gold-amount > 1200))
	(soldier-count > 55)
	(or	(unit-type-count-total bombard-cannon < 5)
		(soldier-count > 65))
	(unit-type-count-total bombard-cannon < 8)
	(can-train bombard-cannon)
=>
	(train bombard-cannon)
)
#else
(defrule
	(strategic-number sn-allow-resource-spending > 5)
	(or	(unit-type-count-total trade-cart > 5)
		(gold-amount > 800))
	(soldier-count > 25)
	(or	(unit-type-count-total bombard-cannon < 5)
		(soldier-count > 45))
	(or	(unit-type-count-total bombard-cannon < 8)
		(gold-amount > 1200))
	(unit-type-count-total bombard-cannon < max-cannons)
	(can-train bombard-cannon)
=>
	(train bombard-cannon)
)
#end-if

#end-if

#load-if-not-defined UP-MICHI-STYLE
#load-if-defined BLACK-FOREST-MAP
(defrule
	(game-time > 2400)
	(goal MILITARY 1)
	(goal gl-strategy-class basic-class)
	(unit-type-count-total trade-cart > 20)
	(strategic-number sn-allow-resource-spending > 5)
	(unit-type-count-total trebuchet-set < 4)
	(soldier-count > 45)
	(can-train trebuchet)
=>
	(train trebuchet)
)

#load-if-defined CELTIC-CIV
(defrule
	(goal gl-strategy-class basic-class)
	(nand	(goal MILITARY 1)
		(unit-type-count-total battering-ram-line < 4))
	(or	(goal MILITARY 1)
		(gold-amount > 650))
	(unit-type-count-total trade-cart > 15)
	(strategic-number sn-allow-resource-spending > 5)
	(soldier-count > 50)
	(unit-type-count-total mangonel-line < 6)
	(can-train mangonel-line)
=>
	(train mangonel-line)
)
#else
(defrule
	(goal gl-strategy-class basic-class)
	(or	(and	(goal MILITARY 1)
			(and	(or	(player-in-game any-human-enemy)
					(gold-amount > 1200))
				(gold-amount > 600)))
		(players-unit-type-count any-enemy mangonel-line > 3))
	(strategic-number sn-allow-resource-spending > 5)
	(unit-type-count-total trade-cart > 25)
	(soldier-count > 45)
	(unit-type-count-total bombard-cannon < 5)
	(can-train bombard-cannon)
=>
	(train bombard-cannon)
)
#end-if
#end-if
(defrule
	(or	(and	(goal MILITARY 1)
			(and	(gold-amount > 1200)
				(and	(game-time > 3600)
					(player-in-game any-ally))))
		(and	(players-unit-type-count any-enemy mangonel-line > 3)
			(strategic-number sn-allow-resource-spending > 5)))
	(player-in-game any-human-enemy)
	(soldier-count > 65)
	(unit-type-count-total bombard-cannon < 3)
	(can-train bombard-cannon)
=>
	(train bombard-cannon)
)
#end-if

#load-if-defined TURKISH-CIV
(defrule
	(strategic-number sn-allow-resource-spending > 5)
	(or	(map-type black-forest)
		(up-compare-const gv-michi-style == 1))
	(or	(unit-type-count-total trade-cart > 15)
		(gold-amount > 1200))
	(or	(soldier-count > 45)
		(population >= almost-full-pop))
	(or	(unit-type-count-total bombard-cannon < 8)
		(gold-amount > 800))
	(unit-type-count-total bombard-cannon < max-cannons)
	(can-train bombard-cannon)
=>
	(train bombard-cannon)
)

(defrule
	(goal gl-strategy-class basic-class)
	(strategic-number sn-allow-resource-spending > 5)
	(or	(unit-type-count-total trade-cart > 20)
		(gold-amount > 2000))
	(or	(players-unit-type-count focus-player archer-line > 15)
		(or	(players-unit-type-count focus-player janissary-line > 15)
			(or	(players-unit-type-count focus-player cavalry-archer-line > 15)
				(players-unit-type-count focus-player skirmisher-line > 18))))
	(unit-type-count-total bombard-cannon < max-cannons)
	(can-train bombard-cannon)
=>
	(train bombard-cannon)
)

(defrule
	(goal gl-strategy-class basic-class)
	(strategic-number sn-allow-resource-spending > 5)
	(or	(unit-type-count-total trade-cart > 20)
		(gold-amount > 2000))
	(or	(players-unit-type-count focus-player chu-ko-nu-line > 15)
		(or	(players-unit-type-count focus-player plumed-archer-line > 15)
			(or	(players-unit-type-count focus-player mangudai-line > 12)
				(players-unit-type-count focus-player longbowman-line > 15))))
	(unit-type-count-total bombard-cannon < max-cannons)
	(can-train bombard-cannon)
=>
	(train bombard-cannon)
)

(defrule
	(goal gl-strategy-class basic-class)
	(strategic-number sn-allow-resource-spending > 5)
	(or	(unit-type-count-total trade-cart > 20)
		(gold-amount > 2000))
	(or	(players-unit-type-count focus-player genoese-crossbowman > 12)
		(or	(players-unit-type-count focus-player elephant-archer > 8)
			(or	(players-unit-type-count focus-player scorpion-line > 4)
				(players-unit-type-count focus-player throwing-axeman-line > 14))))
	(unit-type-count-total bombard-cannon < max-cannons)
	(can-train bombard-cannon)
=>
	(train bombard-cannon)
)

(defrule
	(goal gl-strategy-class basic-class)
	(strategic-number sn-allow-resource-spending > 5)
	(or	(unit-type-count-total trade-cart > 20)
		(gold-amount > 2000))
	(or	(players-unit-type-count focus-player war-wagon-line > 12)
		(or	(players-unit-type-count focus-player mangonel-line > 2)
			(or	(players-unit-type-count focus-player slinger > 8)
				(unit-type-count-total trade-cart > 35))))
	(unit-type-count-total bombard-cannon < max-cannons)
	(can-train bombard-cannon)
=>
	(train bombard-cannon)
)
#end-if

(defrule
	(or	(goal threat-source warship-class)
		(or	(players-unit-type-count focus-player galley-line > 5)
			(or	(players-unit-type-count focus-player fire-ship-line > 5)
				(or	(players-unit-type-count focus-player turtle-ship-line > 1)
					(or	(players-unit-type-count focus-player longboat-line > 5)
						(players-unit-type-count focus-player cannon-galleon-line > 0))))))
	(strategic-number sn-allow-resource-spending > 5)
	(soldier-count > 40)
	(unit-type-count-total bombard-cannon < 2)
	(can-train bombard-cannon)
=>
	(train bombard-cannon)
)

(defrule
	(up-research-status c: ri-paladin < research-available)
	(up-research-status c: ri-onager <= research-available)
	(or	(players-unit-type-count target-player mangonel-line > 3)
		(players-unit-type-count focus-player mangonel-line > 3))
	(strategic-number sn-allow-resource-spending > 5)
	(soldier-count > 50)
	(unit-type-count-total bombard-cannon < 3)
	(can-train bombard-cannon)
=>
	(train bombard-cannon)
)

(defrule
	(game-time > 2400)
	(up-compare-goal gl-handicap != YES)
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(or	(players-building-type-count target-player bombard-tower > 0)
		(and	(players-building-type-count any-human-enemy stone-wall-line > 4)
			(and	(goal MILITARY 1)
				(and	(strategic-number sn-allow-resource-spending > 5)
					(unit-type-count-total trade-cart > 15)))))
	(unit-type-count-total trebuchet-set < 11)
	(soldier-count > 45)
	(can-train trebuchet)
=>
	(train trebuchet)
)

(defrule
	(unit-type-count-total battering-ram-line < large-army-rams); Spam rams
	(or	(players-building-type-count target-player watch-tower > 2)
		(or	(and	(unit-type-count-total battering-ram-line < 3)
				(population > 65))
			(up-projectile-detected projectile-castle < 60000)))
	(up-player-distance target-player < 35)
	(can-train-with-escrow battering-ram-line)
=>
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(release-escrow wood)
	(release-escrow gold)
	(train battering-ram-line)
)

(defrule
	(or	(goal gl-panic-xbow-counter YES)
		(and	(soldier-count < 15)
			(and	(players-unit-type-count focus-player archer-line > 18)
				(game-time < 2400))))
	(unit-type-count-total mangonel-line < 2)
	(can-train-with-escrow mangonel-line)
=>
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(release-escrow wood)
	(release-escrow gold)
	(train mangonel-line)
	(set-goal gl-panic-xbow-counter NO)
)

(defrule
	(game-time > 2400)
	(or	(players-building-type-count any-enemy bombard-tower > 0)
		(and	(player-in-game any-human-enemy)
			(and	(goal MILITARY 1)
				(strategic-number sn-allow-resource-spending > 5))))
	(soldier-count > 45)
	(or	(unit-type-count-total battering-ram-line < medium-army-rams); 8 at 200 pop or higher
		(soldier-count > 65))
	(unit-type-count-total battering-ram-line < large-army-rams); 14 at 200 pop, 20 at 250
	(can-train battering-ram-line)
=>
	(train battering-ram-line)
)

(defrule
	(goal MILITARY 1)
	(up-compare-goal gl-handicap != YES)
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(strategic-number sn-allow-resource-spending > 3)
	(or	(unit-type-count-total trebuchet-set < 3)
		(gold-amount > 2000))
	(unit-type-count-total trebuchet-set < 16)
	(soldier-count > 65)
	(or	(game-time < 3000)
		(gold-amount > 900))
	(can-train trebuchet)
=>
	(train trebuchet)
)

#load-if-defined UP-MICHI-STYLE
(defrule
	(or	(game-time < 3000)
		(unit-type-count-total trade-cart > 15))
	(gold-amount > 800)
	(unit-type-count-total trebuchet-set < 7)
	(can-train trebuchet)
=>
	(train trebuchet)
)

(defrule
	(or	(unit-type-count-total trade-cart > 20)
		(and	(civ-selected turkish)
			(gold-amount > 1000)))
	(gold-amount > 800)
	(unit-type-count-total bombard-cannon < 10)
	(can-train bombard-cannon)
=>
	(train bombard-cannon)
)

#load-if-not-defined CHINESE-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined BYZANTINE-CIV
#load-if-not-defined FRANKISH-CIV
#load-if-not-defined GOTHIC-CIV
#load-if-not-defined HUN-CIV
#load-if-not-defined INDIAN-CIV
#load-if-not-defined PERSIAN-CIV
#load-if-not-defined SPANISH-CIV
#load-if-not-defined TURKISH-CIV
(defrule
	(up-compare-goal gl-current-age >= gv-castle-up)
	(or	(unit-type-count-total trade-cart > 20)
		(or	(unit-type-count-total battering-ram-line > 3)
			(or	(not	(research-available ri-onager))
				(unit-type-count-total trebuchet-set > 0))))
	(unit-type-count-total mangonel-line < 10)
	(can-train mangonel-line)
=>
	(train mangonel-line)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if

#end-if

(defrule
	(up-compare-goal gl-strategy != monk-mango-push)
	(or	(and	(current-age == imperial-age)
			(strategic-number sn-allow-resource-spending > 5))
		(and	(players-building-type-count target-player castle > 0)
			(and	(unit-type-count-total battering-ram-line < 4)
				(or	(game-time < 1500)
					(population > 55)))))
	(players-building-type-count any-enemy castle > 0)
	(unit-type-count-total battering-ram-line < 7)
	(can-train battering-ram-line)
=>
	(train battering-ram-line)
)

(defrule
	(up-compare-goal gl-strategy != monk-mango-push)
	(or	(goal MILITARY 1)
		(or	(enemy-buildings-in-town)
			(and	(players-building-type-count target-player castle > 0)
				(and	(up-compare-goal gl-strategy != korean-boom)
					(civilian-population > 40)))))
	(or	(soldier-count > 55)
		(unit-type-count-total battering-ram-line < 4))
	(unit-type-count-total battering-ram-line < 7)
	(can-train battering-ram-line)
=>
	(train battering-ram-line)
)

(defrule
	(up-compare-goal gl-strategy != monk-mango-push)
	(or	(and	(goal RAM 1)
			(unit-type-count-total battering-ram-line < 3))
		(and	(building-type-count-total town-center > 2)
			(or	(and	(soldier-count > 45)
					(goal gl-eagles heavy-eagles))
				(players-building-type-count target-player watch-tower > 4))))
	(unit-type-count-total battering-ram-line < 7)
	(can-train battering-ram-line)
=>
	(train battering-ram-line)
)

#load-if-defined TURKISH-CIV
(defrule
	(goal gl-strategy turkish-fast-imp)
	(building-type-count-total archery-range > 1)
	(unit-type-count-total battering-ram-line < 1); Absorbs arrows
	(not	(town-under-attack))
	(can-train battering-ram-line)
=>
	(train battering-ram-line)
)
#end-if

#load-if-not-defined UP-MICHI-STYLE
(defrule
	(or	(goal gl-nothing-style-map YES)
		(and	(up-compare-goal gl-current-age > gv-castle)
			(and	(goal gl-strategy default)
				(strategic-number sn-monk-trained != 0))))
=>
	(up-jump-rule 4)
)

(defrule
	(current-age >= castle-age)
	(nand	(goal gl-strategy eagle-rush)
		(civ-selected mayan))
	(building-type-count monastery > 0)
	(strategic-number sn-monk-trained == 0)
	(unit-available monk)
	(cc-players-unit-type-count 0 relic > 0)
	(current-age-time > 60)
	(or	(soldier-count > 5)
		(goal gl-nothing-style-map YES))
	(gold-amount < 100)
=>
	(set-escrow-percentage gold 60)
	(up-add-object-cost c: monk c: -1)
)

(defrule
	(current-age >= castle-age)
	(current-age-time > 60)
	(soldier-count > 5)
	(strategic-number sn-monk-trained == 0)
	(can-train-with-escrow monk)
=>
	(set-escrow-percentage gold 0)
	(release-escrow gold)
	(train monk)
	(set-strategic-number sn-monk-trained 1)
)

(defrule
	(or	(up-compare-goal gl-current-age <= gv-castle)
		(goal gl-strategy turkish-fast-imp))
	(or	(unit-type-count-total monk < 2)
		(and	(or	(players-unit-type-count focus-player knight-line > 1)
				(or	(players-unit-type-count focus-player war-wagon-line > 1)
					(players-unit-type-count focus-player conquistador-line > 1)))
			(unit-type-count-total spearman-line < 15)))
	(unit-type-count-total monk < 5)
	(can-train monk)
=>
	(train monk)
	(set-strategic-number sn-monk-trained 1)
)

(defrule
	(or	(up-compare-goal gl-current-age <= gv-castle)
		(goal gl-strategy turkish-fast-imp))
	(or	(players-unit-type-count focus-player boyar > 1)
		(or	(players-unit-type-count focus-player cataphract-line > 1)
			(or	(players-unit-type-count focus-player elephant-archer > 1)
				(players-unit-type-count focus-player janissary-line > 1))))
	(unit-type-count-total spearman-line < 15)
	(unit-type-count-total monk < 5)
	(can-train monk)
=>
	(train monk)
	(set-strategic-number sn-monk-trained 1)
)
#end-if

(defrule
	(goal gl-strategy default)
	(or	(research-completed ri-champion)
		(or	(research-completed ri-elite-eagle-warrior)
			(civ-selected gothic)))
	(players-current-age focus-player == imperial-age)
	(players-unit-type-count focus-player cataphract-line > 5)
	(up-research-status c: ri-theocracy >= research-available)
	(unit-type-count-total monk < 11)
	(can-train monk)
=>
	(train monk)
	(set-strategic-number sn-monk-trained 1)
)

(defrule
	(or	(and	(soldier-count > 40)
			(and	(or	(unit-type-count-total monk < 1)
					(soldier-count > 70))
				(unit-type-count-total monk < 2)))
		(or	(players-unit-type-count focus-player war-elephant-line > 2)
			(players-unit-type-count target-player war-elephant-line > 2)))
	(unit-type-count-total monk < 11)
	(can-train monk)
=>
	(train monk)
	(set-strategic-number sn-monk-trained 1)
)

#load-if-defined KOREAN-CIV
(defrule
	(or	(goal gl-strategy korean-boom)
		(goal gl-strategy wall-boom))
	(or	(unit-type-count-total monk < 6)
		(or	(and	(players-unit-type-count any-enemy knight-line > 3)
				(unit-type-count-total monk < 11))
			(players-unit-type-count any-enemy knight-line > 7)))
	(unit-type-count-total monk < 15)
	(can-train monk)
=>
	(train monk)
	(set-strategic-number sn-monk-trained 1)
)
#end-if

#load-if-defined AZTEC-CIV
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(goal gl-strategy-class basic-class)
	(strategic-number sn-allow-resource-spending > 5)
	(or	(research-completed ri-block-printing)
		(or	(unit-type-count-total trade-cart > 15)
			(goal FFA YES)))
	(or	(or	(unit-type-count-total trade-cart > 9)
			(gold-amount > 1200))
		(unit-type-count-total monk < 8))
	(unit-type-count-total monk < 16)
	(can-train monk)
=>
	(train monk)
)
#else
(defrule
	(goal gl-strategy-class basic-class)
	(up-compare-goal gl-current-age >= gv-castle-up)
	(strategic-number sn-allow-resource-spending > 5)
	(or	(unit-type-count-total trade-cart > 9)
		(or	(gold-amount > 1200)
			(unit-type-count-total monk < 10)))
	(or	(unit-type-count-total monk < 10)
		(research-completed ri-block-printing))
	(unit-type-count-total monk < 25)
	(can-train monk)
=>
	(train monk)
)
#end-if
#end-if

#load-if-defined KOREAN-CIV
(defrule
	(goal gl-strategy default)
	(or	(strategic-number sn-allow-resource-spending > 1)
		(and	(unit-type-count-total mangonel-line < 1)
			(players-unit-type-count focus-player battering-ram-line > 0)))
	(or	(food-amount < 600)
		(up-compare-goal gl-current-age >= gv-castle-up))
	(or	(unit-type-count-total mangonel-line < 6)
		(research-completed ri-onager))
	(unit-type-count-total mangonel-line < 9)
	(can-train mangonel-line)
=>
	(train mangonel-line)
)
#end-if

(defrule
	(goal gl-strategy xbow-rush)
	(or	(and	(unit-type-count-total mangonel-line < 1)
			(or	(players-unit-type-count focus-player battering-ram-line > 0)
				(players-unit-type-count focus-player scorpion-line > 0)))
		(and	(unit-type-count-total mangonel-line < 2)
			(or	(players-unit-type-count focus-player battering-ram-line > 1)
				(players-unit-type-count focus-player scorpion-line > 2))))
	(can-train mangonel-line)
=>
	(train mangonel-line)
)

(defrule
	(or	(and	(players-unit-type-count focus-player fire-ship-line > 1)
			(strategic-number sn-minimum-water-body-size-for-dock <= 1000))
		(and	(players-unit-type-count focus-player scorpion-line > 1)
			(and	(goal gl-strategy-class basic-class)
				(current-age == castle-age))))
	(game-time < 3000)
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total mangonel-line < 2)
	(unit-type-count-total galley-line < 1)
	(unit-type-count-total fire-ship-line < 1)
	(can-train mangonel-line)
=>
	(train mangonel-line)
)

#load-if-not-defined AZTEC-CIV
#load-if-not-defined SARACEN-CIV
#load-if-not-defined GOTHIC-CIV
(defrule
	(goal gl-advanced-archery scorpions)
	(nand	(or	(goal MILITARY 1)
			(players-building-type-count target-player castle > 0))
		(unit-type-count-total battering-ram-line < 1))
	(or	(unit-type-count-total scorpion-line < 4)
		(building-type-count-total town-center > 2))
	(or	(unit-type-count-total scorpion-line < 17)
		(research-completed ri-heavy-scorpion))
	(unit-type-count-total scorpion-line < 33)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)
#end-if

(defrule
	(research-completed ri-heavy-scorpion)
	(nand	(or	(goal MILITARY 1)
			(players-building-type-count target-player castle > 0))
		(unit-type-count-total battering-ram-line < 2))
	(unit-type-count-total scorpion-line < 16)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)
#end-if
#end-if

(defrule
	(current-age == castle-age)
	(or	(goal gl-strategy korean-boom)
		(and	(goal gl-eew-strategy-type boom)
			(goal SLING 0)))
	(or	(town-under-attack)
		(and	(or	(players-unit-type-count focus-player archer-line > 7)
				(players-unit-type-count focus-player cavalry-archer-line > 7))
			(goal POSITION FLANK)))
	(unit-type-count-total scorpion-line < 4)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)

(defrule
	(or	(and	(goal gl-strategy xbow-rush)
			(or	(players-unit-type-count focus-player skirmisher-line > 5)
				(players-unit-type-count focus-player archer-line > 5)))
		(and	(goal gl-strategy castle-drop)
			(game-time < 1400)))
	(nand	(goal RAM 1)
		(unit-type-count-total battering-ram-line < 1))
	(unit-type-count-total scorpion-line < 3)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)
(defrule
	(current-age >= castle-age)
	(food-amount > 84)
	(not	(civ-selected turkish))
	(unit-type-count-total spearman-line < 50)
	(or	(strategic-number sn-allow-resource-spending > 1)
		(unit-type-count-total spearman-line < 17))
	(or	(players-unit-type-count focus-player war-elephant-line > 4)
		(players-unit-type-count target-player war-elephant-line > 4))
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(or	(civ-selected incan)
		(or	(civ-selected indian)
			(or	(civ-selected italian)
				(or	(civ-selected magyar)
					(or	(civ-selected slavic)
						(and	(civ-selected persian)
							(and	(current-age == castle-age)
								(current-age-time < 200))))))))
=>
	(up-jump-rule 3)
)

(defrule
	(game-time > 5)
	(nand	(unit-type-count-total spearman-line > 15)
		(research-available ri-halberdier))
	(up-compare-goal CASTLE != 0)
	(up-compare-goal gl-strategy != castle-drop)
	(up-compare-goal gl-strategy != michi-boom)
	(or	(unit-type-count-total my-unique-unit-line < 20)
		(research-completed my-unique-unit-upgrade))
	(unit-type-count-total my-unique-unit-line < 80)
	(nand	(unit-type-count-total my-unique-unit-line > 13)
		(strategic-number sn-allow-resource-spending < 2))
	(can-train my-unique-unit-line)
=>
	(train my-unique-unit-line)
)

(defrule
	(up-compare-goal gl-strategy != gothic-boom)
	(up-compare-goal gl-strategy != michi-boom)
	(up-compare-goal gl-petard-wall-break-status != YES)
	(goal CASTLE 2)
	(or	(and	(unit-type-count-total my-unique-unit-line < 35)
			(up-compare-goal gl-strategy != castle-drop))
		(or	(research-completed my-unique-unit-upgrade)
			(and	(unit-type-count-total my-unique-unit-line < castle-drop-uu-amount)
				(goal gl-strategy castle-drop))))
	(can-train my-unique-unit-line)
=>
	(train my-unique-unit-line)
)

(defrule
	(nor	(civ-selected incan)
		(civ-selected indian))
	(nor	(civ-selected italian)
		(civ-selected magyar))
	(not	(civ-selected slavic))
=>
	(up-jump-rule 2)
)

(defrule
	(game-time > 5)
	(up-compare-goal CASTLE != 0)
	(up-compare-goal gl-strategy != castle-drop)
	(up-compare-goal gl-strategy != michi-boom)
	(or	(unit-type-count-total my-UU < 20)
		(research-completed my-unique-unit-upgrade))
	(unit-type-count-total my-UU < 80)
	(unit-type-count-total my-elite-UU < 80)
	(nand	(or	(unit-type-count-total my-UU > 13)
			(unit-type-count-total my-elite-UU > 13))
		(strategic-number sn-allow-resource-spending < 2))
	(can-train my-UU)
=>
	(train my-UU)
)

(defrule
	(goal CASTLE 2)
	(up-compare-goal gl-strategy != michi-boom)
	(up-compare-goal gl-petard-wall-break-status != YES)
	(or	(and	(unit-type-count-total my-UU < 35)
			(up-compare-goal gl-strategy != castle-drop))
		(or	(research-completed my-unique-unit-upgrade)
			(and	(and	(unit-type-count-total my-UU < castle-drop-uu-amount)
					(unit-type-count-total my-elite-UU < castle-drop-uu-amount))
				(goal gl-strategy castle-drop))))
	(can-train my-UU)
=>
	(train my-UU)
)

#load-if-defined TURKISH-CIV
(defrule
	(goal gl-strategy turkish-fast-imp)
	(current-age == castle-age)
	(or	(and	(up-compare-goal gl-current-age >= gv-castle-up)
			(unit-type-count-total scorpion-line < 4))
		(unit-type-count-total scorpion-line < 3))
	(or	(players-unit-type-count focus-player archer-line > 3)
		(or	(players-unit-type-count focus-player skirmisher-line > 5)
			(players-unit-type-count focus-player cavalry-archer-line > 2)))
	(can-train scorpion-line)
=>
	(train scorpion-line)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(current-age == castle-age)
	(unit-type-count-total scorpion-line < 3)
	(or	(players-unit-type-count focus-player militiaman-line > 3)
		(or	(players-unit-type-count focus-player eagle-warrior-line > 2)
			(players-unit-type-count focus-player spearman-line > 7)))
	(can-train scorpion-line)
=>
	(train scorpion-line)
)
#end-if

#load-if-defined CELTIC-CIV
#load-if-not-defined UP-MICHI-STYLE
(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(nand	(or	(goal MILITARY 1)
			(players-building-type-count any-enemy castle > 0))
		(unit-type-count-total battering-ram-line < 1))
	(or	(unit-type-count-total scorpion-line < 4)
		(building-type-count-total town-center > 2))
	(or	(unit-type-count-total scorpion-line < 17)
		(research-completed ri-heavy-scorpion))
	(unit-type-count-total scorpion-line < 33)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)
#else
(defrule
	(strategic-number sn-allow-resource-spending > 0)
	(goal gl-strategy default)
	(or	(unit-type-count-total scorpion-line < 17)
		(research-completed ri-heavy-scorpion))
	(unit-type-count-total scorpion-line < 33)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)
#end-if

(defrule
	(goal gl-strategy default)
	(food-amount > 75)
	(strategic-number sn-allow-resource-spending > 2)
	(or	(players-unit-type-count any-enemy scout-cavalry-line > 8)
		(or	(players-unit-type-count any-enemy knight-line > 5)
			(or	(players-unit-type-count any-enemy tarkan-line > 5)
				(or	(players-unit-type-count any-enemy cataphract-line > 5)
					(players-unit-type-count any-enemy boyar > 5)))))
	(unit-type-count-total spearman-line < 43)
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(goal gl-strategy default)
	(current-age == castle-age)
	(food-amount > 109)
	(current-age-time < 600)
	(strategic-number sn-allow-resource-spending > 1)
	(research-completed ri-long-swordsman)
	(unit-type-count-total militiaman-line < 14)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)
#end-if

#load-if-defined CHINESE-CIV
(defrule
	(research-completed my-unique-research)
	(strategic-number sn-allow-resource-spending > 3)
	(nand	(or	(goal MILITARY 1)
			(players-building-type-count any-enemy castle > 0))
		(unit-type-count-total battering-ram-line < 1))
	(or	(unit-type-count-total scorpion-line < 12)
		(research-completed ri-heavy-scorpion))
	(unit-type-count-total scorpion-line < 20)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)
#end-if

#load-if-defined JAPANESE-CIV
(defrule
	(goal gl-strategy default)
	(current-age == castle-age)
	(food-amount > 109)
	(current-age-time < 600)
	(strategic-number sn-allow-resource-spending > 1)
	(research-completed ri-long-swordsman)
	(unit-type-count-total militiaman-line < 14)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(goal gl-strategy default)
	(or	(current-age == castle-age)
		(research-completed ri-arbalest))
	(strategic-number sn-allow-resource-spending > 1)
	(research-completed ri-crossbow)
	(unit-type-count-total archer-line < 22)
	(can-train archer-line)
=>
	(train archer-line)
)
#end-if

#load-if-defined KOREAN-CIV
(defrule
	(goal gl-strategy default)
	(current-age == castle-age)
	(food-amount > 109)
	(current-age-time < 600)
	(strategic-number sn-allow-resource-spending > 1)
	(research-completed ri-long-swordsman)
	(unit-type-count-total militiaman-line < 12)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)
#end-if

#load-if-defined VIKING-CIV
(defrule
	(goal gl-strategy default)
	(current-age == castle-age)
	(food-amount > 109)
	(current-age-time < 600)
	(strategic-number sn-allow-resource-spending > 1)
	(research-completed ri-long-swordsman)
	(unit-type-count-total militiaman-line < 16)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)
#end-if

#load-if-not-defined AZTEC-CIV
#load-if-not-defined INCAN-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(goal MILITARY 0)
	(current-age == castle-age)
	(game-time < 2100)
	(research-completed ri-light-cavalry)
	(food-amount > 170)
	(gold-amount < 50)
	(or	(town-under-attack)
		(not	(goal D-TSA 0)))
	(unit-type-count-total scout-cavalry-line < 7)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)

(defrule
	(or	(goal gl-strategy-class basic-class)
		(goal gl-strategy heavy-krush))
	(or	(or	(players-unit-type-count focus-player monk > 5)
			(and	(or	(research-completed ri-light-cavalry)
					(goal gl-strategy heavy-krush))
				(players-unit-type-count focus-player monk > 3)))
		(players-unit-type-count focus-player missionary > 5))
	(unit-type-count-total scout-cavalry-line < 13)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)

(defrule
	(unit-type-count-total knight-line < 5)
	(unit-type-count-total huskarl-set < 1)
	(unit-type-count-total mangonel-line < 1)
	(unit-type-count-total bombard-cannon < 1)
	(or	(players-unit-type-count focus-player scorpion-line > 6)
		(players-unit-type-count target-player scorpion-line > 6))
	(strategic-number sn-allow-resource-spending > 5)
	(goal gl-strategy-class basic-class)
	(unit-type-count-total scout-cavalry-line < 17)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)

#load-if-not-defined INDIAN-CIV
(defrule
	(food-amount > 109)
	(nand	(research-available ri-crossbow)
		(unit-type-count-total archer-line > 8))
	(or	(unit-type-count-total knight-line < 14)
		(research-completed ri-chain-barding))
	(or	(goal gl-advanced-cavalry heavy-knights)
		(goal gl-advanced-cavalry knight-CA))
	(or	(unit-type-count-total knight-line < 12)
		(strategic-number sn-allow-resource-spending > 1))
	(unit-type-count-total knight-line < 40)
	(can-train knight-line)
=>
	(train knight-line)
)

(defrule
	(goal gl-strategy-class basic-class)
	(or	(research-completed ri-paladin)
		(and	(goal gl-current-age gv-castle)
			(and	(research-completed ri-required-armor-upgrade); Chain barding for non-byz
				(unit-type-count-total knight-line < 40))))
	(or	(unit-type-count-total knight-line < 14)
		(research-completed ri-required-armor-upgrade))
	(or	(unit-type-count-total knight-line < 12)
		(strategic-number sn-allow-resource-spending > 1))
	(can-train knight-line)
=>
	(train knight-line)
)
#else
(defrule
	(food-amount > 94)
	(or	(unit-type-count-total camel-line < 14)
		(research-completed ri-chain-barding))
	(goal gl-advanced-cavalry indian-camels)
	(or	(unit-type-count-total camel-line < 12)
		(strategic-number sn-allow-resource-spending > 1))
	(or	(unit-type-count-total camel-line < 40)
		(and	(research-completed ri-imperial-camel)
			(population < pop-to-full-pop-attack)))
	(can-train camel-line)
=>
	(train camel-line)
)

(defrule
	(goal gl-strategy-class basic-class)
	(or	(research-completed ri-imperial-camel)
		(and	(current-age == castle-age)
			(and	(research-completed ri-chain-barding)
				(unit-type-count-total camel-line < 40))))
	(or	(unit-type-count-total camel-line < 14)
		(research-completed ri-chain-barding))
	(or	(unit-type-count-total camel-line < 12)
		(strategic-number sn-allow-resource-spending > 1))
	(can-train camel-line)
=>
	(train camel-line)
)
#end-if

#load-if-defined PERSIAN-CIV
(defrule
	(food-amount > 109)
	(nand	(research-available ri-crossbow)
		(unit-type-count-total archer > 8))
	(goal gl-advanced-cavalry knight-LC)
	(or	(unit-type-count-total knight-line < 12)
		(strategic-number sn-allow-resource-spending > 1))
	(or	(unit-type-count-total knight-line < 14)
		(research-completed ri-chain-barding))
	(unit-type-count-total knight-line < 40)
	(can-train knight-line)
=>
	(train knight-line)
)
#end-if

#end-if
#end-if
#end-if

#load-if-defined TURKISH-CIV
(defrule
	(current-age == castle-age)
	(current-age-time < 480)
	(or	(goal gl-advanced-archery heavy-archers)
		(strategic-number sn-allow-resource-spending > 1))
	(goal gl-strategy default)
	(food-amount > 109)
	(nand	(unit-type-count-total knight-line > 11)
		(research-available ri-chain-barding))
	(unit-type-count-total knight-line < 20)
	(can-train knight-line)
=>
	(train knight-line)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(or	(and	(players-civ any-enemy aztec)
			(and	(up-compare-goal gl-current-age >= gv-castle-up)
				(unit-type-count-total scout-cavalry-line < 5)))
		(or	(players-unit-type-count focus-player monk > 3)
			(players-unit-type-count focus-player missionary > 3)))
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)

(defrule
	(goal gl-strategy-type basic-flush)
	(goal gl-current-age gv-feudal)
	(nor	(players-civ any-enemy aztec)
		(players-civ any-enemy mayan))
	(players-military-population every-enemy < 3)
	(game-time > 960)
	(game-time < 1260)
	(unit-type-count-total spearman-line < 6)
	(can-train spearman-line)
=>
	(train spearman-line)
)
#else
#load-if-not-defined UP-AZTEC-CIV-ENEMY
#load-if-not-defined UP-MAYAN-CIV-ENEMY
(defrule
	(building-type-count-total town-center > 0)
	(or	(players-unit-type-count focus-player paladin > 3)
		(and	(goal gl-strategy-type basic-flush)
			(and	(goal gl-current-age gv-feudal)
				(and	(game-time < 1260)
					(players-military-population every-enemy < 3)))))
	(game-time > 960)
	(unit-type-count-total spearman-line < 35)
	(can-train spearman-line)
=>
	(train spearman-line)
)
#end-if
#end-if
#end-if

#load-if-defined GOTHIC-CIV
(defrule
	(or	(and	(unit-type-count-total huskarl2 < 20)
			(not	(research-completed ri-elite-huskarl)))
		(and	(unit-type-count-total elite-huskarl2 < 30)
			(research-completed ri-elite-huskarl)))
	(or	(can-train huskarl2)
		(can-train elite-huskarl2))
=>
	(train huskarl2)
	(train elite-huskarl2)
)

(defrule
	(goal gl-advanced-archery scorpions)
	(unit-type-count-total scorpion-line < 18)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)
#end-if

#load-if-not-defined AZTEC-CIV
#load-if-not-defined SARACEN-CIV
(defrule
	(or	(goal gl-strategy-class basic-class)
		(goal gl-strategy xbow-rush))
	(up-compare-goal gl-petard-wall-break-status != YES)
	(up-compare-const gv-michi-style != 1)
	(current-age == castle-age)
	(strategic-number sn-minimum-water-body-size-for-dock != 2001)
	(or	(unit-type-count-total my-unique-unit-line < castle-age-uu-amount)
		(and	(current-age-time < 200)
			(and	(town-under-attack)
				(goal gl-strategy castle-drop)))); To save persians
	(can-train my-unique-unit-line)
=>
	(train my-unique-unit-line)
)
#end-if
#end-if

#load-if-not-defined ITALIAN-CIV
#load-if-defined UP-ITALIAN-CIV-ALLY
(defrule
	(research-completed ri-chain-mail)
	(or	(goal gl-strategy default)
		(or	(goal gl-strategy gothic-boom)
			(goal gl-strategy jaguar-boom)))
	(unit-type-count-total knight-line < 5)
	(unit-type-count-total scout-cavalry-line < 5)
	(or	(players-unit-type-count focus-player hand-cannoneer > 7)
		(or	(players-unit-type-count focus-player conquistador-line > 5)
			(players-unit-type-count focus-player janissary-line > 5)))
	(unit-type-count-total condottiero < 20)
	(can-train condottiero)
=>
	(train condottiero-unit)
)
#end-if
#else
(defrule
	(research-completed ri-chain-mail)
	(goal gl-strategy default)
	(unit-type-count-total knight-line < 5)
	(unit-type-count-total scout-cavalry-line < 5)
	(or	(players-unit-type-count focus-player hand-cannoneer > 7)
		(or	(players-unit-type-count focus-player conquistador-line > 5)
			(players-unit-type-count focus-player janissary-line > 5)))
	(unit-type-count-total condottiero < 20)
	(can-train condottiero)
=>
	(train condottiero-unit)
)
#end-if

#load-if-defined INCAN-CIV
(defrule
	(goal gl-advanced-archery slingers)
	(or	(unit-type-count-total slinger < 10)
		(strategic-number sn-allow-resource-spending > 1))
	(or	(unit-type-count-total slinger < 38)
		(strategic-number sn-allow-resource-spending > 2))
	(or	(or	(current-age == castle-age)
			(unit-type-count-total slinger < 18))
		(strategic-number sn-allow-resource-spending > 5))
	(unit-type-count-total slinger < 33)
	(can-train slinger)
=>
	(train slinger)
)
#end-if

#load-if-defined TEUTONIC-CIV
(defrule
	(goal gl-strategy-class basic-class)
	(goal CASTLE 0)
	(strategic-number sn-allow-resource-spending > 0)
	(or	(players-unit-type-count focus-player eagle-warrior-line > 6)
		(or	(players-unit-type-count focus-player spearman-line > 9)
			(or	(players-unit-type-count focus-player huskarl-line > 2)
				(or	(players-unit-type-count focus-player knight-line > 6)
					(players-unit-type-count focus-player kamayuk > 5)))))
	(unit-type-count-total my-unique-unit-line < 17)
	(can-train my-unique-unit-line)
=>
	(train my-unique-unit-line)
)
#end-if

#load-if-defined KOREAN-CIV
(defrule
	(goal gl-strategy korean-boom)
	(unit-type-count-total spearman-line < 14)
	(or	(players-unit-type-count any-enemy scout-cavalry-line > 5)
		(or	(players-unit-type-count any-enemy knight-line > 4)
			(or	(and	(players-unit-type-count any-enemy battering-ram-line > 0)
					(soldier-count < 20))
				(players-unit-type-count any-enemy boyar > 3))))
	(can-train spearman-line)
=>
	(train spearman-line)
)
#end-if

#load-if-not-defined AZTEC-CIV
#load-if-not-defined INCAN-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(goal gl-strategy CA-boom)
		(and	(or	(goal gl-strategy xbow-rush)
				(goal gl-strategy CA-rush))
			(current-age-time < 240)))
	(players-building-type-count target-player watch-tower > 0)
	(goal gl-rush-suitability-on-map GOOD)
	(or	(enemy-buildings-in-town)
		(town-under-attack))
	(unit-type-count-total militiaman-line < 4)
=>
	(train militiaman-line)
)

(defrule
	(or	(goal CASTLE 8)
		(or	(goal gl-advanced-archery heavy-cannoneers)
			(and	(or	(players-unit-type-count focus-player huskarl-line > 1)
					(players-unit-type-count focus-player eagle-warrior-line > 1))
				(and	(unit-type-count-total hand-cannoneer < 15)
					(up-research-status c: ri-paladin <= research-available)))))
	(unit-type-count-total hand-cannoneer < 70)
	(can-train hand-cannoneer)
=>
	(train hand-cannoneer)
)

(defrule
	(or	(and	(or	(goal gl-advanced-archery light-cannoneers)
				(players-unit-type-count focus-player teutonic-knight-line > 4))
			(unit-type-count-total hand-cannoneer < 17))
		(or	(and	(goal gl-advanced-archery archer-to-gun-transfer)
				(food-amount > 60))
			(and	(goal gl-strategy turkish-fast-imp)
				(unit-type-count-total hand-cannoneer < 5))))
	(unit-type-count-total hand-cannoneer < 60)
	(can-train hand-cannoneer)
=>
	(train hand-cannoneer)
)

#load-if-defined SARACEN-CIV
(defrule
	(goal gl-advanced-archery 0)
	(or	(players-unit-type-count focus-player spearman-line > 6)
		(or	(players-unit-type-count focus-player samurai-line > 4)
			(or	(players-unit-type-count focus-player cataphract-line > 4)
				(players-unit-type-count focus-player kamayuk > 5))))
	(unit-type-count-total hand-cannoneer < 15)
	(can-train hand-cannoneer)
=>
	(train hand-cannoneer)
)
#end-if

#load-if-defined TURKISH-CIV
(defrule
	(goal gl-strategy turkish-fast-imp)
	(nand	(research-available ri-ring-archer-armor)
		(or	(players-unit-type-count focus-player archer-line > 4)
			(or	(players-unit-type-count focus-player skirmisher-line > 4)
				(players-unit-type-count focus-player cavalry-archer-line > 3))))
	(or	(or	(unit-type-count-total scout-cavalry-line > 2)
			(building-type-count-total stable < 2))
		(not	(research-available ri-heresy)))
	(can-train hand-cannoneer)
=>
	(train hand-cannoneer)
)
#end-if

#end-if
#end-if
#end-if

#load-if-defined GOTHIC-CIV
(defrule
	(current-age == feudal-age)
	(goal gl-feudal-infantry men-at-arms)
	(food-amount >= militia-food)
	(unit-type-count-total militiaman-line < max-feudal-maa)
	(can-train militiaman-line)
	(or	(research-completed ri-man-at-arms)
		(and	(unit-type-count-total militiaman-line < 3)
			(goal gl-feudal-infantry men-at-arms)))
=>
	(train militiaman-line)
)
#else
(defrule
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age <= feudal-age)
	(goal gl-feudal-infantry men-at-arms)
	(food-amount >= militia-food)
	(unit-type-count-total militiaman-line < max-feudal-maa)
	(can-train militiaman-line)
	(or	(research-completed ri-man-at-arms)
		(unit-type-count-total militiaman-line < 3))
=>
	(train militiaman-line)
)

(defrule
	(goal gl-eternal-drush NO)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(current-age <= feudal-age)
	(goal MILITARY 0)
	(town-under-attack)
	(food-amount >= militia-food)
	(unit-type-count-total militiaman-line < max-feudal-maa)
	(can-train militiaman-line)
	(research-completed ri-man-at-arms)
=>
	(train militiaman-line)
)
#end-if

(defrule
	(or	(goal gl-advanced-infantry heavy-swordsmen)
		(goal CASTLE 4))
	(food-amount > 88)
	(or	(unit-type-count-total militiaman-line < 8)
		(not	(research-available ri-long-swordsman)))
	(unit-type-count-total militiaman-line < 30)
	(or	(and	(strategic-number sn-allow-resource-spending > 1)
			(research-completed ri-chain-mail))
		(unit-type-count-total militiaman-line < 18))
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(goal gl-advanced-infantry heavy-swordsmen)
	(current-age == castle-age)
	(research-completed ri-heavy-plow)
	(food-amount > 88)
	(not	(research-available ri-chain-mail))
	(or	(up-compare-goal gl-current-age >= gv-castle-up)
		(unit-type-count-total militiaman-line < 35))
	(unit-type-count-total militiaman-line < 50)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(goal CASTLE 4)
	(food-amount > 88)
	(research-completed ri-heavy-plow)
	(or	(unit-type-count-total militiaman-line < 25)
		(up-compare-goal gl-current-age >= gv-castle-up))
	(nor	(research-available ri-long-swordsman)
		(research-available ri-chain-mail))
	(nor	(research-available ri-two-handed-swordsman)
		(research-available ri-plate-mail))
	(unit-type-count-total militiaman-line < 40)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#load-if-defined GOTHIC-CIV
(defrule
	(goal gl-strategy default)
	(current-age >= castle-age)
	(food-amount > 88)
	(players-unit-type-count any-enemy militiaman-line > 13)
	(or	(unit-type-count-total militiaman-line < 25)
		(up-compare-goal gl-current-age >= gv-castle-up))
	(nor	(research-available ri-long-swordsman)
		(research-available ri-chain-mail))
	(unit-type-count-total militiaman-line < 40)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(goal gl-strategy default)
	(current-age == castle-age)
	(food-amount > 88)
	(current-age-time < 720)
	(strategic-number sn-allow-resource-spending > 1)
	(research-completed ri-long-swordsman)
	(unit-type-count-total militiaman-line < 17)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(goal gl-strategy default)
	(current-age == castle-age)
	(strategic-number sn-allow-resource-spending > 1)
	(research-completed ri-crossbow)
	(unit-type-count-total archer-line < 17)
	(can-train archer-line)
=>
	(train archer-line)
)
#end-if

(defrule
	(goal gl-strategy-class basic-class)
	(food-amount > militia-food)
	(not	(research-completed my-unique-unit-upgrade))
	(strategic-number sn-allow-resource-spending > 3)
	(research-completed ri-champion)
	(unit-type-count-total militiaman-line < 30)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(current-age == imperial-age)
	(food-amount > 88)
	(or	(goal gl-advanced-infantry heavy-swordsmen)
		(goal CASTLE 4))
	(or	(strategic-number sn-allow-resource-spending > 2)
		(unit-type-count-total militiaman-line < 25))
	(research-completed ri-two-handed-swordsman)
	(or	(up-research-status c: ri-champion >= research-pending)
		(unit-type-count-total militiaman-line < 40))
	(unit-type-count-total militiaman-line < 120)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(current-age != feudal-age)
=>
	(up-jump-rule 10)
)

(defrule
	(goal gl-strategy default)
	(food-amount > 84)
	(players-unit-type-count every-enemy archer-line < 5)
	(unit-type-count-total spearman-line < 13)
	(or	(and	(players-current-age any-enemy == castle-age)
			(nor	(players-civ any-enemy mayan)
				(players-civ any-enemy aztec)))
		(and	(players-building-type-count any-enemy watch-tower > 0)
			(unit-type-count-total spearman-line < 2)))
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(or	(goal gl-strategy-class basic-class)
		(or	(goal gl-eew-strategy-type boom)
			(goal gl-strategy sling)))
	(food-amount > 84)
	(or	(goal gl-strategy-type default)
		(up-compare-goal gl-current-age >= gv-feudal-up))
	(or	(players-unit-type-count any-enemy scout-cavalry-line > 5)
		(players-unit-type-count any-enemy knight-line > 0))
	(unit-type-count-total spearman-line < 12)
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(goal gl-feudal-trash YES)
	(players-building-type-count target-player watch-tower < 3)
	(or	(and	(unit-type-count-total archer-line < 4)
			(players-unit-type-count any-enemy militiaman-line > 0))
		(or	(players-unit-type-count any-enemy militiaman-line > 2)
			(or	(players-civ any-enemy gothic)
				(players-civ any-enemy japanese))))
	(unit-type-count-total archer-line < 11)
	(can-train archer-line)
=>
	(train archer-line)
)

(defrule
	(goal gl-feudal-trash YES)
	(food-amount > 84)
	(or	(and	(players-unit-type-count every-enemy archer-line < 2)
			(unit-type-count-total spearman-line < 2))
		(players-building-type-count any-enemy stable > 0))
	(unit-type-count-total spearman-line < 10)
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(up-compare-goal gl-strategy != sling)
	(goal gl-strategy-type default)
	(food-amount > 84)
	(or	(unit-type-count-total spearman-line < 12)
		(food-amount < 500))
	(unit-type-count-total spearman-line < 27)
	(or	(players-unit-type-count any-enemy knight-line > 5)
		(and	(game-time < 1200)
			(and	(players-building-type-count every-enemy stable > 0)
				(unit-type-count-total spearman-line < 7))))
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(goal gl-strategy-class basic-class)
	(goal gl-current-age gv-feudal)
	(food-amount > 74)
	(unit-type-count-total skirmisher-line < 7)
	(or	(players-unit-type-count any-enemy archer-line > 2)
		(or	(players-unit-type-count any-enemy cavalry-archer-line > 0)
			(or	(goal MILITARY 1)
				(town-under-attack))))
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(goal gl-feudal-archery archers)
	(food-amount > 74)
	(or	(unit-type-count-total skirmisher-line < 5)
		(or	(players-unit-type-count any-enemy skirmisher-line > 2)
			(or	(players-unit-type-count any-enemy archer-line > 4)
				(not	(can-train archer-line)))))
	(unit-type-count-total skirmisher-line < 13)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(goal gl-feudal-archery archer-skirm)
	(or	(and	(players-building-type-count target-player watch-tower < 3)
			(unit-type-count-total archer-line < 18))
		(up-compare-const gv-feudal-age-end == 1))
	(or	(unit-type-count-total archer-line < 9)
		(unit-type-count-total skirmisher-line > 7))
	(can-train archer-line)
=>
	(train archer-line)
)

(defrule
	(goal gl-strategy default)
	(town-under-attack)
	(goal MILITARY 0)
	(or	(up-compare-goal gl-current-age <= gv-feudal)
		(soldier-count < 12))
	(food-amount > 129)
	(unit-type-count-total scout-cavalry-line < 8)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)

(defrule
	(goal gl-strategy default)
	(up-compare-const gv-feudal-age-end == 1)
	(or	(nor	(civ-selected japanese)
			(civ-selected gothic))
		(up-compare-goal gl-my-villager-count-total > 80))
	(or	(up-research-status c: ri-bloodlines >= research-pending)
		(research-available ri-bloodlines))
	(food-amount > 129)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)

#load-if-not-defined TURKISH-CIV
(defrule
	(or	(goal gl-feudal-trash YES)
		(and	(unit-type-count-total skirmisher-line > 15)
			(or	(gold-amount == 0)
				(and	(gold-amount == 50)
					(civ-selected aztec)))))
	(current-age == feudal-age)
	(food-amount > 74)
	(unit-type-count-total skirmisher-line < 55)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(gold-amount > 300)
	(unit-type-count-total trade-cart > 25)
=>
	(up-jump-rule 1)
)

(defrule
	(or	(goal gl-strategy-class basic-class)
		(research-completed ri-bracer))
	(research-completed ri-elite-skirmisher)
	(or	(players-unit-type-count focus-player archer-line > 10)
		(players-unit-type-count focus-player skirmisher-line > 13))
	(or	(unit-type-count-total skirmisher-line < 22)
		(or	(players-unit-type-count focus-player archer-line > 16)
			(players-unit-type-count focus-player skirmisher-line > 17)))
	(food-amount > 74)
	(unit-type-count-total skirmisher-line < 37)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(building-type-count-total town-center > 0)
	(goal gl-advanced-trash YES)
	(unit-type-count-total spearman-line < 20)
	(food-amount > 84)
	(unit-type-count-total spearman-line < 55)
	(not	(research-available ri-pikeman))
	(nor	(players-civ every-enemy mayan)
		(players-civ every-enemy aztec))
	(can-train spearman-line)
=>
	(train spearman-line)
)
#end-if

(defrule
	(goal gl-advanced-trash YES)
	(or	(nand	(unit-type-count-total skirmisher-line > 15)
			(or	(building-type-count-total town-center == 1)
				(not	(research-completed ri-elite-skirmisher))))
		(current-age == feudal-age))
	(food-amount > 74)
	(or	(unit-type-count-total skirmisher-line < 28)
		(strategic-number sn-allow-resource-spending > 1))
	(unit-type-count-total skirmisher-line < 40)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(goal gl-strategy xbow-rush)
	(current-age-time < 180)
	(nand	(goal RAM 1)
		(unit-type-count-total battering-ram-line < 1))
	(research-completed ri-bodkin-arrow)
	(or	(unit-type-count-total spearman-line < 7)
		(and	(unit-type-count-total spearman-line < 12)
			(players-unit-type-count focus-player knight-line > 3)))
	(or	(players-unit-type-count focus-player scout-cavalry-line > 2)
		(players-unit-type-count focus-player knight-line > 0))
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(or	(goal gl-strategy korean-boom)
		(or	(goal gl-strategy turkish-fast-imp)
			(goal gl-strategy default)))
	(or	(unit-type-count-total spearman-line < 3)
		(and	(unit-type-count-total spearman-line < 6)
			(players-unit-type-count any-enemy knight-line > 3)))
	(or	(players-unit-type-count any-enemy scout-cavalry-line > 2)
		(players-unit-type-count any-enemy knight-line > 0))
	(can-train spearman-line)
=>
	(train spearman-line)
)

#load-if-defined SARACEN-CIV
(defrule
	(goal gl-strategy-class basic-class)
	(food-amount > 104)
	(or	(game-time < 4000)
		(unit-type-count-total trade-cart > 5))
	(or	(and	(players-unit-type-count any-enemy knight-line > 0)
			(unit-type-count-total mameluke-line < 6))
		(and	(players-unit-type-count any-enemy scout-cavalry-line > 6)
			(and	(players-unit-type-count any-enemy knight-line > 4)
				(unit-type-count-total mameluke-line < 12))))
	(can-train mameluke-line)
=>
	(train mameluke-line)
)
#end-if


#load-if-not-defined AZTEC-CIV
#load-if-not-defined HUN-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(or	(not	(unit-available camel-line))
		(and	(up-compare-const gv-michi-style == 1)
			(or	(and	(civ-selected persian)
					(building-type-count castle > 1))
				(up-research-status c: ri-paladin >= research-pending))))
=>
	(up-jump-rule 3)
)

(defrule
	(goal gl-strategy-class basic-class)
	(food-amount > 104)
	(or	(and	(unit-type-count-total camel-line < 7)
			(or	(players-unit-type-count focus-player scout-cavalry-line > 2)
				(or	(players-unit-type-count focus-player knight-line > 0)
					(players-unit-type-count focus-player cavalry-archer-line > 4))))
		(or	(players-unit-type-count focus-player scout-cavalry-line > 6)
			(players-unit-type-count focus-player knight-line > 4)))
	(unit-type-count-total camel-line < 24)
	(can-train camel-line)
=>
	(train camel-line)
)

(defrule
	(goal gl-strategy-class basic-class)
	(food-amount > 104)
	(or	(and	(unit-type-count-total camel-line < 7)
			(or	(players-unit-type-count target-player scout-cavalry-line > 2)
				(or	(players-unit-type-count target-player knight-line > 0)
					(players-unit-type-count target-player cavalry-archer-line > 4))))
		(or	(players-unit-type-count target-player scout-cavalry-line > 6)
			(players-unit-type-count target-player knight-line > 4)))
	(unit-type-count-total camel-line < 24)
	(can-train camel-line)
=>
	(train camel-line)
)

(defrule
	(food-amount > 84)
	(or	(players-unit-type-count focus-player boyar > 5)
		(or	(players-unit-type-count focus-player war-elephant-line > 4)
			(players-unit-type-count target-player war-elephant-line > 4)))
	(unit-type-count-total camel-line < 20)
	(can-train camel-line)
=>
	(train camel-line)
)
#end-if
#end-if
#end-if

#load-if-not-defined INDIAN-CIV
(defrule
	(or	(goal gl-strategy krush)
		(and	(unit-type-count-total trade-cart > 25)
			(and	(research-completed ri-paladin)
				(research-completed ri-blast-furnace))))
	(food-amount > 109)
	(or	(unit-type-count-total knight-line < 14)
		(or	(research-completed ri-chain-barding)
			(strategic-number sn-allow-resource-spending < 2)))
	(can-train knight-line)
=>
	(train knight-line)
)
#else
(defrule
	(goal gl-strategy crush)
	(food-amount > 109)
	(or	(unit-type-count-total camel-line < 14)
		(or	(research-completed ri-chain-barding)
			(strategic-number sn-allow-resource-spending < 2)))
	(unit-type-count-total camel-line < 150)
	(can-train camel-line)
=>
	(train camel-line)
)

(defrule
	(goal gl-strategy default)
	(up-compare-goal gl-current-age <= gv-castle)
	(current-age == castle-age)
	(or	(research-completed ri-crossbow)
		(unit-type-count-total camel-line > 5))
	(or	(unit-type-count-total archer-line < 23)
		(and	(up-compare-goal gl-current-age <= gv-castle)
			(and	(strategic-number sn-allow-resource-spending > 2)
				(unit-type-count-total knight-line > 10))))
	(unit-type-count-total archer-line < 40)
	(can-train archer-line)
=>
	(train archer-line)
)

(defrule
	(goal gl-strategy default)
	(current-age == castle-age)
	(research-completed ri-elite-skirmisher)
	(players-unit-type-count every-enemy eagle-warrior-line < 6)
	(players-unit-type-count every-enemy knight-line < 4)
	(or	(unit-type-count-total skirmisher-line < 13)
		(strategic-number sn-allow-resource-spending > 1))
	(unit-type-count-total skirmisher-line < 30)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(goal gl-strategy default)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == feudal-age)
	(players-military-population every-enemy > 25)
	(soldier-count < 32)
	(can-train archer-line)
=>
	(train archer-line)
)
#end-if

#load-if-not-defined TURKISH-CIV
(defrule
	(nor	(goal gl-strategy-class basic-class)
		(goal gl-eew-strategy-type boom))
=>
	(up-jump-rule 10)
)

(defrule
	(goal gl-strategy-class basic-class)
	(current-age >= castle-age)
	(food-amount > 84)
	(unit-type-count-total spearman-line < 30)
	(or	(strategic-number sn-allow-resource-spending > 1)
		(unit-type-count-total spearman-line < 17))
	(or	(players-unit-type-count focus-player scout-cavalry-line > 8)
		(or	(players-unit-type-count focus-player knight-line > 6)
			(or	(players-unit-type-count focus-player boyar > 5)
				(players-unit-type-count focus-player camel-line > 6))))
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(goal gl-eew-strategy-type boom)
	(current-age >= castle-age)
	(food-amount > 84)
	(or	(goal gl-eagles heavy-eagles)
		(goal SLING 0))
	(unit-type-count-total spearman-line < 30)
	(or	(strategic-number sn-allow-resource-spending > 1)
		(unit-type-count-total spearman-line < 17))
	(or	(players-unit-type-count focus-player scout-cavalry-line > 8)
		(players-unit-type-count focus-player knight-line > 6))
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(goal gl-strategy-class basic-class)
	(food-amount > 84)
	(unit-type-count-total spearman-line < 9)
	(or	(players-unit-type-count focus-player knight-line > 2)
		(or	(players-unit-type-count focus-player war-wagon-line > 1)
			(or	(players-unit-type-count focus-player conquistador-line > 4)
				(or	(players-unit-type-count focus-player scout-cavalry-line > 2)
					(players-unit-type-count focus-player boyar > 2)))))
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(goal gl-strategy-class basic-class)
	(current-age >= castle-age)
	(food-amount > 84)
	(unit-type-count-total spearman-line < 30)
	(or	(strategic-number sn-allow-resource-spending > 1)
		(unit-type-count-total spearman-line < 17))
	(or	(players-unit-type-count target-player scout-cavalry-line > 8)
		(or	(players-unit-type-count target-player knight-line > 6)
			(or	(players-unit-type-count target-player boyar > 5)
				(players-unit-type-count target-player camel-line > 6))))
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(goal gl-eew-strategy-type boom)
	(current-age >= castle-age)
	(food-amount > 84)
	(or	(goal gl-eagles heavy-eagles)
		(goal SLING 0))
	(unit-type-count-total spearman-line < 30)
	(or	(strategic-number sn-allow-resource-spending > 1)
		(unit-type-count-total spearman-line < 17))
	(or	(players-unit-type-count target-player scout-cavalry-line > 8)
		(players-unit-type-count target-player knight-line > 6))
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(goal gl-strategy-class basic-class)
	(food-amount > 84)
	(unit-type-count-total spearman-line < 9)
	(or	(players-unit-type-count target-player knight-line > 2)
		(or	(players-unit-type-count target-player war-wagon-line > 1)
			(or	(players-unit-type-count target-player conquistador-line > 4)
				(or	(players-unit-type-count target-player scout-cavalry-line > 2)
					(or	(players-unit-type-count target-player boyar > 2)
						(players-unit-type-count target-player magyar-huszar > 2))))))
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(up-research-status c: ri-halberdier >= research-available)
	(food-amount > 84)
	(unit-type-count-total spearman-line < 35)
	(or	(players-unit-type-count focus-player scout-cavalry-line > 7)
		(or	(players-unit-type-count focus-player knight-line > 6)
			(or	(players-unit-type-count focus-player cataphract-line > 5)
				(or	(players-unit-type-count focus-player boyar > 6)
					(players-unit-type-count focus-player mameluke-line > 6)))))
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(up-research-status c: ri-halberdier >= research-available)
	(food-amount > 84)
	(unit-type-count-total spearman-line < 35)
	(or	(players-unit-type-count target-player scout-cavalry-line > 7)
		(or	(players-unit-type-count target-player knight-line > 6)
			(or	(players-unit-type-count target-player cataphract-line > 5)
				(or	(players-unit-type-count target-player boyar > 6)
					(players-unit-type-count target-player mameluke-line > 6)))))
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(goal gl-strategy-class basic-class)
	(current-age >= castle-age)
	(food-amount > 74)
	(or	(strategic-number sn-allow-resource-spending > 0)
		(soldier-count < 6))
	(or	(players-unit-type-count focus-player archer-line > 8)
		(players-unit-type-count target-player archer-line > 8))
	(nand	(goal POSITION POCKET)
		(game-time < 1600))
	(unit-type-count-total skirmisher-line < 16)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(goal gl-strategy-class basic-class)
	(current-age >= castle-age)
	(food-amount > 74)
	(or	(strategic-number sn-allow-resource-spending > 0)
		(soldier-count < 6))
	(goal gl-strategy xbow-boom)
	(gold-amount < 45)
	(town-under-attack)
	(or	(goal POSITION FLANK)
		(goal MILITARY 0))
	(unit-type-count-total skirmisher-line < 16)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#else
(defrule
	(goal gl-strategy-class basic-class)
	(current-age >= castle-age)
	(game-time < 1400)
	(food-amount > 74)
	(goal MILITARY 0)
	(goal POSITION FLANK)
	(or	(strategic-number sn-allow-resource-spending > 0)
		(soldier-count < 6))
	(goal gl-strategy xbow-boom)
	(gold-amount < 45)
	(town-under-attack)
	(unit-type-count-total skirmisher-line < 6)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#end-if

(defrule
	(or	(and	(goal gl-strategy flush)
			(and	(up-compare-goal gl-current-age <= gv-feudal)
				(goal gl-feudal-trash 0)))
		(and	(unit-type-count-total archer-line < 15)
			(goal gl-strategy xbow-boom)))
	(or	(gold-amount > 244)
		(or	(food-amount < 450)
			(up-compare-goal gl-current-age >= gv-feudal-up)))
	(can-train archer-line)
=>
	(train archer-line)
)

#load-if-not-defined FEUDAL-AGE-END
#load-if-not-defined TURKISH-CIV
(defrule
	(food-amount > 65)
	(or	(and	(goal gl-feudal-archery archer-skirm)
			(current-age == feudal-age))
		(and	(goal gl-advanced-archery heavy-archers)
			(or	(players-unit-type-count focus-player skirmisher-line > 4)
				(strategic-number sn-allow-resource-spending > 0))))
	(or	(unit-type-count-total skirmisher-line < 16)
		(unit-type-count-total archer-line > 10))
	(unit-type-count-total skirmisher-line < 25)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#end-if
#else
(defrule
	(food-amount > 65)
	(goal gl-feudal-archery archer-skirm)
	(or	(unit-type-count-total skirmisher-line < 16)
		(unit-type-count-total archer-line > 10))
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#end-if

(defrule
	(goal gl-strategy xbow-boom)
	(building-type-count-total town-center > 1)
	(or	(building-type-count-total town-center > 2)
		(or	(unit-type-count-total archer-line < 15)
			(or	(goal POSITION FLANK)
				(strategic-number sn-allow-resource-spending > 0))))
	(unit-type-count-total archer-line < 34)
	(research-completed ri-crossbow)
	(current-age == castle-age)
	(can-train archer-line)
=>
	(train archer-line)
)

(defrule
	(goal gl-strategy xbow-rush)
	(up-research-status c: ri-elite-skirmisher >= research-available)
	(players-unit-type-count focus-player skirmisher-line > 2)
	(players-unit-type-count focus-player eagle-warrior-line < 6)
	(building-type-count-total town-center > 2)
	(or	(unit-type-count-total skirmisher-line < 10)
		(up-research-status c: ri-elite-skirmisher >= research-pending))
	(or	(unit-type-count-total skirmisher-line < 26)
		(strategic-number sn-allow-resource-spending > 1))
	(unit-type-count-total skirmisher-line < 40)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(goal gl-strategy xbow-boom)
	(game-time > 1600)
	(up-research-status c: ri-elite-skirmisher >= research-available)
	(players-unit-type-count focus-player eagle-warrior-line < 6)
	(building-type-count-total town-center > 2)
	(or	(unit-type-count-total skirmisher-line < 10)
		(up-research-status c: ri-elite-skirmisher >= research-pending))
	(or	(unit-type-count-total skirmisher-line < 26)
		(strategic-number sn-allow-resource-spending > 1))
	(unit-type-count-total skirmisher-line < 40)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(goal gl-advanced-archery heavy-archers)
	(or	(and	(current-age <= castle-age)
			(strategic-number sn-allow-resource-spending > 0))
		(unit-type-count-total archer-line < 20))
	(not	(research-available ri-crossbow))
	(or	(and	(unit-type-count-total archer-line < 35)
			(soldier-count < 60))
		(strategic-number sn-allow-resource-spending > 2))
	(unit-type-count-total archer-line < 60)
	(can-train archer-line)
=>
	(train archer-line)
)

#load-if-defined BYZANTINE-CIV
(defrule
	(goal gl-strategy default)
	(current-age >= castle-age)
	(building-type-count castle == 0)
	(or	(current-age-time > 150)
		(players-unit-type-count focus-player eagle-warrior-line > 2))
	(cc-players-unit-type-count 0 gold-mine > 2)
	(or	(unit-type-count-total archer-line < 13)
		(and	(building-type-count-total town-center > 2)
			(unit-type-count-total skirmisher-line > 18)))
	(unit-type-count-total archer-line < 22)
	(can-train archer-line)
=>
	(train archer-line)
)
#end-if

#load-if-not-defined SPANISH-CIV
(defrule
	(or	(and	(goal gl-advanced-archery heavy-archers)
			(current-age == imperial-age))
		(and	(goal gl-strategy xbow-rush)
			(gold-amount >= 145)))
	(or	(up-compare-goal gl-current-age >= gv-feudal-up)
		(gold-amount >= 245))
	(not	(research-available ri-arbalest))
	(unit-type-count-total archer-line < 70)
	(can-train archer-line)
=>
	(train archer-line)
)
#end-if

#load-if-not-defined TURKISH-CIV
(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(and	(or	(goal gl-advanced-archery heavy-archers)
				(players-unit-type-count focus-player hand-cannoneer > 0))
			(and	(unit-type-count-total skirmisher-line < 10)
				(strategic-number sn-allow-resource-spending > 1)))
		(goal gl-strategy skirm-boom))
	(or	(unit-type-count-total skirmisher-line < 16)
		(strategic-number sn-allow-resource-spending > 0))
	(unit-type-count-total skirmisher-line < 38)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#end-if

#load-if-defined HUN-CIV
(defrule
	(goal gl-strategy default)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age <= castle-age)
	(or	(current-age == feudal-age)
		(and	(research-completed ri-elite-skirmisher)
			(current-age-time < 180)))
	(players-military-population every-enemy > 25)
	(soldier-count < 32)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#end-if

#load-if-not-defined TINY-MAP
(defrule
	(or	(and	(or	(unit-type-count-total trade-cart >= 20)
				(gold-amount > 500))
			(gold-amount > 100))
		(or	(population >= almost-full-pop)
			(or	(unit-type-count-total trade-cart >= 35)
				(civ-selected turkish))))
=>
	(up-jump-rule 6)
)
#end-if

(defrule
	(goal gl-strategy-class basic-class)
	(strategic-number sn-allow-resource-spending > 1)
	(or	(research-completed ri-bracer)
		(strategic-number sn-allow-resource-spending > 2))
	(or	(players-unit-type-count focus-player spearman-line > 6)
		(or	(players-unit-type-count focus-player cavalry-archer-line > 4)
			(or	(players-unit-type-count focus-player archer-line > 6)
				(players-unit-type-count focus-player plumed-archer-line > 4))))
	(unit-type-count-total skirmisher-line < 23)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(goal gl-strategy-class basic-class)
	(strategic-number sn-allow-resource-spending > 1)
	(or	(research-completed ri-bracer)
		(strategic-number sn-allow-resource-spending > 2))
	(or	(players-unit-type-count focus-player chu-ko-nu-line > 6)
		(or	(players-unit-type-count focus-player longbowman-line > 5)
			(or	(players-unit-type-count focus-player janissary-line > 4)
				(players-unit-type-count focus-player mameluke-line > 4))))
	(unit-type-count-total skirmisher-line < 23)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(goal gl-strategy-class basic-class)
	(strategic-number sn-allow-resource-spending > 1)
	(or	(research-completed ri-bracer)
		(strategic-number sn-allow-resource-spending > 2))
	(or	(players-unit-type-count focus-player mangudai-line > 5)
		(or	(players-unit-type-count focus-player conquistador-line > 2)
			(or	(players-unit-type-count focus-player genoese-crossbowman > 2)
				(players-unit-type-count focus-player elephant-archer > 2))))
	(unit-type-count-total skirmisher-line < 23)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(goal gl-strategy-class basic-class)
	(strategic-number sn-allow-resource-spending > 1)
	(or	(research-completed ri-bracer)
		(strategic-number sn-allow-resource-spending > 2))
	(or	(players-unit-type-count focus-player cavalry-archer-line > 17)
		(or	(players-unit-type-count focus-player archer-line > 17)
			(players-unit-type-count focus-player plumed-archer-line > 17)))
	(unit-type-count-total skirmisher-line < 37)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(goal gl-strategy-class basic-class)
	(strategic-number sn-allow-resource-spending > 1)
	(or	(research-completed ri-bracer)
		(strategic-number sn-allow-resource-spending > 2))
	(or	(players-unit-type-count focus-player chu-ko-nu-line > 17)
		(or	(players-unit-type-count focus-player longbowman-line > 17)
			(or	(players-unit-type-count focus-player janissary-line > 17)
				(players-unit-type-count focus-player mameluke-line > 17))))
	(unit-type-count-total skirmisher-line < 37)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(goal gl-strategy-class basic-class)
	(strategic-number sn-allow-resource-spending > 1)
	(or	(research-completed ri-bracer)
		(strategic-number sn-allow-resource-spending > 2))
	(or	(players-unit-type-count focus-player mangudai-line > 17)
		(or	(players-unit-type-count focus-player conquistador-line > 17)
			(or	(players-unit-type-count focus-player genoese-crossbowman > 17)
				(players-unit-type-count focus-player elephant-archer > 15))))
	(unit-type-count-total skirmisher-line < 37)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(goal gl-strategy xbow-rush)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(nor	(research-available ri-bodkin-arrow)
		(research-available ri-crossbow))
	(or	(nand	(goal RAM 1)
			(unit-type-count-total battering-ram-line < 1))
		(unit-type-count-total archer-line < 20))
	(nand	(players-unit-type-count focus-player scorpion-line > 1)
		(unit-type-count-total mangonel-line < 1))
	(unit-type-count-total archer-line < 120)
	(can-train archer-line)
=>
	(train archer-line)
)

#load-if-defined FRANKISH-CIV
(defrule
	(food-amount > 109)
	(goal gl-strategy default)
	(goal gl-current-age gv-castle)
	(research-completed ri-chain-barding)
	(or	(unit-type-count-total knight-line < 20)
		(strategic-number sn-allow-resource-spending > 1))
	(unit-type-count-total knight-line < 50)
	(can-train knight-line)
=>
	(train knight-line)
)

(defrule
	(goal gl-strategy default)
	(goal gl-current-age gv-castle)
	(game-time < 2300)
	(research-completed ri-crossbow)
	(or	(unit-type-count-total archer-line < 23)
		(and	(strategic-number sn-allow-resource-spending > 2)
			(unit-type-count-total knight-line > 10)))
	(unit-type-count-total archer-line < 40)
	(can-train archer-line)
=>
	(train archer-line)
)

#load-if-defined TINY-MAP
(defrule
	(goal gl-strategy default)
	(current-age == castle-age)
	(research-completed ri-elite-skirmisher)
	(players-unit-type-count every-enemy eagle-warrior-line < 6)
	(players-unit-type-count every-enemy knight-line < 4)
	(or	(unit-type-count-total skirmisher-line < 13)
		(strategic-number sn-allow-resource-spending > 1))
	(unit-type-count-total skirmisher-line < 30)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#else
(defrule
	(goal gl-strategy default)
	(current-age == castle-age)
	(research-completed ri-elite-skirmisher)
	(or	(players-unit-type-count focus-player archer-line > 4)
		(or	(players-unit-type-count focus-player spearman-line > 6)
			(or	(players-unit-type-count focus-player cavalry-archer-line > 4)
				(or	(players-unit-type-count focus-player plumed-archer-line > 4)
					(players-unit-type-count focus-player genoese-crossbowman > 3)))))
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total skirmisher-line < 17)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#end-if

(defrule
	(goal gl-strategy default)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == feudal-age)
	(players-military-population every-enemy > 25)
	(soldier-count < 32)
	(can-train archer-line)
=>
	(train archer-line)
)
#end-if

#load-if-defined PERSIAN-CIV
(defrule
	(food-amount > 109)
	(goal gl-strategy default)
	(goal gl-current-age gv-castle)
	(research-completed ri-chain-barding)
	(or	(unit-type-count-total knight-line < 20)
		(strategic-number sn-allow-resource-spending > 1))
	(unit-type-count-total knight-line < 50)
	(can-train knight-line)
=>
	(train knight-line)
)

(defrule
	(goal gl-strategy default)
	(goal gl-current-age gv-castle)
	(game-time < 2300)
	(research-completed ri-crossbow)
	(or	(unit-type-count-total archer-line < 23)
		(and	(strategic-number sn-allow-resource-spending > 2)
			(unit-type-count-total knight-line > 10)))
	(unit-type-count-total archer-line < 40)
	(can-train archer-line)
=>
	(train archer-line)
)

#load-if-defined TINY-MAP
(defrule
	(goal gl-strategy default)
	(current-age == castle-age)
	(research-completed ri-elite-skirmisher)
	(players-unit-type-count every-enemy eagle-warrior-line < 6)
	(players-unit-type-count every-enemy knight-line < 4)
	(or	(unit-type-count-total skirmisher-line < 13)
		(strategic-number sn-allow-resource-spending > 1))
	(unit-type-count-total skirmisher-line < 30)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#else
(defrule
	(goal gl-strategy default)
	(current-age == castle-age)
	(research-completed ri-elite-skirmisher)
	(or	(players-unit-type-count focus-player archer-line > 4)
		(or	(players-unit-type-count focus-player spearman-line > 6)
			(or	(players-unit-type-count focus-player cavalry-archer-line > 4)
				(or	(players-unit-type-count focus-player plumed-archer-line > 4)
					(players-unit-type-count focus-player genoese-crossbowman > 3)))))
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total skirmisher-line < 17)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#end-if

(defrule
	(goal gl-strategy default)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == feudal-age)
	(players-military-population every-enemy > 25)
	(soldier-count < 32)
	(can-train archer-line)
=>
	(train archer-line)
)
#end-if

#load-if-defined TEUTONIC-CIV
(defrule
	(food-amount > 109)
	(goal gl-strategy default)
	(up-compare-goal gl-current-age <= gv-castle)
	(current-age == castle-age)
	(research-completed ri-chain-barding)
	(or	(unit-type-count-total knight-line < 20)
		(strategic-number sn-allow-resource-spending > 1))
	(unit-type-count-total knight-line < 50)
	(can-train knight-line)
=>
	(train knight-line)
)
(defrule
	(goal gl-strategy default)
	(goal gl-current-age gv-castle)
	(game-time < 2300)
	(research-completed ri-crossbow)
	(or	(unit-type-count-total archer-line < 23)
		(and	(strategic-number sn-allow-resource-spending > 2)
			(unit-type-count-total knight-line > 10)))
	(unit-type-count-total archer-line < 40)
	(can-train archer-line)
=>
	(train archer-line)
)

#load-if-defined TINY-MAP
(defrule
	(goal gl-strategy default)
	(current-age == castle-age)
	(research-completed ri-elite-skirmisher)
	(players-unit-type-count every-enemy eagle-warrior-line < 6)
	(players-unit-type-count every-enemy knight-line < 4)
	(or	(unit-type-count-total skirmisher-line < 13)
		(strategic-number sn-allow-resource-spending > 1))
	(unit-type-count-total skirmisher-line < 30)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#else
(defrule
	(goal gl-strategy default)
	(current-age == castle-age)
	(research-completed ri-elite-skirmisher)
	(or	(players-unit-type-count focus-player archer-line > 4)
		(or	(players-unit-type-count focus-player spearman-line > 6)
			(or	(players-unit-type-count focus-player cavalry-archer-line > 4)
				(or	(players-unit-type-count focus-player plumed-archer-line > 4)
					(players-unit-type-count focus-player genoese-crossbowman > 3)))))
	(strategic-number sn-allow-resource-spending > 0)
	(unit-type-count-total skirmisher-line < 17)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#end-if

(defrule
	(goal gl-strategy default)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == feudal-age)
	(players-military-population every-enemy > 25)
	(soldier-count < 32)
	(can-train archer-line)
=>
	(train archer-line)
)
#end-if

#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
(defrule
	(or	(goal CASTLE 8)
		(goal gl-advanced-archery archer-to-gun-transfer))
	(nor	(research-completed ri-chemistry)
		(civ-selected spanish))
	(or	(unit-type-count-total archer-line < 25)
		(and	(up-compare-goal gl-current-age >= gv-castle-up)
			(unit-type-count-total archer-line < 45)))
	(can-train archer-line)
=>
	(train archer-line)
)

#load-if-not-defined HUN-CIV
#load-if-not-defined SPANISH-CIV
(defrule
	(goal gl-strategy knight-archer)
	(or	(unit-type-count-total archer-line < 20)
		(and	(unit-type-count-total archer-line < 45)
			(up-compare-goal gl-my-villager-count-total > 80)))
	(unit-type-count-total archer-line < 45)
	(can-train archer-line)
=>
	(train archer-line)
)
#end-if
#end-if

#load-if-defined HUN-CIV
(defrule
	(up-compare-goal gl-strategy != skirm-boom)
	(goal gl-strategy-class basic-class)
	(nand	(or	(goal gl-strategy knight-archer)
			(goal gl-strategy CA-boom))
		(and	(unit-type-count-total cavalry-archer-line > 14)
			(building-type-count-total town-center < 2)))
	(or	(unit-type-count-total cavalry-archer-line < 35)
		(building-type-count-total town-center > 2))
	(unit-type-count-total cavalry-archer-line < 45)
	(can-train cavalry-archer-line)
=>
	(train cavalry-archer-line)
)

(defrule
	(nand	(population > 185)
		(unit-type-count-total battering-ram-line < 1))
	(research-completed ri-bracer)
	(research-completed ri-chemistry)
	(research-completed ri-heavy-cavalry-archer)
	(or	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
		(or	(warboat-count > 25)
			(population < 160)))
	(unit-type-count-total cavalry-archer-line < 120)
	(can-train cavalry-archer-line)
=>
	(train cavalry-archer-line)
)

(defrule
	(goal gl-strategy-class basic-class)
	(or	(goal gl-advanced-cavalry knight-CA)
		(up-compare-goal gl-current-age >= gv-castle-up))
	(or	(unit-type-count-total cavalry-archer-line < 35)
		(and	(building-type-count-total town-center > 2)
			(unit-type-count-total cavalry-archer-line < 45)))
	(can-train cavalry-archer-line)
=>
	(train cavalry-archer-line)
)

(defrule
	(goal gl-strategy CA-boom)
	(or	(unit-type-count-total cavalry-archer-line < 15)
		(or	(and	(unit-type-count-total cavalry-archer-line < 45)
				(building-type-count-total town-center > 1))
			(and	(unit-type-count-total cavalry-archer-line < 60)
				(up-compare-goal gl-current-age >= gv-castle-up))))
	(can-train cavalry-archer-line)
=>
	(train cavalry-archer-line)
)

(defrule
	(goal gl-strategy CA-boom)
	(unit-type-count-total monk < 7)
	(can-train monk)
=>
	(train monk)
	(set-strategic-number sn-monk-trained 1)
)
#end-if

#load-if-defined SPANISH-CIV
(defrule
	(goal gl-strategy knight-archer)
	(or	(unit-type-count-total skirmisher-line < 13)
		(building-type-count-total town-center > 1))
	(or	(unit-type-count-total skirmisher-line < 25)
		(building-type-count-total town-center > 2))
	(unit-type-count-total skirmisher-line < 45)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#end-if

#load-if-defined MAGYAR-CIV
(defrule
	(goal gl-advanced-archery CAs)
	(or	(unit-type-count-total cavalry-archer-line < 12)
		(or	(and	(unit-type-count-total cavalry-archer-line < 20)
				(building-type-count-total town-center > 1))
			(up-compare-goal gl-current-age >= gv-castle-up)))
	(unit-type-count-total cavalry-archer-line < 40)
	(can-train cavalry-archer-line)
=>
	(train cavalry-archer-line)
)
#end-if

#load-if-defined MONGOL-CIV
(defrule
	(goal gl-advanced-archery CAs)
	(or	(unit-type-count-total cavalry-archer-line < 25)
		(or	(and	(unit-type-count-total cavalry-archer-line < 45)
				(building-type-count-total town-center > 1))
			(up-compare-goal gl-current-age >= gv-castle-up)))
	(unit-type-count-total cavalry-archer-line < 60)
	(can-train cavalry-archer-line)
=>
	(train cavalry-archer-line)
)
#end-if

#load-if-not-defined INDIAN-CIV
(defrule
	(goal gl-strategy-class basic-class)
	(up-compare-goal gl-current-age <= gv-castle)
	(current-age-time < 1200)
	(or	(unit-type-count-total knight-line < 3)
		(or	(players-unit-type-count focus-player eagle-warrior-line > 4)
			(or	(players-unit-type-count focus-player skirmisher-line > 9)
				(and	(goal MILITARY 1)
					(players-current-age every-enemy <= feudal-age)))))
	(players-unit-type-count focus-player monk < 4)
	(unit-type-count-total knight-line < 7)
	(can-train knight-line)
=>
	(train knight-line)
)

(defrule
	(goal gl-strategy knight-archer)
	(nand	(or	(players-unit-type-count focus-player monk > 5)
			(players-unit-type-count focus-player missionary > 5))
		(unit-type-count-total scout-cavalry-line < 3))
	(food-amount > 109)
	(or	(unit-type-count-total knight-line < 12)
		(strategic-number sn-allow-resource-spending > 1))
	(unit-type-count-total knight-line < 35)
	(can-train knight-line)
=>
	(train knight-line)
)

(defrule
	(or	(and	(or	(goal gl-strategy heavy-krush)
				(and	(goal gl-strategy CA-rush)
					(and	(food-amount > 109)
						(research-completed ri-bloodlines))))
			(unit-type-count-total knight-line < 4))
		(and	(up-research-status c: ri-chain-barding >= research-pending)
			(goal gl-strategy heavy-krush)))
	(unit-type-count-total knight-line < 100)
	(can-train knight-line)
=>
	(train knight-line)
)
#else
(defrule
	(goal gl-strategy camel-archer)
	(nand	(or	(players-unit-type-count focus-player monk > 5)
			(players-unit-type-count focus-player missionary > 5))
		(unit-type-count-total scout-cavalry-line < 3))
	(food-amount > 109)
	(or	(unit-type-count-total camel-line < 12)
		(strategic-number sn-allow-resource-spending > 1))
	(unit-type-count-total camel-line < 35)
	(can-train camel-line)
=>
	(train camel-line)
)
#end-if

#load-if-defined PERSIAN-CIV
(defrule
	(food-amount > 129)
	(nand	(unit-type-count-total trade-cart > 20)
		(gold-amount > 200))
	(goal gl-advanced-cavalry knight-LC)
	(or	(unit-type-count-total scout-cavalry-line < 10)
		(strategic-number sn-allow-resource-spending > 1))
	(unit-type-count-total scout-cavalry-line < 18)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)
#end-if

(defrule
	(goal gl-advanced-cavalry LC)
	(food-amount > 129)
	(nand	(unit-type-count-total scout-cavalry-line > 8)
		(not	(research-completed ri-light-cavalry)))
	(or	(unit-type-count-total scout-cavalry-line < 17)
		(and	(unit-type-count-total scout-cavalry-line < 30)
			(research-completed ri-hussar)))
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)

(defrule
	(current-age == imperial-age)
	(current-age-time > 300)
	(gold-amount < 50)
	(food-amount > 129)
	(strategic-number sn-allow-resource-spending > 2)
	(unit-type-count-total scout-cavalry-line < late-game-scout-amount)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)

(defrule
	(current-age == imperial-age)
	(current-age-time > 300)
	(gold-amount < 100)
	(food-amount > 129)
	(strategic-number sn-allow-resource-spending > 2)
	(unit-type-count-total scout-cavalry-line < upgraded-scout-amount)
	(research-completed ri-chain-barding)
	(research-completed ri-iron-casting)
	(nor	(research-available ri-light-cavalry)
		(research-available ri-hussar))
	(nor	(research-available ri-blast-furnace)
		(research-available ri-plate-barding))
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)
#end-if
#end-if

(defrule
	(or	(and	(goal gl-strategy xbow-rush)
			(players-unit-type-count any-enemy huskarl-line > 0))
		(or	(unit-type-count-total eagle-warrior-line > 80)
			(strategic-number sn-monk-trained == 0)))
	(unit-type-count-total monk < 8)
	(can-train-with-escrow monk)
=>
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(train monk)
	(set-strategic-number sn-monk-trained 1)
)

(defrule
	(up-compare-goal gl-nothing-style-map != YES)
	(or	(up-compare-goal gl-current-age <= gv-castle)
		(players-unit-type-count focus-player paladin > 4))
	(or	(goal gl-eagles 0)
		(players-unit-type-count any-enemy knight-line > 0))
	(nor	(players-civ every-enemy aztec)
		(players-civ every-enemy mayan))
	(players-military-population any-enemy > 4)
	(players-current-age any-enemy >= castle-age)
	(unit-type-count-total monk < 6)
	(can-train monk)
=>
	(train monk)
	(set-strategic-number sn-monk-trained 1)
)

#load-if-defined SARACEN-CIV
(defrule
	(up-compare-const gv-aofe-game == 1)
	(goal gl-strategy-class basic-class)
	(research-completed ri-madrasah)
	(strategic-number sn-allow-resource-spending > 2)
	(or	(unit-type-count-total monk-set < 9)
		(and	(unit-type-count-total trade-cart > 20)
			(strategic-number sn-allow-resource-spending > 5)))
	(unit-type-count-total monk-set < 12)
	(can-train monk)
=>
	(train monk)
)
#end-if

#load-if-defined SLAVIC-CIV
(defrule
	(up-compare-const gv-aofe-game == 1)
	(goal gl-strategy-class basic-class)
	(research-completed ri-orthodoxy)
	(strategic-number sn-allow-resource-spending > 2)
	(or	(unit-type-count-total monk-set < 8)
		(and	(unit-type-count-total trade-cart > 20)
			(strategic-number sn-allow-resource-spending > 5)))
	(unit-type-count-total monk-set < 12)
	(can-train monk)
=>
	(train monk)
)
#end-if

#load-if-defined SPANISH-CIV
(defrule
	(goal gl-strategy-class basic-class)
	(strategic-number sn-allow-resource-spending > 2)
	(unit-type-count-total missionary < 8)
	(can-train missionary)
=>
	(train missionary)
)
#end-if

#load-if-defined TURKISH-CIV
(defrule
	(goal gl-strategy turkish-fast-imp)
	(current-age == castle-age)
	(research-completed ri-sanctity)
	(nor	(players-civ every-enemy aztec)
		(players-civ every-enemy mayan))
	(players-military-population any-enemy > 4)
	(players-current-age any-enemy == castle-age)
	(unit-type-count-total monk < 6)
	(can-train monk)
=>
	(train monk)
	(set-strategic-number sn-monk-trained 1)
)
#else
#load-if-not-defined TINY-MAP
(defrule
	(or	(gold-amount < 50)
		(and	(food-amount > 500)
			(wood-amount > 500)))
	(gold-amount < 350)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(food-amount > 75)
	(current-age-time > 1200)
	(or	(gold-amount < 50)
		(unit-type-count-total skirmisher-line < 30))
	(unit-type-count-total skirmisher-line < 70)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(or	(gold-amount < 50)
		(and	(food-amount > 500)
			(wood-amount > 500)))
	(gold-amount < 350)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(food-amount > 75)
	(current-age-time > 1200)
	(or	(gold-amount < 50)
		(unit-type-count-total spearman-line < 30))
	(unit-type-count-total skirmisher-line < 50)
	(can-train spearman-line)
=>
	(train spearman-line)
)
#else
(defrule
	(or	(gold-amount < 50)
		(and	(food-amount > 500)
			(wood-amount > 500)))
	(strategic-number sn-allow-resource-spending > 2)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(food-amount > 75)
	(current-age-time > 1200)
	(or	(gold-amount < 50)
		(unit-type-count-total skirmisher-line < 30))
	(unit-type-count-total skirmisher-line < 70)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(or	(gold-amount < 50)
		(and	(food-amount > 500)
			(wood-amount > 500)))
	(strategic-number sn-allow-resource-spending > 2)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(food-amount > 75)
	(current-age-time > 1200)
	(or	(gold-amount < 50)
		(unit-type-count-total spearman-line < 30))
	(unit-type-count-total skirmisher-line < 50)
	(can-train spearman-line)
=>
	(train spearman-line)
)
#end-if
#end-if

#load-if-not-defined AZTEC-CIV
#load-if-not-defined MAYAN-CIV
#load-if-not-defined INCAN-CIV
(defrule
	(not	(goal gl-strategy CA-rush))
	(or	(gold-amount < 50)
		(and	(food-amount > 500)
			(wood-amount > 400)))
	(strategic-number sn-allow-resource-spending > 2)
	(gold-amount < 350)
	(or	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
		(warboat-count > 25))
	(unit-type-count-total scout-cavalry-line < late-game-scout-amount)
	(current-age-time > 1200)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)

(defrule
	(or	(dropsite-min-distance wood > 12)
		(dropsite-min-distance wood == -1))
	(game-time > 3600)
	(or	(and	(food-amount > 500)
			(wood-amount < 400))
		(strategic-number sn-minimum-water-body-size-for-dock == 2002))
	(unit-type-count-total scout-cavalry-line < 150)
	(nand	(unit-type-count-total scout-cavalry-line > 12)
		(research-available ri-light-cavalry))
	(strategic-number sn-allow-resource-spending > 2)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)
#end-if
#end-if

#load-if-not-defined SARACEN-CIV
#load-if-not-defined TURKISH-CIV
(defrule
	(or	(goal CASTLE 1)
		(and	(goal CASTLE 9)
			(research-completed ri-elite-skirmisher)))
	(food-amount > 65)
	(unit-type-count-total spearman-line < 25)
	(research-completed ri-pikeman)
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(goal CASTLE 1)
	(food-amount > 65)
	(nand	(research-available ri-halberdier)
		(unit-type-count-total spearman-line > 15))
	(or	(and	(unit-type-count-total spearman-line < 40)
			(research-completed ri-pikeman))
		(unit-type-count-total spearman-line < 10))
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(goal CASTLE 9)
	(food-amount > 65)
	(nand	(research-available ri-halberdier)
		(unit-type-count-total spearman-line > 15))
	(or	(and	(research-completed ri-pikeman)
			(research-completed ri-elite-skirmisher))
		(unit-type-count-total spearman-line < 10))
	(unit-type-count-total spearman-line < 40)
	(nand	(unit-type-count-total spearman-line > 25)
		(strategic-number sn-allow-resource-spending < 3))
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(or	(goal CASTLE 1)
		(goal CASTLE 9))
	(food-amount > 65)
	(or	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
		(or	(warboat-count > 25)
			(and	(unit-type-count-total spearman-line < 35)
				(population < 185))))
	(research-completed ri-halberdier)
	(unit-type-count-total spearman-line < 65)
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(or	(goal CASTLE 5)
		(goal CASTLE 9))
	(food-amount > 65)
	(nand	(unit-type-count-total spearman-line > 15)
		(research-available ri-halberdier))
	(unit-type-count-total skirmisher-line < 43)
	(research-completed ri-elite-skirmisher)
	(nand	(unit-type-count-total skirmisher-line > 27)
		(strategic-number sn-allow-resource-spending < 3))
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)

(defrule
	(or	(goal CASTLE 5)
		(goal CASTLE 9))
	(food-amount > 65)
	(nand	(unit-type-count-total spearman-line > 15)
		(or	(research-available ri-halberdier)
			(research-available ri-pikeman)))
	(or	(research-completed ri-bracer)
		(unit-type-count-total skirmisher-line < 14))
	(unit-type-count-total skirmisher-line < 65)
	(can-train skirmisher-line)
=>
	(train skirmisher-line)
)
#end-if
#end-if
#end-if

(defrule
	(soldier-count > 30)
	(or	(strategic-number sn-allow-resource-spending > 3)
		(and	(players-building-type-count any-enemy castle > 1)
			(players-current-age focus-player <= castle-age)))
	(or	(players-building-type-count any-enemy castle > 0)
		(soldier-count > 45))
	(unit-type-count-total trebuchet-set < 1)
	(or	(game-time < 3000)
		(gold-amount > 400))
	(can-train trebuchet)
=>
	(train trebuchet)
)
#end-if

#end-if; DM

; ============== FIRST LUMBER CAMP DISTANCE & PLACEMENT BACK UP

(defrule
	(resource-found wood)
	(game-time > 600)
	(strategic-number sn-camp-max-distance != 20)
=>
	(up-jump-rule 11)
)

(defrule
	(strategic-number sn-camp-max-distance == 20)
	(resource-found wood)
	(building-type-count-total stone-wall-line < 1)
	(building-type-count-total palisade-wall < 1)
	(building-type-count-total watch-tower == 0)
	(building-type-count-total bombard-tower == 0)
	(building-type-count-total outpost == 0)
	(building-type-count-total castle == 0)
	(building-type-count-total barracks == 0)
	(building-type-count-total archery-range == 0)
	(building-type-count-total stable == 0)
	(building-type-count-total monastery == 0)
	(building-type-count-total town-center == 1)
	(game-time < 8)
=>
	(set-strategic-number sn-camp-max-distance 13)
	(disable-self)
)

(defrule
	(strategic-number sn-camp-max-distance == 20)
	(resource-found wood)
	(building-type-count-total stone-wall-line < 1)
	(building-type-count-total palisade-wall < 1)
	(building-type-count-total watch-tower == 0)
	(building-type-count-total bombard-tower == 0)
	(building-type-count-total outpost == 0)
	(building-type-count-total castle == 0)
	(building-type-count-total barracks == 0)
	(building-type-count-total archery-range == 0)
	(building-type-count-total stable == 0)
	(building-type-count-total monastery == 0)
	(building-type-count-total town-center == 1)
	(game-time < 10)
=>
	(set-strategic-number sn-camp-max-distance 14)
	(disable-self)
)

(defrule
	(strategic-number sn-camp-max-distance == 20)
	(resource-found wood)
	(building-type-count-total stone-wall-line < 1)
	(building-type-count-total palisade-wall < 1)
	(building-type-count-total watch-tower == 0)
	(building-type-count-total bombard-tower == 0)
	(building-type-count-total outpost == 0)
	(building-type-count-total castle == 0)
	(building-type-count-total barracks == 0)
	(building-type-count-total archery-range == 0)
	(building-type-count-total stable == 0)
	(building-type-count-total monastery == 0)
	(building-type-count-total town-center == 1)
	(game-time < 12)
=>
	(set-strategic-number sn-camp-max-distance 15)
	(disable-self)
)

(defrule
	(strategic-number sn-camp-max-distance == 20)
	(resource-found wood)
	(building-type-count-total stone-wall-line < 1)
	(building-type-count-total palisade-wall < 1)
	(building-type-count-total watch-tower == 0)
	(building-type-count-total bombard-tower == 0)
	(building-type-count-total outpost == 0)
	(building-type-count-total castle == 0)
	(building-type-count-total barracks == 0)
	(building-type-count-total archery-range == 0)
	(building-type-count-total stable == 0)
	(building-type-count-total monastery == 0)
	(building-type-count-total town-center == 1)
	(game-time < 13)
=>
	(set-strategic-number sn-camp-max-distance 17)
	(disable-self)
)

(defrule
	(strategic-number sn-camp-max-distance == 20)
	(resource-found wood)
	(building-type-count-total stone-wall-line < 1)
	(building-type-count-total palisade-wall < 1)
	(building-type-count-total watch-tower == 0)
	(building-type-count-total bombard-tower == 0)
	(building-type-count-total outpost == 0)
	(building-type-count-total castle == 0)
	(building-type-count-total barracks == 0)
	(building-type-count-total archery-range == 0)
	(building-type-count-total stable == 0)
	(building-type-count-total monastery == 0)
	(building-type-count-total town-center == 1)
	(game-time < 15)
=>
	(set-strategic-number sn-camp-max-distance 18)
	(disable-self)
)

(defrule
	(strategic-number sn-camp-max-distance == 20)
	(resource-found wood)
	(game-time < 18)
=>
	(set-strategic-number sn-camp-max-distance 21)
	(disable-self)
)

(defrule
	(strategic-number sn-camp-max-distance == 20)
	(resource-found wood)
	(game-time < 80)
=>
	(set-strategic-number sn-camp-max-distance 24)
	(disable-self)
)

(defrule
	(strategic-number sn-camp-max-distance == 20)
	(resource-found wood)
	(game-time < 100)
=>
	(set-strategic-number sn-camp-max-distance 30)
	(disable-self)
)

(defrule
	(strategic-number sn-camp-max-distance == 20)
	(resource-found wood)
	(game-time < 120)
=>
	(set-strategic-number sn-camp-max-distance 33)
	(disable-self)
)

(defrule
	(strategic-number sn-camp-max-distance == 20)
	(resource-found wood)
	(game-time < 200)
=>
	(set-strategic-number sn-camp-max-distance 37)
	(disable-self)
)

(defrule
	(strategic-number sn-camp-max-distance == 20)
	(resource-found wood)
	(game-time >= 200)
=>
	(set-strategic-number sn-camp-max-distance 45)
	(disable-self)
)

(defrule
	(building-type-count-total lumber-camp > 0)
	(building-type-count-total town-center > 0)
	(strategic-number sn-camp-max-distance == 255)
	(strategic-number sn-maximum-town-size == 255)
=>
	(set-strategic-number sn-camp-max-distance 24)
	(set-strategic-number sn-maximum-town-size 9)
)

(defrule
	(timer-triggered 10)
	(goal gl-current-age gv-dark)
	(or	(and	(building-type-count-total lumber-camp == 0)
			(or	(strategic-number sn-lumber-camp-security == 1)
				(strategic-number sn-maximum-wood-drop-distance == 5)))
		(and	(building-type-count-total town-center == 0)
			(wood-amount >= 275)))
	(strategic-number sn-camp-max-distance < 255)
=>
	(set-strategic-number sn-camp-max-distance 255)
	(set-strategic-number sn-maximum-town-size 255)
	(chat-to-player my-player-number "Placement failure - new attempt"); Sometimes this leads to a lumber camp in ass but that is still better than no lumber camp at all
	(set-strategic-number sn-lumber-camp-security 0)
)

(defrule
	(game-time > 2400)
	(dropsite-min-distance wood == -1)
	(cc-players-unit-type-count 0 tree < 150)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
=>
	(set-strategic-number sn-minimum-water-body-size-for-dock 2002)
	(set-strategic-number sn-allow-resource-spending 6)
	(chat-to-player every-ally "24Wood panic!")
	(chat-to-player my-player-number "24Wood panic!")
	(disable-self)
)

(defrule
	(or	(strategic-number sn-stone-gatherer-percentage > 0)
		(game-time > 1770))
	(strategic-number sn-stone-dropsite-distance > 3)
=>
	(set-strategic-number sn-stone-dropsite-distance 3)
)

; ============== THREAT LEVEL

(defrule
	(up-compare-goal gl-strategy != heavy-ranged-flush)
	(soldier-count > 12)
	(game-time < 1260)
	(players-unit-type-count every-enemy scout-cavalry-line < 2)
	(players-current-age every-enemy <= feudal-age)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-threat-level -1)
	(disable-self)
)

(defrule
	(up-compare-goal gl-strategy != heavy-ranged-flush)
	(game-time > 1260)
	(players-current-age every-enemy <= feudal-age)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-threat-level 0)
	(disable-self)
)

#load-if-defined TINY-MAP
(defrule
	(goal gl-feudal-trash YES)
	(players-current-age every-enemy == feudal-age)
	(players-unit-type-count every-enemy archer-line > 4)
	(players-unit-type-count every-enemy militiaman-line < 3)
	(players-unit-type-count every-enemy skirmisher-line < 4)
	(players-unit-type-count every-enemy scout-cavalry-line < 2)
	(players-building-type-count every-enemy stable == 0)
=>
	(set-strategic-number sn-threat-level -2)
	(disable-self)
)

(defrule
	(goal gl-strategy default)
	(current-age == feudal-age)
	(players-current-age every-enemy == feudal-age)
	(strategic-number sn-threat-level == -2)
	(or	(players-unit-type-count every-enemy militiaman-line > 2)
		(or	(players-unit-type-count every-enemy scout-cavalry-line > 1)
			(players-building-type-count every-enemy stable > 0)))
=>
	(set-strategic-number sn-threat-level 0)
	(disable-self)
)
#end-if

(defrule
	(up-compare-goal gl-strategy != heavy-ranged-flush)
	(players-current-age any-enemy > feudal-age)
	(current-age == feudal-age)
	(players-current-age-time focus-player > 20)
=>
	(set-strategic-number sn-threat-level 1)
	(disable-self)
)

(defrule
	(up-compare-goal gl-strategy != heavy-ranged-flush)
	(players-current-age any-enemy > feudal-age)
	(current-age == feudal-age)
	(or	(players-unit-type-count any-enemy knight-line > 2)
		(and	(game-time > 1200)
			(players-current-age-time focus-player > 15)))
=>
	(set-strategic-number sn-threat-level 2)
	(disable-self)
)

(defrule
	(up-compare-goal gl-strategy != heavy-ranged-flush)
	(players-current-age every-enemy <= feudal-age)
	(current-age == castle-age)
=>
	(set-strategic-number sn-threat-level -2)
	(disable-self)
)

(defrule
	(up-compare-goal gl-strategy != heavy-ranged-flush)
	(up-compare-goal gl-strategy != scorpion-rush)
	(players-current-age focus-player <= feudal-age)
	(players-current-age target-player <= feudal-age)
	(or	(unit-type-count knight-line > 3)
		(or	(up-research-status c: ri-bodkin-arrow >= research-pending)
			(or	(up-research-status c: ri-long-swordsman >= research-pending)
				(or	(unit-type-count my-unique-unit-line > 3)
					(up-research-status c: ri-elite-skirmisher >= research-pending)))))
	(current-age == castle-age)
	(strategic-number sn-threat-level > -2)
=>
	(set-strategic-number sn-threat-level -2)
)

(defrule
	(players-current-age-time focus-player > 30)
	(or	(players-current-age target-player == castle-age)
		(players-current-age focus-player == castle-age))
	(players-current-age every-enemy < imperial-age)
	(current-age == castle-age)
	(or	(goal gl-strategy-class basic-class)
		(or	(goal gl-strategy xbow-rush)
			(or	(goal gl-strategy CA-rush)
				(goal gl-strategy fi-archer-flush))))
	(unit-type-count-total knight-line < 10)
=>
	(set-strategic-number sn-threat-level 0)
	(disable-self)
)

(defrule
	(players-current-age target-player < castle-age)
	(players-current-age focus-player < castle-age)
	(current-age == castle-age)
	(or	(unit-type-count knight-line > 3)
		(or	(up-research-status c: ri-bodkin-arrow >= research-pending)
			(or	(research-completed ri-long-swordsman)
				(or	(unit-type-count my-unique-unit-line > 4)
					(research-completed ri-elite-skirmisher)))))
	(military-population > 20)
	(strategic-number sn-threat-level > -3)
=>
	(set-strategic-number sn-threat-level -3)
)

#load-if-defined TINY-MAP
(defrule
	(players-current-age any-enemy >= castle-age)
	(current-age == castle-age)
	(or	(goal gl-strategy xbow-rush)
		(goal gl-strategy fi-archer-flush))
	(or	(and	(players-unit-type-count any-enemy knight-line > 3)
			(unit-type-count-total monk < 5))
		(or	(soldier-count < 30)
			(and	(goal gl-strategy fi-archer-flush)
				(game-time > 1560))))
	(strategic-number sn-threat-level < 0)
=>
	(set-strategic-number sn-threat-level 0)
)
#else
(defrule
	(up-compare-goal gl-assisting-ally != YES)
	(players-current-age any-enemy >= castle-age)
	(current-age == castle-age)
	(goal gl-strategy xbow-rush)
	(or	(and	(or	(players-unit-type-count target-player knight-line > 3)
				(players-unit-type-count focus-player knight-line > 3))
			(unit-type-count-total monk < 5))
		(soldier-count < 30))
	(strategic-number sn-threat-level < 0)
=>
	(set-strategic-number sn-threat-level 0)
)
#end-if

(defrule
	(players-current-age every-enemy < imperial-age)
	(current-age == castle-age)
	(goal gl-strategy xbow-rush)
	(soldier-count >= 30)
	(or	(players-unit-type-count any-enemy elite-skirmisher < 5); Rule below will overwrite this if fighting with a player who has skirms
		(or	(unit-type-count mangonel-line > 0)
			(or	(unit-type-count scorpion-line > 1)
				(unit-type-count eagle-warrior-line > 3))))
	(or	(players-unit-type-count every-enemy knight-line < 4)
		(unit-type-count-total monk > 4))
	(strategic-number sn-threat-level > -1)
=>
	(set-strategic-number sn-threat-level -1)
)

(defrule
	(up-compare-goal gl-assisting-ally != YES)
	(players-current-age-time focus-player > 15)
	(players-current-age any-enemy >= castle-age)
	(current-age == castle-age)
	(or	(goal gl-strategy xbow-rush)
		(goal gl-strategy fi-archer-flush))
	(or	(players-unit-type-count focus-player elite-skirmisher > 4)
		(players-unit-type-count target-player elite-skirmisher > 4))
	(unit-type-count mangonel-line < 1)
	(unit-type-count scorpion-line < 2)
	(unit-type-count eagle-warrior-line < 4)
	(strategic-number sn-threat-level < 1)
=>
	(set-strategic-number sn-threat-level 1)
)

(defrule
	(players-current-age any-enemy == castle-age)
	(players-current-age every-enemy < imperial-age)
	(strategic-number sn-threat-level > -1)
	(players-unit-type-count target-player knight-line < 3)
	(players-unit-type-count focus-player knight-line < 3)
	(goal gl-strategy-class basic-class)
	(or	(unit-type-count-total knight-line > 7)
		(or	(unit-type-count-total huskarl-line > 8)
			(or	(unit-type-count-total conquistador-line > 2)
				(or	(unit-type-count-total janissary-line > 5)
					(unit-type-count-total war-wagon-line > 4)))))
=>
	(set-strategic-number sn-threat-level -1)
)

#load-if-defined HUN-CIV
(defrule
	(players-current-age any-enemy == castle-age)
	(players-current-age every-enemy < imperial-age)
	(strategic-number sn-threat-level > -1)
	(players-unit-type-count every-enemy knight-line < 3)
	(or	(goal gl-strategy-class basic-class)
		(goal gl-strategy CA-rush))
	(unit-type-count-total cavalry-archer-line > 18)
	(research-completed ri-bodkin-arrow)
=>
	(set-strategic-number sn-threat-level -1)
)

(defrule
	(players-current-age any-enemy == castle-age)
	(players-current-age every-enemy < imperial-age)
	(strategic-number sn-threat-level == -1)
	(players-unit-type-count any-enemy knight-line > 2)
	(unit-type-count-total knight-line < 5)
	(unit-type-count-total monk < 5)
	(or	(goal gl-strategy-class basic-class)
		(goal gl-strategy CA-rush))
	(research-completed ri-bodkin-arrow)
=>
	(set-strategic-number sn-threat-level 0)
)

#load-if-defined TINY-MAP
(defrule
	(goal gl-strategy-class basic-class); This rule includes water, maybe shouldn't?
	(goal MILITARY 0)
	(game-time < 2400)
	(current-age == castle-age)
	(players-current-age every-enemy == castle-age)
	(players-civilian-population any-enemy > 70)
	(or	(civilian-population < 60)
		(players-civilian-population any-enemy > 80))
	(or	(civilian-population < 70)
		(players-civilian-population any-enemy > 90))
	(civilian-population < 80)
=>
	(set-strategic-number sn-threat-level -3)
	(chat-to-player my-player-number "24It seems that we are losing the boom war")
	(disable-self)
)

(defrule
	(players-current-age every-enemy == castle-age)
	(current-age == castle-age)
	(goal gl-strategy-class basic-class)
	(soldier-count > 55)
	(up-compare-goal gl-my-villager-count-total > 85)
	(game-time < 2300)
	(or	(players-civ every-enemy aztec)
		(or	(players-civ every-enemy byzantine)
			(or	(players-civ every-enemy gothic)
				(players-civ every-enemy mayan))))
=>
	(set-strategic-number sn-threat-level -3)
	(chat-to-player my-player-number "1Go aggressive")
	(disable-self)
)

(defrule
	(players-current-age every-enemy == castle-age)
	(current-age == castle-age)
	(goal gl-strategy-class basic-class)
	(soldier-count > 55)
	(up-compare-goal gl-my-villager-count-total > 85)
	(game-time < 2300)
	(or	(players-civ every-enemy briton)
		(or	(players-civ every-enemy japanese)
			(or	(players-civ every-enemy korean)
				(players-civ every-enemy viking))))
=>
	(set-strategic-number sn-threat-level -3)
	(chat-to-player my-player-number "1Go aggressive")
	(disable-self)
)

(defrule
	(players-current-age every-enemy == castle-age)
	(current-age == castle-age)
	(goal MILITARY 0)
	(goal gl-strategy CA-rush)
	(goal gl-enemy-strategy EAGLERUSH)
	(game-time > 2040)
=>
	(set-strategic-number sn-threat-level -3)
	(chat-to-player my-player-number "1Go aggressive")
	(disable-self)
)

(defrule
	(players-current-age every-enemy == castle-age)
	(current-age == castle-age)
	(goal gl-strategy-class basic-class)
	(game-time > 2580)
	(strategic-number sn-threat-level == -3)
=>
	(set-strategic-number sn-threat-level -1)
	(disable-self)
)
#end-if
#end-if

#load-if-not-defined HUN-CIV
#load-if-defined TINY-MAP
(defrule
	(goal gl-strategy-class basic-class)
	(goal MILITARY 0)
	(game-time < 2400)
	(current-age == castle-age)
	(players-current-age every-enemy == castle-age)
	(players-civilian-population any-enemy > 70)
	(or	(civilian-population < 60)
		(players-civilian-population any-enemy > 80))
	(or	(civilian-population < 70)
		(players-civilian-population any-enemy > 90))
	(civilian-population < 80)
=>
	(set-strategic-number sn-threat-level -2)
	(chat-to-player my-player-number "24It seems that we are losing the boom war")
	(disable-self)
)

(defrule
	(players-current-age every-enemy == castle-age)
	(current-age == castle-age)
	(or	(and	(goal gl-strategy xbow-rush)
			(goal gl-enemy-strategy EAGLERUSH))
		(or	(unit-type-count-total knight-line > 14)
			(unit-type-count-total conquistador-line > 8)))
	(players-unit-type-count every-enemy knight-line < 4)
	(players-unit-type-count every-enemy war-wagon-line < 4)
	(goal MILITARY 0)
	(game-time > 2040)
=>
	(set-strategic-number sn-threat-level -3)
	(chat-to-player my-player-number "1Go aggressive")
	(disable-self)
)

#load-if-defined GOTHIC-CIV
(defrule
	(current-age == castle-age)
	(goal gl-strategy-class basic-class)
	(game-time > 2100)
	(unit-type-count-total huskarl-line > 8)
	(players-current-age every-enemy == castle-age)
	(players-unit-type-count every-enemy militiaman-line > 2)
=>
	(set-strategic-number sn-threat-level -1)
	(disable-self)
)

(defrule
	(current-age == castle-age)
	(goal gl-strategy-class basic-class)
	(game-time > 2100)
	(unit-type-count-total huskarl-line > 8)
	(players-current-age every-enemy == castle-age)
	(strategic-number sn-threat-level == 0)
	(players-unit-type-count every-enemy knight-line < 2)
	(players-building-type-count every-enemy stable == 0)
	(players-building-type-count every-enemy archery-range > 0)
=>
	(set-strategic-number sn-threat-level -2)
	(disable-self)
)

(defrule
	(current-age == castle-age)
	(goal gl-strategy-class basic-class)
	(game-time > 2100)
	(unit-type-count-total huskarl-line > 8)
	(players-current-age every-enemy <= castle-age)
	(strategic-number sn-threat-level > -2)
	(players-unit-type-count every-enemy eagle-warrior-line > 2)
=>
	(set-strategic-number sn-threat-level -2)
	(disable-self)
)

(defrule
	(current-age == castle-age)
	(goal gl-strategy-class basic-class)
	(game-time > 2100)
	(unit-type-count-total huskarl-line > 8)
	(players-current-age every-enemy <= castle-age)
	(strategic-number sn-threat-level > -4)
	(or	(players-unit-type-count every-enemy archer-line > 2)
		(players-unit-type-count every-enemy cavalry-archer-line > 2))
	(players-unit-type-count every-enemy knight-line < 2)
	(players-unit-type-count every-enemy scout-cavalry-line < 3)
	(players-unit-type-count every-enemy militiaman-line < 3)
	(players-unit-type-count every-enemy jaguar-man-line < 3)
	(players-unit-type-count every-enemy teutonic-knight-line < 3)
=>
	(set-strategic-number sn-threat-level -4)
)

(defrule
	(current-age == castle-age)
	(goal gl-strategy-class basic-class)
	(game-time > 2100)
	(unit-type-count-total huskarl-line > 8)
	(players-current-age every-enemy <= castle-age)
	(strategic-number sn-threat-level < 0)
	(unit-type-count-total monk < 5)
	(players-unit-type-count every-enemy knight-line > 1)
	(players-unit-type-count every-enemy archer-line < 3)
	(players-unit-type-count every-enemy cavalry-archer-line < 3)
=>
	(set-strategic-number sn-threat-level 0)
)

(defrule
	(current-age == castle-age)
	(goal gl-strategy-class basic-class)
	(game-time > 2100)
	(unit-type-count-total huskarl-line > 8)
	(strategic-number sn-threat-level < 0)
	(players-unit-type-count every-enemy knight-line > 1)
	(or	(players-unit-type-count every-enemy archer-line > 2)
		(or	(players-unit-type-count every-enemy cavalry-archer-line > 2)
			(unit-type-count-total monk > 4)))
=>
	(set-strategic-number sn-threat-level 0)
)
#end-if

(defrule
	(players-current-age every-enemy == castle-age)
	(current-age == castle-age)
	(goal gl-strategy-class basic-class)
	(game-time > 2700)
	(or	(strategic-number sn-threat-level == -2)
		(strategic-number sn-threat-level == -3))
=>
	(set-strategic-number sn-threat-level -1)
	(disable-self)
)
#end-if
#end-if

(defrule
	(players-current-age every-enemy < imperial-age)
	(current-age == castle-age)
	(goal gl-strategy-class basic-class)
	(unit-type-count-total knight-line > 25)
=>
	(set-strategic-number sn-threat-level -3)
	(chat-to-player my-player-number "1Go aggressive")
	(disable-self)
)

#load-if-defined TURKISH-CIV
(defrule
	(up-compare-goal gl-strategy != turkish-fast-imp)
=>
	(up-jump-rule 3)
)

(defrule
	(players-current-age every-enemy >= castle-age)
	(current-age == imperial-age)
	(goal gl-strategy turkish-fast-imp)
	(or	(soldier-count < 35)
		(and	(players-current-age any-enemy == imperial-age)
			(soldier-count >= 35)))
	(strategic-number sn-threat-level != -3)
=>
	(set-strategic-number sn-threat-level -3)
)

(defrule
	(players-current-age every-enemy <= castle-age)
	(current-age == imperial-age)
	(goal gl-strategy turkish-fast-imp)
	(soldier-count >= 35)
	(strategic-number sn-threat-level != -4)
=>
	(set-strategic-number sn-threat-level -4)
)

(defrule
	(players-current-age any-enemy == imperial-age)
	(current-age == imperial-age)
	(goal gl-strategy turkish-fast-imp)
	(soldier-count < 35)
	(strategic-number sn-threat-level != -2)
=>
	(set-strategic-number sn-threat-level -2)
)
#end-if

(defrule
	(players-current-age every-enemy == castle-age)
	(current-age == imperial-age)
	(strategic-number sn-threat-level > -2)
	(or	(research-completed ri-bracer)
		(or	(research-completed ri-halberdier)
			(or	(research-completed ri-plate-barding)
				(or	(research-completed ri-two-handed-swordsman)
					(or	(research-completed ri-cavalier)
						(research-completed ri-heavy-cavalry-archer))))))
=>
	(set-strategic-number sn-threat-level -2)
	(disable-self)
)

(defrule
	(players-current-age every-enemy < imperial-age)
	(players-current-age any-enemy == castle-age)
	(current-age == imperial-age)
	(strategic-number sn-threat-level > -4)
	(or	(research-completed my-unique-unit-upgrade)
		(or	(and	(research-completed ri-bracer)
				(research-completed ri-chemistry))
			(or	(research-completed ri-champion)
				(research-completed ri-paladin))))
	(current-age-time > 60)
=>
	(set-strategic-number sn-threat-level -4)
	(disable-self)
)

(defrule
	(players-current-age focus-player == imperial-age)
	(strategic-number sn-threat-level < 1)
	(players-current-age-time focus-player > 150)
	(players-military-population focus-player > 25)
	(players-population focus-player > 120)
	(current-age == castle-age)
=>
	(set-strategic-number sn-threat-level 1)
)

(defrule
	(players-current-age focus-player == castle-age)
	(goal gl-strategy-class basic-class)
	(strategic-number sn-threat-level < -3)
	(players-current-age-time focus-player > 150)
	(players-military-population focus-player > 10)
	(not	(goal gl-safe-to-assist-ally YES))
	(current-age == castle-age)
=>
	(set-strategic-number sn-threat-level -2)
)

(defrule
	(players-current-age any-enemy == imperial-age)
	(goal MILITARY 1)
	(strategic-number sn-threat-level < 1)
	(players-current-age-time focus-player > 20)
	(current-age == castle-age)
=>
	(set-strategic-number sn-threat-level 1)
	(disable-self)
)

(defrule
	(players-current-age any-enemy == imperial-age)
	(not	(goal MILITARY 1))
	(players-current-age-time focus-player > 20)
	(current-age == castle-age)
=>
	(set-strategic-number sn-threat-level 2)
	(disable-self)
)

(defrule
	(or	(players-current-age every-enemy <= feudal-age)
		(and	(players-current-age every-enemy < imperial-age)
			(or	(and	(players-current-age any-enemy == castle-age)
					(current-age-time > 900))
				(or	(research-completed ri-galleon)
					(research-completed ri-fast-fire-ship)))))
	(current-age == imperial-age)
=>
	(set-strategic-number sn-threat-level -4)
	(disable-self)
)

(defrule
	(players-current-age any-enemy == imperial-age)
	(current-age == imperial-age)
	(current-age-time > 300)
	(or	(strategic-number sn-threat-level == 2)
		(and	(strategic-number sn-threat-level == 1)
			(and	(current-age-time > 1800); Rather be passive than suicidal
				(population > pop-to-full-pop-attack))))
=>
	(set-strategic-number sn-threat-level 0)
	(disable-self)
)

(defrule
	(players-current-age any-enemy == imperial-age)
	(current-age == imperial-age)
	(strategic-number sn-threat-level > 0)
	(or	(research-completed ri-bracer)
		(or	(research-completed ri-halberdier)
			(or	(research-completed ri-plate-barding)
				(or	(research-completed ri-two-handed-swordsman)
					(research-completed ri-cavalier)))))
=>
	(set-strategic-number sn-threat-level 1)
	(disable-self)
)

(defrule
	(players-current-age any-enemy == imperial-age)
	(current-age == imperial-age)
	(strategic-number sn-threat-level > 0)
	(or	(research-completed my-unique-unit-upgrade)
		(or	(research-completed ri-champion)
			(or	(research-completed ri-paladin)
				(research-completed ri-heavy-cavalry-archer))))
	(current-age-time > 60)
=>
	(set-strategic-number sn-threat-level 0)
	(disable-self)
)

#load-if-defined UP-2-PLAYER-GAME
(defrule
	(or	(and	(or	(goal gl-strategy-class basic-class)
				(goal gl-strategy gothic-boom))
			(and	(strategic-number sn-allow-resource-spending > 4)
				(strategic-number sn-threat-level > -1)))
		(and	(goal gl-strategy-class basic-class)
			(and	(strategic-number sn-threat-level < -1)
				(current-age-time < 180))))
	(players-current-age any-enemy == imperial-age)
	(current-age == imperial-age)
=>
	(set-strategic-number sn-threat-level -1)
)
#else
(defrule
	(or	(goal gl-strategy-class basic-class)
		(goal gl-strategy gothic-boom))
	(strategic-number sn-allow-resource-spending > 4)
	(strategic-number sn-threat-level > -2)
	(players-current-age any-enemy == imperial-age)
	(current-age == imperial-age)
=>
	(set-strategic-number sn-threat-level -2)
)

#load-if-defined PERSIAN-CIV
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(unit-type-count-total trade-cart > 15)
	(unit-type-count-total elite-war-elephant > 15)
	(strategic-number sn-threat-level > -4)
	(current-age == imperial-age)
=>
	(set-strategic-number sn-threat-level -4)
)
#end-if
#end-if

(defrule
	(players-current-age any-enemy == imperial-age)
	(current-age == imperial-age)
	(strategic-number sn-threat-level < -2)
=>
	(set-strategic-number sn-threat-level -2)
	(disable-self)
)

; ============= RESOURCE SPENDING LEVEL

(defrule
	(or	(current-age == feudal-age)
		(goal MILITARY 1))
	(goal gl-strategy-class basic-class)
	(or	(and	(up-compare-goal gl-current-age >= gv-feudal-up)
			(game-time > 1260))
		(or	(goal MILITARY 1)
			(and	(town-under-attack)
				(timer-triggered 9))))
	(strategic-number sn-allow-resource-spending == 0)
=>
	(set-strategic-number sn-allow-resource-spending 1)
)

(defrule
	(current-age >= castle-age); Also overwrites the high spending level of special strategies after returning to the basic strategy
	(goal gl-strategy-class basic-class)
	(strategic-number sn-allow-resource-spending >= 0)
=>
	(set-strategic-number sn-allow-resource-spending 0)
	(disable-self)
)

(defrule
	(current-age == castle-age)
	(goal gl-strategy-class basic-class)
	(up-compare-goal gl-current-age <= gv-castle)
	(goal MILITARY 0)
	(or	(and	(strategic-number sn-allow-resource-spending < 1)
			(building-type-count-total town-center > 2))
		(and	(strategic-number sn-allow-resource-spending == 2)
			(and	(not	(town-under-attack))
				(current-age-time < 1300))))
	(strategic-number sn-allow-resource-spending >= 0)
=>
	(set-strategic-number sn-allow-resource-spending 1)
)

#load-if-defined KOREAN-CIV
(defrule
	(goal gl-strategy korean-boom)
	(game-time > 1260)
	(town-under-attack)
	(timer-triggered 9)
	(strategic-number sn-allow-resource-spending == 0)
=>
	(set-strategic-number sn-allow-resource-spending 1)
)
#end-if

(defrule
	(current-age == castle-age)
	(nor	(goal gl-strategy-class basic-class)
		(or	(and	(goal gl-strategy xbow-rush)
				(research-available ri-bodkin-arrow))
			(or	(goal gl-strategy korean-boom)
				(goal gl-strategy fi-archer-flush))))
	(current-age-time > 240)
	(strategic-number sn-allow-resource-spending < 2)
	(strategic-number sn-allow-resource-spending >= 0)
=>
	(set-strategic-number sn-allow-resource-spending 2)
)

(defrule
	(current-age >= castle-age)
	(or	(and	(or	(goal gl-strategy xbow-rush)
				(goal gl-strategy CA-rush))
			(research-completed ri-bodkin-arrow))
		(goal gl-strategy scorpion-rush))
	(current-age-time > 120)
	(strategic-number sn-allow-resource-spending < 6)
	(strategic-number sn-allow-resource-spending >= 0)
=>
	(set-strategic-number sn-allow-resource-spending 6)
)

(defrule
	(current-age >= castle-age)
	(goal gl-strategy-class basic-class)
	(or	(current-age-time > 1300)
		(or	(up-compare-goal gl-current-age >= gv-castle-up)
			(or	(and	(town-under-attack)
					(timer-triggered 9))
				(and	(goal MILITARY 1)
					(soldier-count > 35)))))
	(strategic-number sn-allow-resource-spending < 2)
	(strategic-number sn-allow-resource-spending >= 0)
=>
	(set-strategic-number sn-allow-resource-spending 2)
)

(defrule
	(current-age >= castle-age)
	(goal gl-strategy-class basic-class)
	(or	(and	(population > 150)
			(and	(current-age-time > 900)
				(goal MILITARY 1)))
		(or	(game-time > 3000)
			(and	(military-population < 65)
				(players-military-population any-enemy > 80))))
	(strategic-number sn-allow-resource-spending < 3)
	(strategic-number sn-allow-resource-spending >= 0)
=>
	(set-strategic-number sn-allow-resource-spending 3)
)

(defrule
	(goal gl-strategy-class basic-class)
	(goal gl-current-age gv-castle)
	(player-in-game any-ally)
	(population > 80)
	(up-compare-goal gl-my-villager-count-total < 80)
	(building-type-count-total town-center < 3)
	(or	(and	(players-military-population focus-player < 10)
			(players-population focus-player < 55))
		(game-time > 2000))
	(or	(goal MILITARY 1)
		(up-compare-goal threat-time > 10000))
	(strategic-number sn-allow-resource-spending > 0)
=>
	(set-strategic-number sn-allow-resource-spending 0); Boom instead of army
)

(defrule
	(goal gl-strategy-class basic-class)
	(goal gl-current-age gv-castle)
	(goal MILITARY 0)
	(up-compare-goal threat-time > 10000)
	(or	(and	(population > 200)
			(research-available imperial-age))
		(and	(or	(goal POSITION POCKET)
				(up-compare-goal gl-rush-suitability-on-map <= LOW))
			(game-time < 1600)))
	(strategic-number sn-allow-resource-spending > 0)
=>
	(set-strategic-number sn-allow-resource-spending 0); Go up instead of army
)

#load-if-defined TINY-MAP
(defrule
	(current-age >= castle-age)
	(players-current-age every-enemy >= castle-age)
	(goal gl-strategy default)
	(game-time < 2400)
	(military-population < 40)
	(or	(players-military-population every-enemy > 50)
		(military-population < 34))
	(or	(players-military-population every-enemy > 40)
		(military-population < 26))
	(players-military-population every-enemy > 33)
	(strategic-number sn-allow-resource-spending >= 0)
=>
	(set-strategic-number sn-allow-resource-spending 3)
	(chat-to-player my-player-number "1Enemy has larger army - allow spending more resources")
	(disable-self)
)

(defrule
	(current-age >= castle-age)
	(players-current-age every-enemy >= castle-age)
	(goal gl-strategy-class basic-class)
	(game-time < 2400)
	(players-civilian-population every-enemy < 75)
	(or	(players-civilian-population every-enemy < 60)
		(players-military-population every-enemy > 75))
	(or	(players-military-population every-enemy > 60)
		(players-civilian-population every-enemy < 45))
	(players-military-population every-enemy > 50)
	(strategic-number sn-allow-resource-spending >= 0)
=>
	(set-strategic-number sn-allow-resource-spending 3)
	(chat-to-player my-player-number "1Enemy has a large army but low eco - allow spending more resources")
	(disable-self)
)
#end-if

(defrule
	(or	(and	(population > 190)
			(or	(current-age-time > 1500)
				(up-compare-goal gl-current-age >= gv-castle-up)))
		(or	(game-time > 3600)
			(and	(current-age == imperial-age)
				(current-age-time > 500))))
	(strategic-number sn-allow-resource-spending < 3)
	(strategic-number sn-allow-resource-spending >= 0)
=>
	(set-strategic-number sn-allow-resource-spending 3)
)

(defrule
	(game-time > 3600)
	(or	(and	(current-age == castle-age)
			(up-compare-goal gl-current-age <= gv-castle))
		(and	(current-age == imperial-age)
			(current-age-time > 900)))
	(strategic-number sn-allow-resource-spending < 4)
	(strategic-number sn-allow-resource-spending >= 0)
=>
	(set-strategic-number sn-allow-resource-spending 4)
)

(defrule
	(food-amount > 1600)
	(wood-amount > 1000)
	(gold-amount > 1000)
	(nand	(up-compare-goal gl-current-age >= gv-castle-up)
		(current-age == castle-age))
	(current-age-time > 60)
	(strategic-number sn-allow-resource-spending < 6)
	(or	(strategic-number sn-allow-resource-spending >= 0)
		(gold-amount > 1300))
=>
	(set-strategic-number sn-allow-resource-spending 6)
)

#load-if-defined FEUDAL-AGE-END
(defrule
	(or	(civilian-population > 80)
		(population > almost-full-pop))
	(current-age == feudal-age)
	(strategic-number sn-allow-resource-spending >= 0)
=>
	(set-strategic-number sn-allow-resource-spending 6)
)
#end-if
#load-if-defined CASTLE-AGE-END
(defrule
	(or	(civilian-population > 120)
		(and	(civilian-population > 80)
			(strategic-number sn-minimum-water-body-size-for-dock >= 1999)))
	(current-age == castle-age)
	(strategic-number sn-allow-resource-spending >= 0)
=>
	(set-strategic-number sn-allow-resource-spending 6)
)
#end-if

(defrule
	(player-in-game any-ally)
	(up-compare-goal gl-my-villager-count-total < 35)
	(or	(players-civilian-population any-enemy > 75)
		(players-population any-enemy > 100))
	(strategic-number sn-allow-resource-spending > 0)
=>
	(set-strategic-number sn-allow-resource-spending 0); To not waste all res when trying to rebuild
)

; =========== DOUBLING THE ENEMY

#load-if-defined UP-ALLY-IN-GAME
#load-if-not-defined UP-POCKET-POSITION
(defrule
	(or	(and	(or	(game-time < 1230)
				(or	(game-time > 2000)
					(goal gl-current-age gv-feudal-up)))
			(up-timer-status 34 == timer-disabled))
		(not	(goal gl-rush-suitability-on-map GOOD)))
=>
	(up-jump-rule 8)
)

(defrule
	(up-compare-goal MILITARY != 1)
	(game-time > 1230)
	(game-time < 2000)
	(up-compare-goal gl-strategy-aggressiveness-level >= AVERAGE)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(goal gl-safe-to-assist-ally YES)
	(soldier-count > 12)
	(taunt-detected every-ally 254)
	(up-allied-sn any-ally sn-target-player-number s:== sn-target-player-number)
=>
	(up-find-player ally find-closest gl-ally-player2)
	(up-modify-sn sn-focus-player-number g:= gl-ally-player2)
	(up-chat-data-to-player every-ally "1The nearest ally is %d" s: sn-focus-player-number)
	(up-chat-data-to-player my-player-number "1The nearest ally is %d" s: sn-focus-player-number)
	(disable-self)
)

(defrule
	(up-compare-goal MILITARY != 1)
	(game-time > 1230)
	(game-time < 2000)
	(goal gl-safe-to-assist-ally YES)
	(soldier-count > 12)
	(up-allied-goal focus-player POSITION != POCKET)
	(up-compare-goal gl-ally-player2 > 0)
	(up-allied-sn any-ally sn-target-player-number s:== sn-target-player-number)
=>
	(up-find-player ally find-closest gl-ally-player2)
	(up-find-next-player ally find-closest gl-ally-player2)
	(up-modify-sn sn-focus-player-number g:= gl-ally-player2)
	(up-chat-data-to-player every-ally "1The nearest pocket is %d" s: sn-focus-player-number)
	(up-chat-data-to-player my-player-number "1The nearest pocket is %d" s: sn-focus-player-number)
	(disable-self)
)

(defrule
	(up-compare-goal MILITARY != 1)
	(game-time > 1230)
	(game-time < 1700)
	(up-allied-goal focus-player gl-strategy-aggressiveness-level >= LOW)
	(soldier-count > 12)
	(up-compare-goal gl-ally-player2 > 0)
	(up-allied-sn focus-player sn-target-player-number s:== sn-target-player-number)
=>
	(enable-timer 34 11)
	(enable-timer 7 0)
	(chat-to-player focus-player "253")
	(up-modify-sn sn-focus-player-number g:= gl-target-player)
	(up-modify-goal saved-threat-level2 s:= sn-threat-level)
	(chat-to-allies "1Requesting to double the enemy")
)

(defrule
	(up-timer-status 34 == timer-running)
	(strategic-number sn-threat-level != -5)
=>
	(set-strategic-number sn-threat-level -5)
)

(defrule
	(timer-triggered 34)
	(or	(up-compare-goal MILITARY != 1)
		(up-allied-sn every-ally sn-threat-level != -5))
=>
	(up-modify-sn sn-threat-level g:= saved-threat-level2)
	(disable-timer 34)
)

(defrule
	(up-timer-status 34 != timer-disabled)
	(goal MILITARY 1)
=>
	(up-modify-sn sn-focus-player-number g:= gl-ally-player2)
)

(defrule
	(up-timer-status 34 != timer-disabled)
	(goal MILITARY 1)
	(up-allied-goal focus-player MILITARY == 1)
=>
	(enable-timer 7 90)
	(up-modify-sn sn-threat-level g:= saved-threat-level2)
	(disable-timer 34)
)

(defrule
	(up-timer-status 34 != timer-disabled)
	(goal MILITARY 1)
=>
	(up-modify-sn sn-focus-player-number g:= gl-target-player)
)

#else
(defrule
	(nor	(game-time > 1230)
		(game-time < 2100))
	(or	(up-timer-status 34 == timer-disabled)
		(game-time > 2500))
=>
	(up-jump-rule 4)
)

(defrule
	(up-compare-goal gl-strategy-aggressiveness-level != VERY-LOW)
	(up-compare-goal gl-strategy != eew-strategy)
	(up-compare-goal gl-strategy != sling)
	(up-compare-goal gl-strategy != castle-sling)
	(taunt-detected any-ally 253)
	(taunt-detected any-ally 254)
	(up-timer-status 25 != timer-running)
=>
	(enable-timer 34 11)
	(enable-timer 7 0)
	(up-modify-goal saved-threat-level2 s:= sn-threat-level)
	(enable-timer 25 120)
	(acknowledge-taunt every-ally 253)
)

(defrule
	(up-timer-status 34 == timer-running)
	(strategic-number sn-threat-level != -5)
=>
	(set-strategic-number sn-threat-level -5)
)

(defrule
	(goal MILITARY 1)
	(game-time < 2200)
	(up-timer-status 34 == timer-running)
=>
	(enable-timer 7 90)
	(chat-to-allies "1Request confirmed!")
	(up-modify-sn sn-threat-level g:= saved-threat-level2)
	(enable-timer 34 0)
)

(defrule
	(timer-triggered 34)
=>
	(up-modify-sn sn-threat-level g:= saved-threat-level2)
	(disable-timer 34)
)
#end-if
#end-if

; =========== HIT AND RUN

(defrule
	(or	(unit-type-count fire-ship-line > 0)
		(goal gl-strategy turtle-rush))
	(unit-type-count galley-line < 5)
	(current-age >= castle-age)
	(or	(strategic-number sn-hit-and-run == 0)
		(strategic-number sn-hit-and-run == 3))
=>
	(set-difficulty-parameter ability-to-maintain-distance 100)
	(set-strategic-number sn-hit-and-run 2)
)

(defrule
	(unit-type-count galley-line > 4)
	(current-age >= castle-age)
	(strategic-number sn-hit-and-run == 2)
=>
	(set-difficulty-parameter ability-to-maintain-distance 90)
	(set-strategic-number sn-hit-and-run 3)
)

#load-if-defined BRITON-CIV
(defrule
	(unit-type-count longbowman-line > 0)
	(current-age >= castle-age)
	(strategic-number sn-hit-and-run == 0)
=>
	(set-difficulty-parameter ability-to-maintain-distance 0)
	(set-strategic-number sn-hit-and-run 1)
)
#end-if

#load-if-defined HUN-CIV
(defrule
	(unit-type-count cavalry-archer-line > 0)
	(current-age >= castle-age)
	(strategic-number sn-hit-and-run == 0)
=>
	(set-difficulty-parameter ability-to-maintain-distance 0)
	(set-strategic-number sn-hit-and-run 1)
)
#end-if

#load-if-defined KOREAN-CIV
(defrule
	(unit-type-count war-wagon-line > 0)
	(current-age >= castle-age)
	(strategic-number sn-hit-and-run == 0)
=>
	(set-difficulty-parameter ability-to-maintain-distance 0)
	(set-strategic-number sn-hit-and-run 1)
)
#end-if

#load-if-defined MAYAN-CIV
(defrule
	(unit-type-count plumed-archer-line > 0)
	(current-age >= castle-age)
	(strategic-number sn-hit-and-run == 0)
=>
	(set-difficulty-parameter ability-to-maintain-distance 0)
	(set-strategic-number sn-hit-and-run 1)
)
#end-if

#load-if-defined MAGYAR-CIV
(defrule
	(unit-type-count cavalry-archer-line > 3)
	(goal gl-advanced-archery CAs)
	(current-age >= castle-age)
	(strategic-number sn-hit-and-run == 0)
=>
	(set-difficulty-parameter ability-to-maintain-distance 0)
	(set-strategic-number sn-hit-and-run 1)
)
#end-if

#load-if-defined MONGOL-CIV
(defrule
	(or	(unit-type-count mangudai-line > 0)
		(and	(unit-type-count cavalry-archer-line > 3)
			(goal gl-advanced-archery CAs)))
	(current-age >= castle-age)
	(strategic-number sn-hit-and-run == 0)
=>
	(set-difficulty-parameter ability-to-maintain-distance 0)
	(set-strategic-number sn-hit-and-run 1)
)
#end-if

#load-if-defined SARACEN-CIV
(defrule
	(unit-type-count mameluke-line > 0)
	(current-age >= castle-age)
	(strategic-number sn-hit-and-run == 0)
=>
	(set-difficulty-parameter ability-to-maintain-distance 0)
	(set-strategic-number sn-hit-and-run 1)
)
#end-if

#load-if-defined SPANISH-CIV
(defrule
	(unit-type-count conquistador-line > 0)
	(current-age >= castle-age)
	(strategic-number sn-hit-and-run == 0)
=>
	(set-difficulty-parameter ability-to-maintain-distance 0)
	(set-strategic-number sn-hit-and-run 1)
)
#end-if

; ======== ATTACKING

(defrule
	(or	(up-timer-status 1 == timer-running)
		(up-compare-const gv-feudal-age-end == 1))
=>
	(up-jump-rule 8)
)

(defrule
	(or	(unit-type-count battering-ram-line > 0)
		(or	(unit-type-count trebuchet-set > 0)
			(or	(unit-type-count elite-eagle-warrior > 10)
				(or	(unit-type-count huskarl-set > 10)
					(or	(population >= almost-full-pop)
						(or	(strategic-number sn-minimum-water-body-size-for-dock != 998)
							(and	(goal gl-safe-to-assist-ally YES)
								(players-building-type-count target-player watch-tower < 4))))))))
=>
	(up-jump-rule 1)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(or	(players-building-type-count target-player watch-tower > 4)
		(military-population < 30))
	(or	(players-building-type-count target-player watch-tower > 2)
		(and	(up-research-status c: ri-chain-mail <= research-pending)
			(up-research-status c: ri-chain-barding <= research-pending)))
	(players-building-type-count target-player watch-tower > 0)
	(unit-type-count battering-ram-line < 1)
	(unit-type-count trebuchet-set < 1)
	(timer-triggered 1)
=>
	(enable-timer 1 50)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 0)
)

(defrule
	(nand	(goal gl-eew-strategy-type fast-imp)
		(building-type-count-total siege-workshop < 1))
	(current-age >= castle-age)
	(population < almost-full-pop)
	(strategic-number sn-percent-attack-soldiers != 0)
	(players-building-type-count target-player castle > 0)
	(unit-type-count battering-ram-line < 1)
	(unit-type-count trebuchet-set < 1)
	(timer-triggered 1)
=>
	(enable-timer 1 50)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 0)
)

#load-if-not-defined CASTLE-AGE-END
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(current-age == castle-age)
	(population > 100)
	(players-population any-ally > 110)
	(players-population target-player < 100)
	(players-military-population target-player < 20)
	(nand	(players-building-type-count target-player stone-wall-line > 4)
		(players-unit-type-count target-player mangonel-line > 0))
	(goal gl-safe-to-assist-ally YES)
	(game-time < 2400)
	(timer-triggered 1)
=>
	(up-jump-rule 3)
)
#else
(defrule
	(true)
=>
	(up-jump-rule 3)
)
#end-if

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(current-age == castle-age)
	(population > 170)
	(players-population any-ally > 180)
	(players-population target-player < 150)
	(players-military-population target-player < 30)
	(nand	(players-building-type-count target-player stone-wall-line > 4)
		(players-unit-type-count target-player mangonel-line > 0))
	(goal gl-safe-to-assist-ally YES)
	(game-time < 2400)
	(timer-triggered 1)
=>
	(up-jump-rule 2)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(current-age == castle-age)
	(players-military-population focus-player > 10)
	(or	(unit-type-count battering-ram-line < 6)
		(and	(players-current-age target-player == imperial-age)
			(player-valid any-human-enemy)))
	(strategic-number sn-percent-attack-soldiers != 0)
	(players-building-type-count target-player castle > 1); Block attacking if target has multiple castles
	(timer-triggered 1)
=>
	(enable-timer 1 50)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 0)
	(up-jump-rule 2)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(current-age == castle-age)
	(or	(unit-type-count battering-ram-line < 6)
		(and	(players-current-age target-player == imperial-age)
			(player-valid any-human-enemy)))
	(strategic-number sn-percent-attack-soldiers != 0)
	(players-building-type-count target-player castle > 2)
	(timer-triggered 1)
=>
	(enable-timer 1 50)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 0)
	(up-jump-rule 1)
)

(defrule
	(current-age >= castle-age)
	(strategic-number sn-percent-attack-soldiers == 0)
	(or	(unit-type-count battering-ram-line > 0)
		(or	(unit-type-count trebuchet-set > 0)
			(population >= almost-full-pop)))
	(up-timer-status 1 != timer-running)
=>
	(enable-timer 1 15)
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-number-attack-groups 0)
)

(defrule
	(current-age >= castle-age)
	(current-age-time <= 120)
	(strategic-number sn-percent-attack-soldiers != 0)
	(timer-triggered 1)
	(goal MILITARY 1)
	(not	(town-under-attack))
=>
	(enable-timer 1 15)
	(set-goal TSA 1)
)
#else; Skip a lot of stuff for DM
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(unit-type-count battering-ram-line < 6)
	(unit-type-count trebuchet-set < 3)
	(population < almost-full-pop)
	(strategic-number sn-percent-attack-soldiers != 0)
	(or	(players-building-type-count target-player castle > 1)
		(players-building-type-count target-player bombard-tower > 0))
	(or	(up-projectile-detected projectile-castle < 500000)
		(up-projectile-detected projectile-bombard-tower < 500000))
	(game-time < 420)
	(timer-triggered 1)
=>
	(enable-timer 1 30)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 0)
)

(defrule
	(current-age >= castle-age)
	(strategic-number sn-percent-attack-soldiers == 0)
	(or	(unit-type-count battering-ram-line > 0)
		(unit-type-count trebuchet-set > 0))
	(or	(game-time > 420)
		(or	(unit-type-count battering-ram-line > 5)
			(unit-type-count trebuchet-set > 2)))
	(up-timer-status 1 != timer-running)
=>
	(enable-timer 1 15)
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-number-attack-groups 0)
)

(defrule
	(current-age >= castle-age)
	(strategic-number sn-percent-attack-soldiers == 0)
	(population >= almost-full-pop)
	(up-timer-status 1 != timer-running)
=>
	(enable-timer 1 15)
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-number-attack-groups 0)
)
#end-if

(defrule
	(current-age >= castle-age)
	(current-age-time > 120)
	(strategic-number sn-percent-attack-soldiers != 0)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(timer-triggered 1)
	(goal MILITARY 1)
=>
	(enable-timer 1 60)
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-number-attack-groups 0)
	(chat-to-player my-player-number "Attack now (TSA)")
)

#load-if-not-defined DEATH-MATCH
(defrule
	(or	(and	(goal gl-strategy xbow-rush)
			(current-age == castle-age))
		(and	(goal gl-strategy turkish-fast-imp)
			(current-age == imperial-age)))
=>
	(set-goal MILITARY 0)
	(disable-self)
)

#load-if-not-defined HUN-CIV
#load-if-not-defined SPANISH-CIV

(defrule
	(up-compare-goal gl-strategy != xbow-rush)
=>
	(up-jump-rule 4)
)

(defrule
	(goal gl-strategy xbow-rush)
	(or	(and	(soldier-count > 12)
			(players-military-population focus-player < 4))
		(or	(and	(soldier-count > 18)
				(players-military-population focus-player < 6))
			(players-building-type-count target-player castle > 0)))
	(unit-type-count-total battering-ram-line < 2)
	(not	(goal RAM 1))
=>
	(set-goal RAM 1)
)

(defrule
	(goal gl-strategy xbow-rush)
	(or	(and	(soldier-count > 50)
			(players-military-population focus-player < 18))
		(or	(and	(soldier-count > 70)
				(players-military-population focus-player < 26))
			(players-building-type-count target-player castle > 0)))
	(unit-type-count-total battering-ram-line < 2)
	(not	(goal RAM 1))
=>
	(set-goal RAM 1)
)

(defrule
	(goal gl-strategy xbow-rush)
	(players-building-type-count target-player castle == 0)
	(or	(and	(players-military-population focus-player >= 4)
			(soldier-count < 13))
		(or	(and	(players-military-population focus-player >= 6)
				(soldier-count < 19))
			(unit-type-count-total battering-ram-line > 1)))
	(not	(goal RAM 0))
=>
	(set-goal RAM 0)
)

(defrule
	(goal gl-strategy xbow-rush)
	(players-building-type-count target-player castle == 0)
	(or	(and	(players-military-population focus-player >= 18)
			(soldier-count < 50))
		(or	(and	(players-military-population focus-player >= 26)
				(soldier-count < 70))
			(unit-type-count-total battering-ram-line > 1)))
	(not	(goal RAM 0))
=>
	(set-goal RAM 0)
)
#end-if
#end-if

#load-if-defined TURKISH-CIV
(defrule
	(goal gl-strategy turkish-fast-imp)
	(or	(and	(soldier-count > 12)
			(players-military-population focus-player < 4))
		(or	(and	(soldier-count > 18)
				(players-military-population focus-player < 6))
			(players-building-type-count target-player castle > 0)))
	(unit-type-count-total battering-ram-line < 2)
	(not	(goal RAM 1))
=>
	(set-goal RAM 1)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(players-building-type-count target-player castle == 0)
	(or	(and	(players-military-population focus-player >= 4)
			(soldier-count < 13))
		(or	(and	(players-military-population focus-player >= 6)
				(soldier-count < 19))
			(unit-type-count-total battering-ram-line > 1)))
	(not	(goal RAM 0))
=>
	(set-goal RAM 0)
)

(defrule
	(goal gl-strategy turkish-fast-imp)
	(unit-type-count-total hand-cannoneer > 6)
=>
	(enable-timer 7 0)
	(disable-self)
)
#end-if

(defrule
	(current-age >= feudal-age)
	(nand	(up-compare-goal gl-strategy-type >= FC)
		(current-age < castle-age))
	(or	(goal gl-strategy-class basic-class)
		(and	(goal gl-strategy xbow-rush)
			(and	(research-completed ri-bodkin-arrow)
				(research-completed ri-crossbow))))
=>
	(enable-timer 1 60)
	(enable-timer 7 0)
	(set-strategic-number sn-percent-attack-soldiers 100)
	(disable-self)
)

(defrule
	(or	(and	(up-compare-goal gl-current-age >= gv-feudal-up)
			(current-age > feudal-age))
		(or	(and	(goal gl-strategy sling)
				(and	(up-timer-status 7 == timer-disabled)
					(up-compare-goal MILITARY <= 0)))
			(up-compare-const gv-feudal-age-end == 1)))
=>
	(up-jump-rule 6)
)

(defrule
	(up-compare-goal gl-strategy != korean-boom)
	(up-compare-goal gl-strategy != grush)
	(or	(goal gl-current-age gv-feudal-up)
		(or	(and	(goal gl-strategy-type basic-flush)
				(players-building-type-count target-player watch-tower > 2))
			(goal gl-strategy sling)))
	(current-age == feudal-age)
	(timer-triggered 7)
=>
	(disable-timer 7)
	(set-goal MILITARY 0)
)

(defrule
	(goal gl-current-age  gv-feudal)
	(goal gl-strategy-type basic-flush)
	(players-building-type-count target-player watch-tower > 0)
	(or	(players-building-type-count target-player stone-wall-line > 3)
		(players-building-type-count target-player palisade-wall > 3))
	(up-projectile-detected projectile-watch-tower < 30000)
	(up-player-distance target-player < 25)
	(players-building-type-count target-player watch-tower > 0)
	(current-age == feudal-age)
	(timer-triggered 7)
=>
	(disable-timer 7)
	(set-goal MILITARY 0)
)

(defrule
	(not	(goal gl-strategy korean-boom))
	(up-compare-goal gl-strategy != sling)
	(current-age == feudal-age)
	(players-unit-type-count focus-player knight-line > 2)
	(unit-type-count-total spearman-line < 8)
=>
	(disable-timer 7)
	(set-goal MILITARY 0)
	(set-strategic-number sn-target-evaluation-kills 1)
	(disable-self)
)

(defrule
	(goal gl-strategy-class basic-class)
	(up-compare-goal gl-strategy != sling)
	(goal gl-current-age gv-feudal)
	(goal MILITARY 0)
	(strategic-number sn-target-evaluation-kills == 1)
	(unit-type-count-total spearman-line > 10)
=>
	(enable-timer 7 0)
	(set-strategic-number sn-target-evaluation-kills 0)
	(disable-self)
)

(defrule
	(goal gl-strategy-class basic-class)
	(up-compare-goal gl-strategy != sling)
	(goal gl-strategy default)
	(up-compare-goal gl-current-age <= gv-feudal)
	(soldier-count > 10)
	(players-military-population any-enemy > 7)
	(building-type-count-total blacksmith == 0)
=>
	(disable-timer 7)
	(set-goal MILITARY 0)
	(set-strategic-number sn-target-evaluation-kills 2)
	(disable-self)
)

(defrule
	(goal gl-strategy-class basic-class)
	(up-compare-goal gl-strategy != sling)
	(up-compare-goal gl-current-age <= gv-feudal)
	(goal MILITARY 0)
	(strategic-number sn-target-evaluation-kills == 2)
	(building-type-count-total blacksmith > zero-value)
=>
	(enable-timer 7 40)
	(set-strategic-number sn-target-evaluation-kills 0)
	(disable-self)
)

(defrule
	(goal gl-strategy-class basic-class)
	(nand	(or	(goal gl-advanced-trash YES)
			(goal CASTLE 9))
		(and	(not	(research-completed ri-elite-skirmisher))
			(not	(research-completed ri-pikeman))))
	(current-age >= castle-age)
=>
	(enable-timer 1 30)
	(enable-timer 7 30)
	(set-strategic-number sn-target-evaluation-kills 0)
	(disable-self)
)

(defrule
	(or	(and	(goal gl-eew-strategy-type fast-imp)
			(and	(or	(building-type-count-total archery-range > 0)
					(building-type-count-total dock > 1))
				(current-age == castle-age)))
		(up-compare-goal gl-strategy-type <= controlled-flush))
	(up-compare-goal gl-strategy != fi-archer-flush)
	(current-age >= feudal-age)
=>
	(enable-timer 1 30)
	(enable-timer 7 10)
	(set-strategic-number sn-target-evaluation-kills 0)
	(disable-self)
)

#load-if-defined DARK-AGE-END
(defrule
	(game-time > 800)
	(up-timer-status 7 == timer-disabled)
=>
	(enable-timer 7 0)
	(set-strategic-number sn-threat-level -1)
	(up-set-attack-stance militiaman-line c: aggressive)
	(set-strategic-number sn-number-attack-groups 0)
)

(defrule
	(goal MILITARY 1)
	(up-timer-status 7 != timer-disabled)
	(strategic-number sn-number-attack-groups == 0)
=>
	(up-set-attack-stance militiaman-line c: aggressive)
	(set-strategic-number sn-number-attack-groups 196)
)

(defrule
	(up-compare-goal MILITARY != 1)
	(up-timer-status 7 != timer-disabled)
	(strategic-number sn-number-attack-groups == 196)
=>
	(up-set-attack-stance militiaman-line c: aggressive)
	(set-strategic-number sn-number-attack-groups 0)
)
#end-if
#end-if; DM

(defrule
	(or	(up-timer-status 44 != timer-disabled)
		(or	(and	(goal gl-wonder-build-attempt YES)
				(nor	(players-building-type-count any-enemy wonder > 0)
					(enemy-captured-relics)))
			(town-under-attack)))
=>
	(up-jump-rule 1)
)

(defrule
	(up-compare-goal MILITARY != 1)
	(current-age == gv-maximum-age)
	(population > pop-to-full-pop-attack)
	(or	(gold-amount > 700)
		(unit-type-count-total trade-cart > 22))
	(strategic-number sn-allow-resource-spending > 4)
=>
	(set-goal MILITARY 1)
	(disable-timer 7)
	(chat-to-player my-player-number "Huge army, so better attack anyway")
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-hitting-pop-cap YES)
	(acknowledge-taunt every-ally 19)
	(acknowledge-taunt every-ally 21)
	(acknowledge-taunt every-ally 36)
)

#load-if-defined UP-HUMAN-IN-GAME
#load-if-not-defined TINY-MAP
(defrule
	(game-time > time-to-allow-blind-attack); 60 in DM, otherwise 1200
;	(up-timer-status 36 != timer-running)
	(taunt-detected any-human-ally 21)
=>
	(set-goal MILITARY 1)
	(disable-timer 7)
	(chat-to-allies "1I'll attack now!")
	(chat-to-player this-any-enemy "1I'll attack now!")
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-hitting-pop-cap YES)
	(acknowledge-taunt every-ally 19)
	(acknowledge-taunt every-ally 21)
	(acknowledge-taunt every-ally 36)
	(disable-timer 44)
	(enable-timer 36 300)
)
#end-if
#end-if

#load-if-not-defined DEFEND-WONDER
(defrule
	(or	(or	(timer-triggered 36)
			(population < pop-to-stop-full-pop-attack))
		(or	(taunt-detected any-human-ally 19)
			(taunt-detected any-human-ally 36)))
	(game-time > 1200)
	(strategic-number sn-hitting-pop-cap == YES)
=>
	(enable-timer 7 5)
	(chat-to-player my-player-number "Stop the blind attack")
	(set-strategic-number sn-hitting-pop-cap NO)
	(acknowledge-taunt every-ally 19)
	(acknowledge-taunt every-ally 36)
	(disable-timer 36)
)
#else
(defrule
	(true)
=>
	(set-goal gl-dtw-blind-attack-time dtw-blind-attack-time)
	(disable-self)
)

(defrule
	(or	(civ-selected hun)
		(or	(players-civ any-ally hun)
			(players-civ any-enemy hun)))
=>
	(up-modify-goal gl-dtw-blind-attack-time c:+ 90)
	(disable-self)
)

(defrule
	(up-timer-status 7 != timer-disabled)
	(up-timer-status 44 == timer-disabled)
	(up-compare-goal MILITARY != 1)
	(game-time >= dtw-blind-attack-time)
=>
	(set-goal MILITARY 1)
	(disable-timer 7)
	(chat-to-player my-player-number "Years are running out so better attack anyway")
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-hitting-pop-cap YES)
)

(defrule
	(goal MILITARY 1)
	(game-time >= dtw-blind-attack-time)
	(strategic-number sn-maximum-town-size < 250)
=>
	(set-strategic-number sn-maximum-town-size 250)
)

(defrule
	(or	(and	(up-timer-status 36 != timer-running)
			(population < pop-to-stop-full-pop-attack))
		(or	(taunt-detected any-human-ally 19)
			(taunt-detected any-human-ally 36)))
	(game-time < dtw-blind-attack-time)
	(strategic-number sn-hitting-pop-cap == YES)
=>
	(enable-timer 7 5)
	(chat-to-player my-player-number "Stop the blind attack")
	(chat-to-player this-any-ally "1I'll stop the blind attack")
	(set-strategic-number sn-hitting-pop-cap NO)
	(acknowledge-taunt every-ally 19)
	(disable-timer 36)
)
#end-if

(defrule
	(game-time > time-to-allow-blind-attack); 60 in DM, otherwise 1200
	(taunt-detected any-human-ally 36)
=>
	(disable-timer 1)
	(disable-timer 7)
	(disable-timer 14)
	(enable-timer 44 180)
	(chat-to-allies "1I won't attack for 3 minutes!")
	(acknowledge-taunt every-ally 36)
	(set-strategic-number sn-hitting-pop-cap NO)
	(set-goal MILITARY 0)
)

(defrule
	(timer-triggered 44)
=>
	(enable-timer 1 5)
	(enable-timer 7 5)
	(enable-timer 14 5)
	(disable-timer 44)
	(acknowledge-taunt every-ally 19)
	(acknowledge-taunt every-ally 22)
	(acknowledge-taunt every-ally 36)
	(set-strategic-number sn-disable-defend-groups 0)
	(up-reset-unit c: -1)
)

(defrule
	(timer-triggered 7)
	(goal MILITARY 1)
	(current-age == gv-maximum-age)
	(population > pop-to-stop-full-pop-attack)
	(or	(gold-amount > 700)
		(unit-type-count-total trade-cart > 22))
	(strategic-number sn-allow-resource-spending > 5)
=>
	(enable-timer 7 20)
)

(defrule
	(taunt-detected any-human-ally 22)
=>
	(enable-timer 1 45)
	(enable-timer 7 45)
	(enable-timer 14 45)
	(disable-timer 44)
	(set-strategic-number sn-retreating 0)
	(set-strategic-number sn-unit-spreading2 1)
	(acknowledge-taunt every-ally 19)
	(acknowledge-taunt every-ally 22)
	(acknowledge-taunt every-ally 36)
	(set-strategic-number sn-disable-defend-groups 0)
	(set-goal gl-water-retreating YES)
	(up-reset-unit c: -1)
)

; =========== MORE PERSONALITY

#load-if-not-defined TEAMS-LOCKED

(defrule
	(or	(players-stance any-computer-ally neutral)
		(or	(players-stance any-computer-ally enemy)
			(or	(players-stance any-human-ally neutral)
				(players-stance any-human-ally enemy))))
	(timer-triggered 43)
=>
	(chat-to-player-using-id this-any-computer-ally betrayed-chat-id)
	(chat-to-player-using-id this-any-human-ally betrayed-chat-id)
	(set-stance this-any-computer-ally enemy)
	(set-stance this-any-human-ally enemy)
)

(defrule
	(or	(players-stance any-computer-ally neutral)
		(or	(players-stance any-computer-ally enemy)
			(or	(players-stance any-human-ally neutral)
				(players-stance any-human-ally enemy))))
	(up-timer-status 43 != timer-running)
=>
	(enable-timer 43 10)
)

#load-if-defined UP-HUMAN-IN-GAME
#load-if-not-defined UP-SCENARIO-GAME
(load-random 5 "Barbarian_2.0\Strategies\Personality\Traitor")
(load-random 7 "Barbarian_2.0\Strategies\Personality\SuperTraitor"); Let's bring it even further
#end-if

(defrule
	(taunt-detected my-player-number 186)
	(taunt-detected any-computer-enemy 186)
=>
	(chat-to-player this-any-computer-enemy "186")
	(chat-to-player-using-id this-any-computer-enemy 22105)
	(set-stance this-any-computer-enemy ally)
	(set-goal gl-identity 4651)
)

(defrule
	(taunt-detected any-computer-enemy 187)
=>
	(chat-to-player this-any-computer-enemy "187")
	(chat-to-player-using-id this-any-computer-enemy 22105)
	(set-stance this-any-computer-enemy ally)
	(set-goal gl-identity 4651)
)

(defrule
	(taunt-detected any-computer-ally 254)
	(taunt-detected any-computer-ally 189)
=>
	(chat-to-player every-enemy "189")
	(chat-to-player every-ally "189")
	(set-goal gl-traitor YES)
	(set-goal gl-identity 4651)
;	(set-stance every-ally enemy)
	(disable-self)
)

(defrule
	(taunt-detected any-computer-enemy 189)
=>
	(chat-to-player-using-id this-any-computer-enemy 22105)
	(set-stance this-any-computer-enemy ally)
	(set-goal gl-traitor YES)
	(set-goal gl-identity 4651)
	(chat-to-player every-enemy "189")
)

(defrule
	(goal gl-traitor YES)
	(player-human any-ally)
=>
	(set-stance this-any-ally enemy)
	(chat-to-player-using-id this-any-ally super-traitor-chat-id)
	(chat-to-allies "40")
)

(defrule
	(goal gl-traitor YES)
	(up-allied-goal any-ally gl-identity != 4651)
=>
	(set-stance this-any-ally enemy)
	(chat-to-player-using-id this-any-ally super-traitor-chat-id)
	(chat-to-allies "40")
)
#end-if
#end-if

; =========== MORE UP GOODIES

(defrule
	(game-time > 1200)
	(not	(death-match-game))
	(up-compare-goal gl-current-age >= gv-castle)
=>
	(up-jump-rule 13)
)

(defrule
	(up-compare-goal gl-uncommon-settings != YES)
	(strategic-number sn-nomad-style-start == 0)
	(game-time > 600)
	(game-time <= 700)
	(civilian-population < 22)
	(difficulty == hard)
	(up-compare-goal SLING >= 1)
	(up-compare-goal SLING <= 3)
=>
	(set-goal 6 0)
	(chat-to-allies "93")
	(chat-to-player my-player-number "97")
	(acknowledge-taunt my-player-number 95)
	(disable-self)
)

(defrule
	(up-compare-goal gl-uncommon-settings != YES)
	(strategic-number sn-nomad-style-start == 0)
	(game-time > 700)
	(game-time <= 800)
	(civilian-population < 24)
	(difficulty == hard)
	(up-compare-goal SLING >= 1)
	(up-compare-goal SLING <= 3)
=>
	(set-goal 6 0)
	(chat-to-allies "93")
	(chat-to-player my-player-number "97")
	(acknowledge-taunt my-player-number 95)
	(disable-self)
)

(defrule
	(up-compare-goal gl-uncommon-settings != YES)
	(strategic-number sn-nomad-style-start == 0)
	(game-time > 800)
	(game-time <= 900)
	(civilian-population < 25)
	(difficulty == hard)
	(up-compare-goal SLING >= 1)
	(up-compare-goal SLING <= 3)
=>
	(set-goal 6 0)
	(chat-to-allies "93")
	(chat-to-player my-player-number "97")
	(acknowledge-taunt my-player-number 95)
	(disable-self)
)

(defrule
	(up-compare-goal gl-uncommon-settings != YES)
	(strategic-number sn-nomad-style-start == 0)
	(game-time > 900)
	(game-time <= 1080)
	(civilian-population < 26)
	(difficulty == hard)
	(up-compare-goal SLING >= 1)
	(up-compare-goal SLING <= 3)
=>
	(set-goal 6 0)
	(chat-to-allies "93")
	(chat-to-player my-player-number "97")
	(acknowledge-taunt my-player-number 95)
	(disable-self)
)

(defrule
	(up-compare-goal gl-uncommon-settings != YES)
	(strategic-number sn-nomad-style-start == 0)
	(game-time > 1080)
	(game-time <= 1200)
	(civilian-population < 27)
	(difficulty == hard)
	(up-compare-goal SLING >= 1)
	(up-compare-goal SLING <= 3)
=>
	(set-goal 6 0)
	(chat-to-allies "93")
	(chat-to-player my-player-number "97")
	(acknowledge-taunt my-player-number 95)
	(disable-self)
)

(defrule
	(up-compare-goal gl-uncommon-settings != YES)
	(strategic-number sn-nomad-style-start == 0)
	(goal gl-strategy sling)
	(game-time > 30)
	(game-time <= 1200)
	(or	(taunt-detected any-computer-ally 93)
		(taunt-detected any-human-ally 33))
	(up-compare-goal gl-current-age <= gv-feudal)
=>
	(chat-to-player my-player-number "Badly hurt ally - I stop slinging now")
	(chat-to-allies-using-id 22074)
	(chat-to-allies "96")
	(set-goal gl-strategy regicide-strategy)
	(set-goal gl-strategy-type FC2)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal SLING 0)
)

(defrule
	(strategic-number sn-livestock-to-town-center != 1)
=>
	(set-strategic-number sn-minimum-boar-hunt-group-size 6)
	(set-strategic-number sn-enable-boar-hunting 0)
	(set-strategic-number sn-retreating 0)
	(set-strategic-number sn-percent-building-cancellation 30)
	(set-strategic-number sn-enable-patrol-attack 1)
	(set-strategic-number sn-enable-new-building-system 1)
	(set-strategic-number sn-enable-offensive-priority 1)
	(set-strategic-number sn-livestock-to-town-center 1)
	(set-strategic-number sn-number-civilian-militia 0)
	(set-strategic-number sn-wall-targeting-mode 1)
	(up-assign-builders c: bombard-tower c: 4)
	(enable-timer 6 75)
	(set-goal gl-MICRO-CONTROL NO)
)

(defrule
	(or	(goal gl-strategy wall-boom)
		(and	(goal gl-strategy grush)
			(goal gl-turtling-control YES)))
	(game-time > 30)
=>
	(up-jump-rule 1)
)

(defrule
	(strategic-number sn-disable-builder-assistance != 1)
=>
	(set-strategic-number sn-preferred-trade-distance gv-preferred-trade-distance)
	(set-goal target-system normal)
	(set-goal target-system-rewriting YES)
	(set-goal reset-unit-targeting YES)
	(set-goal gl-rush-suitability-on-map GOOD)
	(set-goal gl-increased-aggressiveness NO)
	(set-goal gl-fixed-target-player NO)
	(set-goal gl-GRUSH-CONTROL NO)
	(set-goal gl-refused-from-sling NO)
	(set-goal gl-assisting-ally NO)
	(set-goal gl-eternal-drush NO)
	(set-strategic-number sn-disable-builder-assistance 1)
	(set-strategic-number sn-dropsite-separation-distance 3)
	(set-goal gl-university-placed NO)
	(set-strategic-number sn-hit-and-run 0)
)

(defrule
	(up-compare-goal gl-current-age <= gv-feudal)
	(current-age == feudal-age)
	(goal gl-FC-type gv-2-villagers)
	(game-time < 1200)
=>
	(up-assign-builders c: market c: 3)
	(disable-self)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
=>
	(up-assign-builders c: market c: 1)
	(disable-self)
)

(defrule
	(or	(civ-selected aztec)
		(or	(civ-selected mayan)
			(and	(game-time < 10)
				(and	(not	(can-train villager))
					(can-research ri-loom)))))
	(not	(death-match-game))
=>
	(up-assign-builders c: house c: 2)
	(disable-self)
)

(defrule
	(or	(game-time > 45)
		(civ-selected chinese))
	(game-time > 10)
	(not	(death-match-game))
=>
	(up-assign-builders c: house c: 1)
	(disable-self)
)

#load-if-not-defined DEATH-MATCH
(defrule
	(strategic-number sn-town-center-start == 0)
=>
	(up-assign-builders c: town-center c: land-nomad-TC-villagers)
	(up-assign-builders c: unbuilt-town-center c: land-nomad-TC-villagers)
	(disable-self)
)

#load-if-defined CHINESE-CIV
(defrule
	(strategic-number sn-town-center-start == 0)
	(goal gl-nothing-style-map YES)
=>
	(up-assign-builders c: town-center c: 1)
	(up-assign-builders c: unbuilt-town-center c: 1)
	(disable-self)
)
#else
(defrule
	(strategic-number sn-town-center-start == 0)
	(building-type-count-total town-center > 0)
	(building-type-count town-center == 0)
	(or	(wood-amount >= 30)
		(civ-selected hun))
=>
	(up-assign-builders c: town-center c: 6)
	(up-assign-builders c: unbuilt-town-center c: 6)
	(disable-self)
)
#end-if

(defrule
	(game-time > 5)
	(or	(up-compare-goal gl-nothing-style-map != YES)
		(building-type-count town-center > 0))
	(strategic-number sn-town-center-start == 1)
=>
	(up-assign-builders c: town-center c: 4)
	(up-assign-builders c: unbuilt-town-center c: 4)
	(disable-self)
)

#load-if-defined UP-2-PLAYER-GAME
(defrule
	(goal gl-strategy eagle-rush)
	(game-time < 1200)
	(or	(players-civ every-enemy aztec)
		(players-civ every-enemy mayan))
	(commodity-selling-price stone < default-stone-price)
=>
	(up-assign-builders c: town-center c: 1)
	(up-assign-builders c: unbuilt-town-center c: 1); Keep most villagers at work so we don't get outnumbered
	(disable-self)
)

(defrule
	(goal gl-strategy eagle-rush)
	(game-time > 1800)
	(or	(players-civ every-enemy aztec)
		(players-civ every-enemy mayan))
=>
	(up-assign-builders c: town-center c: 4)
	(up-assign-builders c: unbuilt-town-center c: 4)
	(disable-self)
)
#end-if

#end-if; DM

(defrule
	(nor	(taunt-detected any-ally 239)
		(taunt-detected my-player-number 239))
	(nor	(taunt-detected any-ally 240)
		(taunt-detected my-player-number 240))
=>
	(up-jump-rule 6)
)

(defrule
	(or	(taunt-detected any-ally 239)
		(taunt-detected my-player-number 239))
=>
	(up-chat-data-to-player every-ally "My target player is %d" s: sn-target-player-number)
	(up-chat-data-to-player my-player-number "My target player is %d" s: sn-target-player-number)
	(up-chat-data-to-player every-ally "My focus player is %d" s: sn-focus-player-number)
	(up-chat-data-to-player my-player-number "My focus player is %d" s: sn-focus-player-number)
	(up-chat-data-to-player every-ally "Threat level is %d" s: sn-threat-level)
	(up-chat-data-to-player my-player-number "Threat level is %d" s: sn-threat-level)
	(acknowledge-taunt every-ally 239)
	(acknowledge-taunt my-player-number 239)
)

(defrule
	(or	(taunt-detected any-ally 240)
		(taunt-detected my-player-number 240))
	(goal target-system siege)
=>
	(chat-to-player my-player-number "Target system = siege")
	(chat-to-player every-ally "Target system = siege")
	(acknowledge-taunt every-ally 240)
	(acknowledge-taunt my-player-number 240)
)

(defrule
	(or	(taunt-detected any-ally 240)
		(taunt-detected my-player-number 240))
	(goal target-system rush)
=>
	(chat-to-player my-player-number "Target system = rush")
	(chat-to-player every-ally "Target system = rush")
	(acknowledge-taunt every-ally 240)
	(acknowledge-taunt my-player-number 240)
)

(defrule
	(or	(taunt-detected any-ally 240)
		(taunt-detected my-player-number 240))
	(goal target-system normal)
=>
	(chat-to-player my-player-number "Target system = normal")
	(chat-to-player every-ally "Target system = normal")
	(acknowledge-taunt every-ally 240)
	(acknowledge-taunt my-player-number 240)
)

(defrule
	(or	(taunt-detected any-ally 240)
		(taunt-detected my-player-number 240))
	(goal target-system raid)
=>
	(chat-to-player my-player-number "Target system = raid")
	(chat-to-player every-ally "Target system = raid")
	(acknowledge-taunt every-ally 240)
	(acknowledge-taunt my-player-number 240)
)

(defrule
	(or	(taunt-detected any-ally 240)
		(taunt-detected my-player-number 240))
	(goal target-system aggressive-raid)
=>
	(chat-to-player my-player-number "Target system = aggressive raid")
	(chat-to-player every-ally "Target system = aggressive raid")
	(acknowledge-taunt every-ally 240)
	(acknowledge-taunt my-player-number 240)
)

(defrule
	(or	(unit-type-count battering-ram-line > 0)
		(or	(unit-type-count trebuchet-set > 0)
			(unit-type-count cannon-galleon-line > 0)))
	(goal target-system aggressive-raid)
	(goal target-system-rewriting NO)
=>
	(set-goal target-system normal)
	(set-goal target-system-rewriting YES)
)

(defrule
	(or	(unit-type-count battering-ram-line > 0)
		(or	(unit-type-count trebuchet-set > 0)
			(or	(unit-type-count cannon-galleon-line > 0)
				(players-military-population focus-player >= 30))))
	(goal target-system raid)
	(goal target-system-rewriting NO)
=>
	(set-goal target-system normal)
	(set-goal target-system-rewriting YES)
)

(defrule
	(or	(and	(unit-type-count battering-ram-line > 1)
			(or	(strategic-number sn-minimum-water-body-size-for-dock == 998)
				(players-military-population focus-player < 25)))
		(or	(unit-type-count trebuchet-set > 0)
			(unit-type-count cannon-galleon-line > 2)))
	(up-compare-goal target-system != siege)
	(goal target-system-rewriting NO)
=>
	(set-goal target-system siege)
	(set-goal target-system-rewriting YES)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(or	(unit-type-count battering-ram-line > 0)
		(unit-type-count trebuchet-set > 0))
	(military-population > 15)
	(or	(players-military-population focus-player < 7)
		(military-population > 27))
	(or	(players-military-population focus-player < 15)
		(military-population > 37))
	(players-military-population focus-player < 20)
	(up-compare-goal target-system != siege)
	(goal target-system-rewriting NO)
=>
	(set-goal target-system siege)
	(set-goal target-system-rewriting YES)
)

(defrule
	(goal gl-rush-suitability-on-map GOOD)
	(or	(research-completed ri-scale-barding)
		(research-completed ri-chain-mail))
	(soldier-count > 25)
	(unit-type-count battering-ram-line == 0)
	(unit-type-count trebuchet-set == 0)
	(unit-type-count cannon-galleon-line == 0)
	(not	(goal target-system raid))
	(players-military-population focus-player < 8)
	(players-building-type-count target-player castle == 0)
	(goal target-system-rewriting NO)
=>
	(set-goal target-system raid)
	(set-goal target-system-rewriting YES)
)

(defrule
	(goal gl-strategy eew-strategy)
	(goal SLING 0)
	(goal gl-eagles heavy-eagles)
	(unit-type-count battering-ram-line == 0)
	(unit-type-count trebuchet-set == 0)
	(unit-type-count cannon-galleon-line == 0)
	(not	(goal target-system raid))
	(players-military-population focus-player < 30)
	(goal target-system-rewriting NO)
=>
	(set-goal target-system raid)
	(set-goal target-system-rewriting YES)
)

(defrule
	(goal gl-strategy eew-strategy)
	(goal SLING 1)
	(goal gl-eagles heavy-eagles)
	(unit-type-count battering-ram-line == 0)
	(unit-type-count trebuchet-set == 0)
	(unit-type-count cannon-galleon-line == 0)
	(not	(goal target-system aggressive-raid))
	(goal target-system-rewriting NO)
=>
	(set-goal target-system aggressive-raid)
	(set-goal target-system-rewriting YES)
)

(defrule
	(enemy-captured-relics)
	(goal target-system siege)
=>
	(up-set-defense-priority c: monastery c: 25000)
	(up-set-offense-priority c: monastery c: 11)
	(disable-self)
)

(defrule
	(up-compare-goal target-system-rewriting != YES)
=>
	(up-jump-rule 10)
)

(defrule
	(goal target-system normal)
	(goal target-system-rewriting YES)
=>
	(up-set-offense-priority c: town-center c: 2)
	(up-set-offense-priority c: castle c: 2)
	(up-set-offense-priority c: watch-tower c: 2)
	(up-set-offense-priority c: house c: 1)
	(up-set-offense-priority c: bombard-tower c: 2)
	(up-set-offense-priority c: lumber-camp c: 11)
	(up-set-offense-priority c: mining-camp c: 11)
	(up-set-offense-priority c: barracks c: 10)
	(up-set-offense-priority c: mill c: 2)
	(up-set-offense-priority c: stable c: 9)
	(up-set-offense-priority c: archery-range c: 9)
	(up-set-offense-priority c: monastery c: 9)
	(up-set-offense-priority c: siege-workshop c: 9)
)

(defrule
	(goal target-system normal)
	(goal target-system-rewriting YES)
=>
	(up-set-defense-priority c: town-center c: 500)
	(up-set-defense-priority c: castle c: 500)
	(up-set-defense-priority c: watch-tower c: 500)
	(up-set-defense-priority c: house c: 5)
	(up-set-defense-priority c: bombard-tower c: 500)
	(up-set-defense-priority c: lumber-camp c: 11000)
	(up-set-defense-priority c: mining-camp c: 11000)
	(up-set-defense-priority c: barracks c: 10000)
	(up-set-defense-priority c: mill c: 500)
	(up-set-defense-priority c: stable c: 9000)
	(up-set-defense-priority c: archery-range c: 9000)
	(up-set-defense-priority c: monastery c: 9000)
	(up-set-defense-priority c: siege-workshop c: 9000)
	(set-goal target-system-rewriting NO)
)

(defrule
	(goal target-system siege)
	(goal target-system-rewriting YES)
=>
	(up-set-offense-priority c: town-center c: 10)
	(up-set-offense-priority c: castle c: 11)
	(up-set-offense-priority c: watch-tower c: 10)
	(up-set-offense-priority c: house c: 1)
	(up-set-offense-priority c: bombard-tower c: 11)
	(up-set-offense-priority c: lumber-camp c: 3)
	(up-set-offense-priority c: mining-camp c: 3)
	(up-set-offense-priority c: barracks c: 4)
	(up-set-offense-priority c: mill c: 2)
	(up-set-offense-priority c: stable c: 4)
	(up-set-offense-priority c: archery-range c: 4)
	(up-set-offense-priority c: monastery c: 4)
	(up-set-offense-priority c: siege-workshop c: 4)
)

(defrule
	(goal target-system siege)
	(goal target-system-rewriting YES)
=>
	(up-set-defense-priority c: town-center c: 12000)
	(up-set-defense-priority c: castle c: 15000)
	(up-set-defense-priority c: watch-tower c: 12000)
	(up-set-defense-priority c: house c: 5)
	(up-set-defense-priority c: bombard-tower c: 15000)
	(up-set-defense-priority c: lumber-camp c: 1000)
	(up-set-defense-priority c: mining-camp c: 1000)
	(up-set-defense-priority c: barracks c: 4000)
	(up-set-defense-priority c: mill c: 500)
	(up-set-defense-priority c: stable c: 4000)
	(up-set-defense-priority c: archery-range c: 4000)
	(up-set-defense-priority c: monastery c: 4000)
	(up-set-defense-priority c: siege-workshop c: 4000)
	(set-goal target-system-rewriting NO)
)

(defrule
	(goal target-system rush)
	(goal target-system-rewriting YES)
=>
	(up-set-offense-priority c: town-center c: 2)
	(up-set-offense-priority c: castle c: 2)
	(up-set-offense-priority c: watch-tower c: 2)
	(up-set-offense-priority c: house c: 1)
	(up-set-offense-priority c: bombard-tower c: 2)
	(up-set-offense-priority c: lumber-camp c: 11)
	(up-set-offense-priority c: mining-camp c: 11)
	(up-set-offense-priority c: barracks c: 10)
	(up-set-offense-priority c: mill c: 10)
	(up-set-offense-priority c: stable c: 9)
	(up-set-offense-priority c: archery-range c: 9)
	(up-set-offense-priority c: monastery c: 9)
	(up-set-offense-priority c: siege-workshop c: 9)
)

(defrule
	(goal target-system rush)
	(goal target-system-rewriting YES)
=>
	(up-set-defense-priority c: town-center c: 500)
	(up-set-defense-priority c: castle c: 500)
	(up-set-defense-priority c: watch-tower c: 500)
	(up-set-defense-priority c: house c: 5)
	(up-set-defense-priority c: bombard-tower c: 500)
	(up-set-defense-priority c: lumber-camp c: 11000)
	(up-set-defense-priority c: mining-camp c: 11000)
	(up-set-defense-priority c: barracks c: 10000)
	(up-set-defense-priority c: mill c: 10000)
	(up-set-defense-priority c: stable c: 9000)
	(up-set-defense-priority c: archery-range c: 9000)
	(up-set-defense-priority c: monastery c: 9000)
	(up-set-defense-priority c: siege-workshop c: 9000)
	(set-goal target-system-rewriting NO)
)

; ...

(defrule
	(goal target-system raid)
	(goal target-system-rewriting YES)
=>
	(up-set-offense-priority c: town-center c: -1)
	(up-set-offense-priority c: castle c: -1)
	(up-set-offense-priority c: watch-tower c: -1)
	(up-set-offense-priority c: house c: -1)
	(up-set-offense-priority c: bombard-tower c: -1)
	(up-set-offense-priority c: lumber-camp c: 11)
	(up-set-offense-priority c: mining-camp c: 11)
	(up-set-offense-priority c: barracks c: -1)
	(up-set-offense-priority c: mill c: -1)
	(up-set-offense-priority c: stable c: -1)
	(up-set-offense-priority c: archery-range c: -1)
	(up-set-offense-priority c: monastery c: -1)
	(up-set-offense-priority c: siege-workshop c: -1)
)

(defrule
	(goal target-system raid)
	(goal target-system-rewriting YES)
=>
	(up-set-defense-priority c: town-center c: -1)
	(up-set-defense-priority c: castle c: -1)
	(up-set-defense-priority c: watch-tower c: -1)
	(up-set-defense-priority c: house c: -1)
	(up-set-defense-priority c: bombard-tower c: -1)
	(up-set-defense-priority c: lumber-camp c: 10000)
	(up-set-defense-priority c: mining-camp c: 10000)
	(up-set-defense-priority c: barracks c: -1)
	(up-set-defense-priority c: mill c: -1)
	(up-set-defense-priority c: stable c: -1)
	(up-set-defense-priority c: archery-range c: -1)
	(up-set-defense-priority c: monastery c: -1)
	(up-set-defense-priority c: siege-workshop c: -1)
	(set-goal target-system-rewriting NO)
)

; ...

(defrule
	(goal target-system aggressive-raid)
	(goal target-system-rewriting YES)
=>
	(up-set-offense-priority c: town-center c: 11)
	(up-set-offense-priority c: castle c: -1)
	(up-set-offense-priority c: watch-tower c: -1)
	(up-set-offense-priority c: house c: -1)
	(up-set-offense-priority c: bombard-tower c: -1)
	(up-set-offense-priority c: lumber-camp c: 11)
	(up-set-offense-priority c: mining-camp c: 11)
	(up-set-offense-priority c: barracks c: -1)
	(up-set-offense-priority c: mill c: 10)
	(up-set-offense-priority c: stable c: -1)
	(up-set-offense-priority c: archery-range c: -1)
	(up-set-offense-priority c: monastery c: -1)
	(up-set-offense-priority c: siege-workshop c: -1)
)

(defrule
	(goal target-system aggressive-raid)
	(goal target-system-rewriting YES)
=>
	(up-set-defense-priority c: town-center c: 10000)
	(up-set-defense-priority c: castle c: -1)
	(up-set-defense-priority c: watch-tower c: -1)
	(up-set-defense-priority c: house c: -1)
	(up-set-defense-priority c: bombard-tower c: -1)
	(up-set-defense-priority c: lumber-camp c: 10000)
	(up-set-defense-priority c: mining-camp c: 10000)
	(up-set-defense-priority c: barracks c: -1)
	(up-set-defense-priority c: mill c: 10000)
	(up-set-defense-priority c: stable c: -1)
	(up-set-defense-priority c: archery-range c: -1)
	(up-set-defense-priority c: monastery c: -1)
	(up-set-defense-priority c: siege-workshop c: -1)
	(set-goal target-system-rewriting NO)
)

(defrule
	(up-compare-goal reset-unit-targeting != YES)
=>
	(up-jump-rule 3)
)

(defrule
	(goal reset-unit-targeting YES)
=>
	(up-set-offense-priority c: war-elephant c: 11)
	(up-set-offense-priority c: knight c: 10)
	(up-set-offense-priority c: cataphract c: 10)
	(up-set-offense-priority c: tarkan c: 10)
	(up-set-offense-priority c: teutonic-knight c: 10)
	(up-set-offense-priority c: war-wagon c: 10)
	(up-set-offense-priority c: mangudai c: 7)
	(up-set-offense-priority c: janissary c: 9)
	(up-set-offense-priority c: conquistador c: 9)
	(up-set-offense-priority c: mameluke c: 10)
	(up-set-offense-priority c: huskarl c: 10)
	(up-set-offense-priority c: hand-cannoneer c: 9)
)

(defrule
	(goal reset-unit-targeting YES)
=>
	(up-set-offense-priority c: militiaman c: 8)
	(up-set-offense-priority c: jaguar-man c: 8)
	(up-set-offense-priority c: throwing-axeman c: 8)
	(up-set-offense-priority c: woad-raider c: 8)
	(up-set-offense-priority c: berserk c: 8)
	(up-set-offense-priority c: samurai c: 8)
	(up-set-offense-priority c: cavalry-archer c: 6)
	(up-set-offense-priority c: camel c: 9)
	(up-set-offense-priority c: monk c: 9)
	(up-set-offense-priority c: transport-ship c: 11)
	(up-set-offense-priority c: fire-ship c: 10)
	(up-set-offense-priority c: galley c: 8)
	(up-set-offense-priority c: turtle-ship c: 11)
	(up-set-offense-priority c: fishing-ship c: 8)
)

(defrule
	(goal reset-unit-targeting YES)
=>
	(up-set-offense-priority c: archer c: 5)
	(up-set-offense-priority c: longbowman c: 5)
	(up-set-offense-priority c: chu-ko-nu c: 5)
	(up-set-offense-priority c: plumed-archer c: 6)
	(up-set-offense-priority c: scout-cavalry c: 9)
	(up-set-offense-priority c: eagle-warrior c: 9)
	(up-set-offense-priority c: spearman c: 9)
	(up-set-offense-priority c: skirmisher c: -1)
	(up-set-offense-priority c: villager c: 5)
	(set-goal reset-unit-targeting NO)
)

(defrule
	(unit-type-count-total galley-line > 11)
=>
	(up-set-offense-priority c: demolition-ship c: 11)
	(disable-self)
)

(defrule
	(game-time > 3000)
	(players-unit-type-count any-enemy trade-cart > 6)
	(up-compare-goal target-system >= aggressive-raid)
=>
	(up-set-defense-priority c: market c: 10000)
	(up-set-offense-priority c: market c: 10)
	(up-set-offense-priority c: trade-cart c: 10)
	(disable-self)
)

#load-if-not-defined DEATH-MATCH

#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
#load-if-not-defined DIFFICULTY-MODERATE
(defrule
	(true)
=>
	(set-strategic-number sn-enable-training-queue 1)
	(disable-self)
)
#load-if-not-defined UP-MICHI-STYLE
#load-if-not-defined WONDER-RACE

(defrule
	(current-age > feudal-age)
	(up-compare-goal gl-current-age > gv-feudal-up)
=>
	(up-jump-rule 11)
)

(defrule
	(up-compare-goal gl-DRUSH != YES)
	(up-compare-goal gl-strategy-type != FC2)
	(up-compare-goal gl-my-villager-count-total > 25)
	(or	(and	(goal gl-strategy default)
			(goal gl-feudal-infantry 0))
		(and	(goal gl-strategy castle-drop)
			(up-compare-goal gl-my-villager-count-total > 30)))
=>
	(set-strategic-number sn-enable-training-queue 0)
	(disable-self)
)

(defrule
	(up-compare-goal gl-DRUSH != YES)
	(up-compare-goal gl-my-villager-count-total > 24)
	(goal gl-strategy scrush)
	(or	(goal gl-boar-eaten YES)
		(up-compare-goal gl-my-villager-count-total > 27))
=>
	(set-strategic-number sn-enable-training-queue 0)
	(disable-self)
)

(defrule
	(up-compare-goal gl-DRUSH != YES)
	(up-compare-goal gl-strategy-type != FC2)
	(up-compare-goal gl-my-villager-count-total > 27)
	(or	(goal gl-strategy eagle-rush)
		(up-compare-goal gl-my-villager-count-total > 29))
	(or	(goal gl-strategy heavy-krush)
		(or	(goal gl-strategy eagle-rush)
			(goal gl-strategy monk-scorpion-rush)))
	(not	(player-valid 3))
	(food-amount < 500)
=>
	(set-strategic-number sn-enable-training-queue 0)
	(disable-self)
)

(defrule
	(up-compare-goal gl-my-villager-count-total > 17)
	(or	(and	(goal gl-DRUSH YES)
			(building-type-count-total barracks > 0))
		(or	(and	(up-compare-goal gl-my-villager-count-total > 26)
				(goal gl-strategy wall-boom))
			(and	(up-compare-goal gl-my-villager-count-total > min-kboom-cpush-villagers)
				(goal gl-strategy castle-push))))
=>
	(set-strategic-number sn-enable-training-queue 0)
	(disable-self)
)

(defrule
	(or	(and	(goal gl-current-age gv-dark)
			(and	(goal gl-DRUSH YES)
				(and	(building-type-count-total barracks > 0)
					(unit-type-count-total militiaman-line > 2))))
		(and	(goal gl-strategy sling)
			(and	(research-completed ri-wheel-barrow)
				(current-age-time > 15))))
=>
	(set-strategic-number sn-enable-training-queue 1)
	(disable-self)
)

(defrule
	(up-compare-goal gl-my-villager-count-total > 27)
	(or	(goal gl-strategy-type controlled-flush)
		(and	(up-compare-goal gl-my-villager-count-total > 28)
			(or	(goal gl-strategy basic-flush)
				(or	(goal gl-strategy watermap-fc)
					(or	(goal gl-strategy war-galley-rush)
						(or	(goal gl-strategy fire-ship-rush)
							(goal gl-strategy turtle-rush)))))))
=>
	(set-strategic-number sn-enable-training-queue 0)
	(disable-self)
)

(defrule
	(up-compare-goal gl-strategy != fi-monk-rush)
	(up-compare-goal gl-strategy != sling)
	(up-compare-goal gl-strategy-type != FC2)
	(up-compare-goal gl-my-villager-count-total > 28)
	(or	(up-compare-goal gl-strategy != flush)
		(up-compare-goal gl-my-villager-count-total > 30))
	(nand	(up-compare-goal gl-my-villager-count-total < 31)
		(goal gl-strategy-class basic-class))
	(food-amount < 500)
=>
	(set-strategic-number sn-enable-training-queue 0)
	(disable-self)
)

(defrule
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count-total < 24)
	(starting-resources == low-resources)
	(or	(not	(research-available ri-loom))
		(and	(goal gl-loomless-boar-hunting YES)
			(unit-type-count villager-hunter > 0)))
=>
	(set-strategic-number sn-enable-training-queue 1)
	(disable-self)
)
#end-if
(defrule
	(up-compare-goal gl-loomless-boar-hunting != YES)
	(up-compare-goal gl-my-villager-count-total g:>= gl-villagers-to-start-boar-hunt)
	(research-available ri-loom)
	(gold-amount >= 50)
	(or	(cc-players-unit-type-count 0 wild-boar > 0)
		(cc-players-unit-type-count 0 javelina > 0))
	(strategic-number sn-enable-training-queue != 0)
=>
	(set-strategic-number sn-enable-training-queue 0)
)

(defrule
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count-total < 24)
	(starting-resources == low-resources)
	(not	(research-available ri-loom))
=>
	(set-strategic-number sn-enable-training-queue 1)
	(disable-self)
)

(defrule
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count-total < 25)
	(goal gl-loomless-boar-hunting YES)
	(up-compare-goal gl-uncommon-settings != YES)
	(starting-resources == low-resources)
	(strategic-number sn-enable-training-queue == 0)
=>
	(set-strategic-number sn-enable-training-queue 1)
)

(defrule
	(up-compare-goal gl-current-age >= gv-dark-up)
	(strategic-number sn-enable-training-queue == 1)
	(nand	(goal gl-strategy sling)
		(up-research-status c: ri-wheel-barrow >= research-pending))
	(nand	(civ-selected aztec)
		(and	(goal gl-strategy eagle-monk-rush)
			(up-compare-goal gl-current-age <= gv-feudal)))
	(up-compare-goal SLING != 5)
=>
	(set-strategic-number sn-enable-training-queue 0)
)
#end-if
#end-if
#end-if
#end-if

#end-if

(defrule
	(game-time > 10)
	(game-time < 1600)
	(up-compare-goal gl-anti-trush != YES)
	(or	(research-completed ri-hand-cart)
		(or	(players-unit-type-count focus-player cavalry-archer-line > 2)
			(or	(up-enemy-units-in-town > 10)
				(or	(game-time > 1500)
					(players-military-population any-computer-enemy > 10)))))
	(strategic-number sn-allow-civilian-defense != civilian-defense-value)
=>
	(set-strategic-number sn-allow-civilian-defense civilian-defense-value)
)

(defrule
	(current-age > feudal-age)
	(up-compare-goal gl-current-age > gv-feudal-up)
	(game-time > 1000)
=>
	(up-jump-rule 10)
)

(defrule
	(goal gl-current-age gv-dark-up)
	(not	(death-match-game))
=>
	(enable-timer 6 75)
	(set-strategic-number sn-placement-fail-delta 1)
	(disable-self)
)

(defrule
	(or	(goal gl-current-age gv-dark-up)
		(goal gl-current-age gv-feudal))
	(building-type-count-total barracks < 1)
	(timer-triggered 6)
=>
	(up-assign-builders c: barracks c: 3)
	(disable-self)
)

(defrule
	(or	(building-available archery-range)
		(building-type-count-total market > 0))
	(current-age >= feudal-age)
=>
	(up-assign-builders c: barracks c: 1)
	(disable-self)
)

(defrule
	(up-compare-goal gl-strategy-type >= FC)
	(current-age == feudal-age)
	(current-age-time > 20)
	(building-type-count-total blacksmith < 1)
=>
	(up-assign-builders c: blacksmith c: 2)
	(disable-self)
)

(defrule
	(up-compare-goal gl-strategy-type >= FC)
	(current-age == feudal-age)
	(current-age-time > 30)
	(building-type-count-total blacksmith < 1)
=>
	(up-assign-builders c: blacksmith c: 3)
	(disable-self)
)

(defrule
	(or	(up-compare-goal gl-current-age >= gv-feudal-up)
		(and	(current-age == feudal-age)
			(and	(current-age-time > 30)
				(goal gl-nothing-style-map YES))))
=>
	(up-assign-builders c: blacksmith c: 1)
	(disable-self)
)

(defrule
	(true)
=>
	(set-strategic-number sn-maximum-fish-boat-drop-distance 20)
	(set-goal gl-castle-placed NO)
	(up-set-offense-priority c: unbuilt-town-center c: 11)
	(up-set-defense-priority c: unbuilt-town-center c: 10000); Always target TCs being built with high priority
	(set-goal gl-siege-workshop-placed NO)
	(set-goal gl-town-center-placed NO)
	(set-goal gl-barracks-placed NO)
	(set-goal gl-controlled-forward-castle NO)
	(set-goal substitute-timer1 0)
	(set-goal substitute-timer2 0)
	(set-strategic-number sn-object-repair-level 20483)
	(set-strategic-number sn-allow-civilian-defense 3)
	(up-get-fact player-number 0 gl-my-player-number)
	(set-goal gl-sling-towers-on-mining-camps 0)
	(disable-self)
)

(defrule
	(game-time > 540)
=>
	(set-strategic-number sn-maximum-fish-boat-drop-distance 27)
	(disable-self)
)

(defrule
	(game-time < 1000)
	(or	(cc-players-unit-type-count 0 deep-fish < 4)
		(and	(unit-type-count fishing-ship > 1)
			(or	(map-type custom)
				(up-gaia-type-count-total c: deep-fish < 1))))
	(strategic-number sn-maximum-fish-boat-drop-distance < 200)
	(strategic-number sn-maximum-fish-boat-drop-distance >= 0)
=>
	(set-strategic-number sn-maximum-fish-boat-drop-distance 200)
)

(defrule
	(game-time > 900)
	(strategic-number sn-maximum-fish-boat-drop-distance != -1)
=>
	(set-strategic-number sn-maximum-fish-boat-drop-distance -1)
)

(defrule
	(goal gl-strategy castle-drop)
	(game-time > 120)
	(building-type-count-total castle < 2)
	(strategic-number sn-percent-building-cancellation > 20)
	(not	(player-in-game any-human-enemy))
=>
	(set-strategic-number sn-percent-building-cancellation 10)
)

(defrule
	(building-type-count-total castle > 1)
=>
	(set-strategic-number sn-percent-building-cancellation 20)
	(disable-self)
)

(defrule
	(or	(and	(game-time > 2700)
			(strategic-number sn-minimum-water-body-size-for-dock >= 1999))
		(game-time > 4800))
=>
	(set-strategic-number sn-dropsite-separation-distance 10)
	(disable-self)
)

(defrule
	(building-type-count-total mining-camp > 16)
	(strategic-number sn-dropsite-separation-distance < 15)
=>
	(set-strategic-number sn-dropsite-separation-distance 15)
)

(defrule
	(game-time > 3600)
	(dropsite-min-distance gold == -1)
	(dropsite-min-distance stone == -1)
	(dropsite-min-distance wood == -1)
=>
	(set-strategic-number sn-dropsite-separation-distance 50)
	(disable-self)
)

#load-if-defined SPANISH-CIV
(defrule
	(up-compare-goal gl-strategy != spanish-vill-rush)
	(research-completed my-unique-research)
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(or	(strategic-number sn-allow-civilian-defense < 3)
		(strategic-number sn-allow-civilian-offense > 0))
=>
	(set-strategic-number sn-allow-civilian-offense 0)
	(set-strategic-number sn-allow-civilian-defense 3)
	(set-strategic-number sn-number-civilian-militia 0)
)
#end-if

(defrule
	(goal MILITARY 1)
	(or	(dropsite-min-distance wood == -1)
		(dropsite-min-distance wood == 255))
	(strategic-number sn-minimum-water-body-size-for-dock == 2002)
=>
	(up-modify-goal temporary-goal g:= gl-my-villager-count)
	(up-get-fact building-type-count farm gl-my-farm-count)
	(up-modify-goal temporary-goal c:- 30)
	(up-modify-goal temporary-goal g:- gl-my-farm-count)
)

(defrule
	(up-compare-goal gl-my-villager-count < 0)
	(strategic-number sn-minimum-water-body-size-for-dock == 2002)
=>
	(set-goal gl-my-villager-count 0)
)

(defrule
	(up-compare-goal MILITARY != 1)
	(strategic-number sn-minimum-water-body-size-for-dock == 2002)
	(strategic-number sn-number-civilian-militia != 0)
=>
	(set-strategic-number sn-allow-civilian-offense 0)
	(set-strategic-number sn-allow-civilian-defense 3)
	(set-strategic-number sn-number-civilian-militia 0)
)

(defrule
	(goal MILITARY 1)
	(strategic-number sn-minimum-water-body-size-for-dock == 2002)
	(or	(dropsite-min-distance wood == -1)
		(dropsite-min-distance wood == 255))
	(or	(strategic-number sn-allow-civilian-offense != 2)
		(strategic-number sn-number-civilian-militia g:!= temporary-goal))
=>
	(set-strategic-number sn-allow-civilian-offense 2)
	(set-strategic-number sn-allow-civilian-defense 3)
	(up-modify-sn sn-number-civilian-militia g:= temporary-goal)
)

; =========== OPTIMIZING VILLAGERS

(defrule
	(strategic-number sn-town-center-start != 0)
	(current-age > feudal-age)
	(up-compare-goal gl-current-age > gv-feudal-up)
=>
	(up-jump-rule 13)
)

(defrule
	(strategic-number sn-town-center-start == 0)
	(strategic-number sn-nomad-style-start == 1)
	(wood-amount > 259)
	(wood-amount < 275)
=>
	(up-drop-resources wood c: 5)
)

(defrule
	(strategic-number sn-town-center-start == 0)
	(strategic-number sn-nomad-style-start == 1)
	(building-type-count-total town-center > 0)
	(wood-amount > 23)
	(wood-amount < 30)
=>
	(up-drop-resources wood c: 6)
)

(defrule
	(strategic-number sn-town-center-start == 1)
	(unit-type-count villager-wood > 0)
	(or	(dropsite-min-distance food < 4)
		(resource-found food))
	(strategic-number sn-food-gatherer-percentage == 100)
=>
	(up-retask-gatherers wood c: 1)
)

(defrule
	(up-compare-goal gl-current-age <= gv-feudal)
	(up-pending-objects c: villager == 2)
=>
	(enable-timer 2 22)
)

(defrule
	(goal gl-current-age gv-dark)
	(up-pending-objects c: villager < 2)
	(timer-triggered 2)
	(up-timer-status 6 != timer-running)
	(food-amount < 50)
	(not	(goal gl-nothing-style-map YES))
=>
	(up-drop-resources food c: 5)
	(enable-timer 6 7)
)

(defrule
	(current-age == dark-age)
	(food-amount > 36)
	(food-amount < 50)
	(timer-triggered 2)
	(building-type-count town-center > 0)
	(not	(goal gl-nothing-style-map YES))
=>
	(up-drop-resources farm-food c: 2)
	(up-drop-resources forage-food c: 2)
	(up-drop-resources sheep-food c: 2)
)

(defrule
	(current-age == dark-age)
	(food-amount > 36)
	(food-amount < 50)
	(strategic-number sn-enable-boar-hunting == 2)
	(timer-triggered 2)
	(dropsite-min-distance hunting < 8)
	(building-type-count town-center > 0)
	(not	(goal gl-nothing-style-map YES))
=>
	(up-drop-resources food c: 2)
)

(defrule
	(current-age == feudal-age)
	(up-timer-status 6 != timer-running)
	(food-amount < 50)
	(timer-triggered 2)
	(building-type-count town-center > 0)
=>
	(up-drop-resources farm-food c: 5)
	(up-drop-resources forage-food c: 5)
	(up-drop-resources deer-food c: 20)
	(up-drop-resources boar-food c: 10)
	(enable-timer 6 10)
)

(defrule
	(current-age == dark-age)
	(goal gl-boar-stealing -1)
	(unit-type-count villager-forager > 4)
	(or	(idle-farm-count > 0)
		(and	(unit-type-count villager-hunter < 5)
			(unit-type-count villager-hunter > 0)))
=>
	(up-retask-gatherers villager-forager c: 1)
)

(defrule
	(strategic-number sn-town-center-start == 1)
	(unit-type-count villager-wood > 0)
	(dropsite-min-distance food < 4)
	(dropsite-min-distance food >= 0)
	(strategic-number sn-food-gatherer-percentage == 100)
=>
	(up-drop-resources wood c: 1)
	(up-retask-gatherers wood c: 6)
)

(defrule
	(goal gl-current-age gv-feudal)
	(up-compare-goal gl-strategy != default)
	(up-timer-status 6 != timer-running)
	(food-amount < 800)
	(food-amount > 730)
	(or	(current-age-time > 72)
		(goal gl-FC-type 2-villagers))
	(current-age-time > 47)
	(building-type-count town-center > 0)
=>
	(up-drop-resources farm-food c: 4)
	(up-drop-resources forage-food c: 4)
)

(defrule
	(goal gl-current-age gv-feudal)
	(up-compare-goal gl-strategy != default)
	(up-timer-status 6 != timer-running)
	(food-amount < 800)
	(food-amount > 730)
	(or	(current-age-time > 72)
		(goal gl-FC-type 2-villagers))
	(current-age-time > 47)
	(dropsite-min-distance hunting < 6)
	(dropsite-min-distance hunting >= 0)
	(building-type-count town-center > 0)
=>
	(up-drop-resources boar-food c: 4)
	(up-drop-resources deer-food c: 4)
)

(defrule
	(goal gl-current-age gv-feudal)
	(up-compare-goal gl-strategy != default)
	(up-timer-status 6 != timer-running)
	(food-amount < 800)
	(or	(current-age-time > 72)
		(goal gl-FC-type 2-villagers))
	(current-age-time > 47)
=>
	(up-drop-resources farm-food c: 5)
	(up-drop-resources forage-food c: 5)
	(up-drop-resources deer-food c: 15)
	(up-drop-resources boar-food c: 10)
	(enable-timer 6 10)
	(disable-self)
)

(defrule
	(up-compare-const gv-aofe-game == 1)
	(up-compare-goal threat-time > 20000)
	(unit-type-count monastery-class > 4)
	(can-research ri-fervor)
=>
	(research ri-fervor)
)

; ============== SOME BUILDINGS

#load-if-defined TINY-MAP
(defrule
	(goal gl-strategy CA-rush)
	(goal MILITARY 1)
	(game-time < 2400)
	(military-population > 30)
	(or	(players-military-population focus-player < 11)
		(military-population > 48))
	(players-military-population focus-player < 20)
	(goal RAM 1)
	(building-type-count-total siege-workshop < 1)
	(can-build siege-workshop)
=>
	(up-build place-forward 0 c: siege-workshop)
)
#end-if

(defrule
	(game-time > 1300)
	(or	(and	(goal gl-current-age gv-feudal)
			(and	(game-time > 1740)
				(food-amount > 600)))
		(and	(unit-type-count villager-gold == 0)
			(players-building-type-count target-player watch-tower > 3)))
	(gold-amount < 200)
	(unit-type-count villager-gold < 5)
	(building-type-count-total market < 1)
	(can-build market)
=>
	(set-strategic-number sn-maximum-town-size 20)
	(build market)
)

(defrule
	(up-attacker-class != wolf-class)
	(strategic-number sn-stone-gatherer-percentage <= 8)
	(up-compare-goal gl-current-age >= gv-feudal)
	(or	(unit-type-count-total dead-miner1 > 0)
		(unit-type-count-total dead-miner2 > 0))
	(building-type-count-total mining-camp < 3)
	(game-time < 1600)
	(can-build mining-camp)
=>
	(set-strategic-number sn-dropsite-separation-distance 10)
	(set-strategic-number sn-stone-dropsite-distance 50)
	(set-strategic-number sn-camp-max-distance 37)
	(build mining-camp)
	(chat-to-player my-player-number "Trying to build a safer mining camp!")
)

(defrule
	(up-attacker-class != wolf-class)
	(strategic-number sn-stone-gatherer-percentage > 8)
	(up-compare-goal gl-current-age >= gv-feudal)
	(or	(unit-type-count-total dead-miner1 > 0)
		(unit-type-count-total dead-miner2 > 0))
	(building-type-count-total mining-camp > 0)
	(building-type-count-total mining-camp < 4)
	(game-time < 1600)
	(can-build mining-camp)
=>
	(set-strategic-number sn-dropsite-separation-distance 10)
	(set-strategic-number sn-camp-max-distance 37)
	(build mining-camp)
	(chat-to-player my-player-number "Trying to build a safer mining camp!")
)

(defrule
	(or	(population-headroom < 5)
		(or	(and	(building-type-count-total house >= 8)
				(and	(or	(building-type-count-total town-center < 2)
						(up-compare-goal gl-current-age >= gv-castle-up))
					(or	(goal gl-strategy wonder-race-blocked-vills)
						(goal gl-strategy wonder-race-fi))))
			(and	(death-match-game)
				(game-time < 120))))
=>
	(up-jump-rule 10)
)

(defrule
	(or	(and	(building-type-count-total town-center == 0)
			(goal gl-outward-bound-style 1))
		(and	(game-time < 30)
			(unit-type-count transport-ship > 0)))
=>
	(up-jump-rule 9)
)


(defrule
	(strategic-number sn-town-center-start == 1)
	(up-pending-objects c: house < 1)
	(building-type-count-total town-center > 0)
	(population-headroom > 3)
	(housing-headroom < 5)
	(building-type-count-total barracks > 0)
	(up-compare-goal gl-my-villager-count-total > 22)
	(goal gl-DRUSH YES)
	(can-build house)
=>
	(build house)
)

(defrule
	(up-pending-objects c: house < 1)
	(building-type-count-total town-center > 0)
	(or	(and	(up-compare-goal gl-strategy-type >= FC)
			(and	(current-age == feudal-age)
				(housing-headroom < 5)))
		(and	(goal gl-strategy monk-scorpion-boom)
			(building-type-count-total town-center > 3)))
	(housing-headroom < 20)
	(population-headroom > 4)
	(can-build house)
=>
	(build house)
)

(defrule
	(or	(up-pending-objects c: house < 1)
		(game-time > 1100))
	(up-compare-goal gl-strategy != scrush)
	(up-pending-objects c: house < 2)
	(building-type-count-total town-center > 0)
	(up-compare-goal gl-strategy-type <= controlled-flush)
	(current-age == feudal-age)
	(up-compare-goal gl-current-age > gv-dark-up)
	(population-headroom > 4)
	(or	(housing-headroom < 15)
		(game-time > 1600))
	(housing-headroom < 20)
	(can-build house)
=>
	(build house)
)

(defrule
	(up-pending-objects c: house < 2)
	(building-type-count-total town-center > 0)
	(current-age >= castle-age)
	(up-compare-goal gl-current-age > gv-dark-up)
	(population-headroom > 4)
	(or	(and	(housing-headroom < 10)
			(not	(goal gl-strategy-type default)))
		(and	(goal gl-strategy castle-sling)
			(building-type-count-total town-center > 3)))
	(housing-headroom < 20)
	(can-build house)
=>
	(build house)
)

(defrule
	(up-compare-goal gl-current-age > gv-dark-up)
	(up-pending-objects c: house < 3)
	(building-type-count-total town-center > 0)
	(or	(goal gl-strategy-type default)
		(up-compare-goal gl-current-age >= gv-castle-up))
	(current-age >= castle-age)
	(population-headroom > 4)
	(housing-headroom < 17)
	(can-build house)
=>
	(build house)
)

(defrule
	(up-compare-goal gl-current-age > gv-dark-up)
	(or	(and	(goal gl-strategy eagle-rush)
			(building-type-count-total barracks > 3))
		(and	(goal gl-strategy xbow-rush)
			(building-type-count-total archery-range > 3)))
	(up-pending-objects c: house < 3)
	(building-type-count-total town-center > 0)
	(current-age >= castle-age)
	(population-headroom > 4)
	(housing-headroom < 21)
	(can-build house)
=>
	(build house)
)

(defrule
	(game-time > 1800)
	(up-pending-objects c: house < 3)
	(building-type-count-total town-center > 0)
	(or	(and	(goal gl-strategy-type default)
			(building-type-count-total town-center > 2))
		(up-compare-goal gl-current-age >= gv-castle-up))
	(current-age >= castle-age)
	(population-headroom > 4)
	(housing-headroom < 25)
	(can-build house)
=>
	(build house)
)

(defrule
	(up-pending-objects c: house < 1)
	(current-age <= feudal-age)
	(game-time > 180)
	(or	(building-type-count-total town-center > 1); DoubleArabia etc.
		(or	(building-type-count-total dock > 1)
			(and	(housing-headroom < 5)
				(building-type-count-total dock > 0))))
	(population-headroom > 4)
	(housing-headroom < 8)
	(can-build house)
=>
	(build house)
)

(defrule
	(up-pending-objects c: house < 3)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(up-compare-goal SLING != 0)
	(up-compare-goal gl-strategy != castle-sling)
	(or	(and	(housing-headroom < 16)
			(up-pending-objects c: house < 2))
		(game-time > 1300))
	(or	(housing-headroom < 21)
		(wood-amount > 500))
	(housing-headroom < 26)
	(population-headroom > 4)
	(can-build house)
=>
	(build house)
)

#load-if-not-defined UP-2-PLAYER-TEAM
#load-if-defined UP-POCKET-POSITION
(defrule
	(up-compare-goal gl-disable-market-placing != YES)
	(or	(game-time > extra-market-time); 3000 normally, 1800 in michi
		(population > 180))
	(game-time > 1500)
	(population > extra-market-pop); 170 normally, 130 in michi
	(unit-type-count trade-cart > 0)
	(research-completed ri-cartography)
	(building-type-count-total market < 3)
	(players-building-type-count any-ally market > 0)
	(building-type-count town-center > 0)
	(can-build market)
=>
	(up-find-player ally find-closest gl-ally-player2)
	(up-modify-sn sn-focus-player-number g:= gl-ally-player2)
	(set-strategic-number sn-object-repair-level 20611)
)

(defrule
	(up-compare-goal gl-disable-market-placing != YES)
	(or	(game-time > extra-market-time)
		(population > 180))
	(game-time > 1500)
	(population > extra-market-pop)
	(unit-type-count trade-cart > 0)
	(research-completed ri-cartography)
	(building-type-count-total market < 3)
	(players-building-type-count focus-player town-center == 0)
	(players-building-type-count any-ally market > 0)
	(building-type-count town-center > 0)
	(can-build market)
=>
	(up-find-player ally find-closest gl-ally-player2)
	(up-find-next-player ally find-closest gl-ally-player2)
	(up-modify-sn sn-focus-player-number g:= gl-ally-player2)
)

(defrule
	(up-compare-goal gl-disable-market-placing != YES)
	(or	(game-time > extra-market-time)
		(population > 180))
	(population > extra-market-pop)
	(unit-type-count trade-cart > 0)
	(research-completed ri-cartography)
	(building-type-count-total market < 3)
	(players-building-type-count any-ally market > 0)
	(building-type-count town-center > 0)
	(can-build market)
=>
	(set-strategic-number sn-placement-to-center 1)
	(up-set-placement-data focus-player -1 c: -100)
	(up-build place-control 0 c: market)
	(set-strategic-number sn-placement-fail-delta -1)
	(up-modify-sn sn-focus-player-number g:= gl-target-player)
)
#else
(defrule
	(up-compare-goal gl-disable-market-placing != YES)
	(or	(game-time > extra-market-time)
		(population > 180))
	(population > extra-market-pop)
	(unit-type-count trade-cart > 0)
	(research-completed ri-cartography)
	(building-type-count-total market < 3)
	(players-building-type-count any-ally market > 0)
	(building-type-count town-center > 0)
	(can-build market)
=>
	(set-strategic-number sn-placement-to-center 1)
	(up-set-placement-data my-player-number -1 c: -100)
	(up-build place-control 0 c: market)
	(set-strategic-number sn-object-repair-level 20611)
	(set-strategic-number sn-placement-fail-delta -1)
)
#end-if
#else
(defrule
	(up-compare-goal gl-disable-market-placing != YES)
	(or	(game-time > extra-market-time)
		(population > 180))
	(population > extra-market-pop)
	(unit-type-count trade-cart > 0)
	(research-completed ri-cartography)
	(building-type-count-total market < 3)
	(players-building-type-count any-ally market > 0)
	(building-type-count town-center > 0)
	(can-build market)
=>
	(set-strategic-number sn-placement-to-center 1)
	(up-set-placement-data any-ally -1 c: -130)
	(up-build place-control 0 c: market)
	(set-strategic-number sn-object-repair-level 20611)
	(set-strategic-number sn-placement-fail-delta -1)
)
#end-if

(defrule
	(up-pending-objects c: market == 0)
	(strategic-number sn-placement-fail-delta == -1)
=>
	(set-strategic-number sn-placement-to-center 0)
	(set-strategic-number sn-placement-fail-delta 1)
)

; ================ STRATEGY SELECTION

(defrule
	(or	(and	(up-compare-goal gl-strategy-type != basic-flush); Non-basic flush strategy - overwrite flush parts
			(up-compare-goal gl-current-age <= gv-feudal))
		(up-compare-goal gl-current-age >= gv-feudal-up)); We have clicked up, no more flushing!
	(or	(up-compare-goal gl-feudal-archery != 0)
		(or	(up-compare-goal gl-feudal-infantry != 0)
			(up-compare-goal gl-feudal-trash != 0)))
=>
	(set-goal gl-feudal-archery 0)
	(set-goal gl-feudal-infantry 0)
	(set-goal gl-feudal-trash 0)
)

(defrule
	(not	(goal gl-strategy eew-strategy))
=>
	(set-goal gl-eew-strategy-type NONE)
)

(defrule
	(goal gl-strategy eew-strategy)
	(goal gl-eew-strategy-type NONE); Boom if no type determined
=>
	(set-goal gl-eew-strategy-type boom)
)

#load-if-not-defined POPULATION-CAP-175
#load-if-not-defined POPULATION-CAP-200
(defrule
	(game-time > 20)
	(population-cap < 70)
	(or	(up-compare-const gv-castle-age-end == 1)
		(up-compare-const gv-imperial-age-end == 1))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(up-compare-goal gl-strategy != castle-push)
	(nand	(or	(up-compare-goal gl-current-age >= gv-feudal-up)
			(goal gl-start-with-castle YES))
		(goal gl-strategy fi-monk-rush))
=>
	(set-goal gl-strategy castle-push)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC2)
)

(defrule
	(game-time > 40)
	(population-cap >= 70)
	(or	(up-compare-const gv-castle-age-end == 1)
		(up-compare-const gv-imperial-age-end == 1))
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(up-compare-goal gl-strategy != fi-monk-rush)
	(nor	(goal gl-strategy-class basic-class)
		(goal gl-strategy michi-boom))
=>
	(set-goal gl-strategy backup-strategy)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC2)
)
#end-if
#end-if

#load-if-defined FEUDAL-AGE-END
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(game-time > 40)
	(up-compare-goal gl-strategy != flush)
	(up-compare-goal gl-strategy != grush)
=>
	(set-goal gl-strategy flush)
	(set-goal gl-strategy-type basic-flush)
	(set-goal gl-feudal-infantry FLUSH-DEFENCE-MAA)
	(set-goal gl-feudal-archery FLUSH-DEFENCE-ARCHER)
	(set-goal gl-strategy-aggressiveness-level HIGH)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == 2001)
	(game-time > 40)
	(up-compare-goal gl-strategy != grush)
=>
	(set-goal gl-strategy grush)
	(set-goal gl-strategy-type controlled-flush)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal DOCK 11)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock <= 1999)
	(current-age == feudal-age)
	(game-time > 1300)
=>
	(set-goal gl-strategy flush)
	(set-goal gl-strategy-type basic-flush)
	(set-goal gl-feudal-infantry men-at-arms)
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-strategy-aggressiveness-level HIGH)
)
#end-if

(defrule
	(game-time > 1200)
=>
	(up-jump-rule 9)
)

(defrule
	(game-time > 30)
	(game-time < 40)
	(or	(goal gl-strategy eew-strategy)
		(or	(goal gl-strategy fi-monk-rush)
			(or	(goal gl-strategy turkish-fast-imp)
				(or	(goal gl-strategy mongol-boom)
					(goal gl-strategy-aggressiveness-level VERY-LOW)))))
	(up-compare-const gv-imperial-age-end == 0)
=>
	(set-goal gl-strategy regicide-strategy)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC)
	(disable-self)
)

(defrule
	(true)
=>
	(set-goal gl-feudal-archery 0)
	(set-goal gl-feudal-infantry 0)
	(set-goal gl-feudal-trash 0)
	(set-goal CASTLE 0)
	(set-goal gl-strategy default)
	(set-goal SLING 0)
	(set-goal TC 0)
	(set-goal DOCK 0)
	(set-goal gl-eagles 0)
	(set-goal gl-sling-towers-on-lumber-camps 0)
	(up-setup-cost-data 1 gl-available-food-amount)
	(disable-self)
)

(defrule
	(true)
=>
	(set-goal gl-advanced-archery 0)
	(set-goal gl-advanced-infantry 0)
	(set-goal gl-advanced-cavalry 0)
	(set-goal gl-advanced-trash 0)
	(disable-self)
)

(defrule
	(or	(game-time > 1200)
		(or	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
			(or	(game-time < 5)
				(death-match-game))))
=>
	(up-jump-rule 5)
)

(defrule
	(up-compare-goal gl-current-age >= gv-dark-up)
	(goal gl-feudal-trash YES)
	(current-age == dark-age)
	(or	(players-civ every-enemy gothic)
		(players-civ every-enemy japanese))
	(not	(player-valid 3))
=>
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-feudal-infantry 0)
	(set-goal gl-feudal-trash 0)
	(set-strategic-number sn-skip-first-mining-camp 0)
	(chat-to-player my-player-number "2No trash against goths or japs")
	(disable-self)
)

(defrule
	(up-compare-goal gl-current-age >= gv-dark-up)
	(up-compare-goal gl-current-age <= gv-feudal)
	(goal gl-feudal-archery archers)
	(game-time < 940)
	(or	(players-unit-type-count any-enemy skirmisher-line > 1)
		(players-civ every-enemy byzantine))
	(goal gl-feudal-infantry 0)
	(not	(player-valid 3))
=>
	(set-goal gl-feudal-infantry men-at-arms)
	(disable-self)
)

(defrule
	(game-time < 45)
	(starting-age != dark-age)
	(or	(up-compare-goal gl-strategy-type <= controlled-flush)
		(or	(goal gl-strategy fi-monk-rush)
			(or	(goal gl-strategy monk-boom)
				(or	(goal gl-strategy monk-scorpion-boom)
					(goal gl-strategy monk-mango-push)))))
=>
	(set-goal gl-strategy backup-strategy)
	(set-goal gl-strategy-type FC)
	(set-goal gl-strategy-aggressiveness-level LOW)
)

(defrule
	(game-time < 45)
	(starting-age != dark-age)
	(or	(goal gl-strategy mongol-boom)
		(or	(goal gl-strategy castle-push)
			(or	(goal gl-strategy jaguar-boom)
				(or	(goal gl-strategy knight-boom)
					(goal gl-strategy eew-strategy)))))
=>
	(set-goal gl-strategy backup-strategy)
	(set-goal gl-strategy-type FC)
	(set-goal gl-strategy-aggressiveness-level LOW)
)

(defrule
	(game-time < 45)
	(starting-age != dark-age)
	(or	(goal gl-strategy eagle-rush)
		(or	(goal gl-strategy heavy-krush)
			(or	(goal gl-strategy korean-boom)
				(or	(goal gl-strategy scorpion-rush)
					(goal gl-strategy monk-scorpion-rush)))))
=>
	(set-goal gl-strategy backup-strategy)
	(set-goal gl-strategy-type FC)
	(set-goal gl-strategy-aggressiveness-level LOW)
)

#load-if-defined DIFFICULTY-HARD
#load-if-defined TINY-MAP
#load-if-not-defined UP-BYZANTINE-CIV-ENEMY

#load-if-not-defined SPANISH-CIV
#load-if-not-defined HUN-CIV
(defrule
	(goal gl-strategy xbow-boom)
	(or	(and	(players-current-age any-enemy == castle-age)
			(players-military-population any-enemy > 5))
		(commodity-selling-price stone < default-stone-price)); Enemy is likely to be aggressive - better do the same
	(goal gl-rush-suitability-on-map GOOD)
	(game-time < 1160)
	(players-building-type-count focus-player castle < 1)
=>
	(set-goal gl-strategy xbow-rush)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-disable-mining-upgrades NO)
	(chat-to-player my-player-number "1Threat of getting outnumbered detected!")
	(set-strategic-number sn-target-evaluation-hitpoints 1)
	(disable-self)
)

(defrule
	(goal gl-strategy xbow-boom)
	(players-current-age any-enemy == castle-age)
	(building-type-count-total town-center < 2)
	(or	(players-building-type-count any-enemy stable > 0)
		(players-unit-type-count any-enemy knight-line > 0))
	(game-time < 1300)
	(goal gl-rush-suitability-on-map GOOD)
=>
	(set-goal gl-strategy xbow-rush)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-disable-mining-upgrades NO)
	(chat-to-player my-player-number "1Possible krush detected!")
	(set-strategic-number sn-target-evaluation-hitpoints 1)
	(disable-self)
)
#else
(defrule
	(goal gl-strategy CA-boom)
	(or	(and	(players-current-age any-enemy == castle-age)
			(players-military-population any-enemy > 5))
		(commodity-selling-price stone < default-stone-price))
	(goal gl-rush-suitability-on-map GOOD)
	(game-time < 1160)
	(players-building-type-count focus-player castle < 1)
=>
	(set-goal gl-strategy CA-rush)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-disable-mining-upgrades NO)
	(chat-to-player my-player-number "1Threat of getting outnumbered detected!")
	(set-strategic-number sn-target-evaluation-hitpoints 1)
	(disable-self)
)

(defrule
	(goal gl-strategy CA-boom)
	(players-current-age any-enemy == castle-age)
	(building-type-count-total town-center < 2)
	(or	(players-building-type-count any-enemy stable > 0)
		(players-unit-type-count any-enemy knight-line > 0))
	(game-time < 1300)
	(goal gl-rush-suitability-on-map GOOD)
=>
	(set-goal gl-strategy CA-rush)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-disable-mining-upgrades NO)
	(chat-to-player my-player-number "1Possible krush detected!")
	(set-strategic-number sn-target-evaluation-hitpoints 1)
	(disable-self)
)
#end-if
#end-if

#end-if
#load-if-not-defined TURKISH-CIV
#load-if-not-defined UP-GOTHIC-CIV-ENEMY
(defrule
	(or	(goal gl-strategy xbow-boom)
		(goal gl-strategy CA-boom))
	(players-current-age any-enemy == feudal-age)
	(players-military-population any-enemy > 2)
	(or	(players-military-population any-enemy < 6)
		(players-unit-type-count any-enemy archer-line > 5))
	(players-building-type-count every-enemy stable < 1)
	(players-unit-type-count every-enemy scout-cavalry-line < 2)
	(players-unit-type-count every-enemy militiaman-line < 1)
	(building-type-count archery-range < 2)
	(game-time > 945)
	(game-time < 955)
=>
	(set-goal gl-strategy skirm-boom)
	(chat-to-player my-player-number "1Switch to skirms")
)
#end-if
#end-if

#end-if
#end-if

#load-if-not-defined HUN-CIV
(defrule
	(or	(and	(goal gl-strategy xbow-rush)
			(players-building-type-count target-player castle > 0))
		(and	(goal gl-strategy skirm-boom)
			(and	(game-time < 985)
				(players-military-population every-enemy < 2))))
	(game-time > 975)
	(game-time < 1500)
	(or	(stone-amount >= 100)
		(building-type-count-total town-center > 1))
=>
	(set-goal gl-strategy xbow-boom)
	(set-goal gl-strategy-aggressiveness-level LOW)
)

#load-if-defined UP-2-PLAYER-GAME
(defrule
	(goal gl-strategy skirm-boom)
	(or	(players-unit-type-count focus-player militiaman-line > 2)
		(or	(players-unit-type-count focus-player eagle-warrior-line > 2)
			(players-unit-type-count focus-player knight-line > 1)))
=>
	(set-goal gl-strategy xbow-boom)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(disable-self)
)

#load-if-not-defined SPANISH-CIV
(defrule
	(goal gl-strategy skirm-boom)
	(commodity-selling-price stone < default-stone-price)
	(goal gl-rush-suitability-on-map GOOD)
	(game-time < 1160)
	(players-building-type-count target-player castle < 1)
=>
	(set-goal gl-strategy xbow-rush)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-disable-mining-upgrades NO)
	(chat-to-player my-player-number "1Threat of getting outnumbered detected!")
	(set-strategic-number sn-target-evaluation-hitpoints 1)
	(disable-self)
)
#end-if
#end-if
#else
(defrule
	(or	(and	(goal gl-strategy CA-rush)
			(players-building-type-count target-player castle > 0))
		(and	(goal gl-strategy skirm-boom)
			(and	(game-time < 985)
				(players-military-population every-enemy < 2))))
	(game-time > 975)
	(game-time < 1500)
	(or	(stone-amount >= 100)
		(building-type-count-total town-center > 1))
=>
	(set-goal gl-strategy CA-boom)
	(set-goal gl-strategy-aggressiveness-level LOW)
)

#load-if-defined UP-2-PLAYER-GAME
(defrule
	(goal gl-strategy skirm-boom)
	(or	(players-unit-type-count focus-player militiaman-line > 2)
		(or	(players-unit-type-count focus-player eagle-warrior-line > 2)
			(players-unit-type-count focus-player knight-line > 1)))
=>
	(set-goal gl-strategy CA-boom)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(disable-self)
)

(defrule
	(goal gl-strategy skirm-boom)
	(commodity-selling-price stone < default-stone-price)
	(goal gl-rush-suitability-on-map GOOD)
	(game-time < 1160)
	(players-building-type-count target-player castle < 1)
=>
	(set-goal gl-strategy CA-rush)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-disable-mining-upgrades NO)
	(chat-to-player my-player-number "1Threat of getting outnumbered detected!")
	(set-strategic-number sn-target-evaluation-hitpoints 1)
	(disable-self)
)
#end-if
#end-if

(defrule
	(goal gl-strategy default)
=>
	(up-jump-rule 8)
)

(defrule
	(or	(goal gl-strategy xbow-boom)
		(or	(goal gl-strategy CA-boom)
			(or	(goal gl-strategy xbow-rush)
				(goal gl-strategy CA-rush))))
	(goal gl-fixed-target-player NO)
	(not	(civ-selected turkish))
	(players-building-type-count target-player watch-tower > 2)
	(game-time > 300)
	(game-time < 1140)
=>
	(set-goal gl-strategy skirm-boom)
	(chat-to-player my-player-number "1Switch to skirms")
)

(defrule
	(or	(goal gl-strategy xbow-rush)
		(goal gl-strategy skirm-boom))
	(or	(and	(game-time > 1800)
			(goal gl-strategy skirm-boom))
		(or	(players-unit-type-count focus-player huskarl-line > 1)
			(game-time > 2700)))
=>
	(set-goal gl-strategy default)
	(disable-self)
)

(defrule
	(goal gl-strategy xbow-rush)
	(or	(and	(or	(soldier-count > 30)
				(players-population target-player < 35))
			(and	(population > 65)
				(and	(players-population target-player < 50)
					(players-military-population target-player < 8))))
		(players-building-type-count target-player watch-tower > 1))
=>
	(set-goal gl-strategy xbow-boom)
)

(defrule
	(goal gl-strategy CA-rush)
	(or	(and	(or	(soldier-count > 23)
				(players-population target-player < 35))
			(and	(population > 60)
				(and	(players-population target-player < 50)
					(players-military-population target-player < 8))))
		(players-building-type-count target-player watch-tower > 1))
=>
	(set-goal gl-strategy CA-boom)
)

(defrule
	(goal gl-strategy knight-archer)
	(current-age >= castle-age)
	(or	(current-age-time > 420)
		(and	(current-age-time > 300)
			(up-compare-goal gl-my-villager-count-total > 90)))
=>
	(set-goal gl-strategy default)
	(disable-self)
)

(defrule
	(goal gl-strategy boom)
	(current-age >= castle-age)
	(nand	(strategic-number sn-minimum-water-body-size-for-dock == 2001)
		(game-time <= 1660))
	(or	(current-age-time > 330)
		(and	(current-age-time > 100)
			(and	(timer-triggered 9)
				(town-under-attack))))
=>
	(set-goal gl-strategy default)
	(disable-self)
)

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal gl-strategy castle-drop)
=>
	(set-goal CASTLE 2)
	(disable-self)
)

(defrule
	(game-time > 2500)
	(or	(goal gl-strategy castle-drop)
		(and	(game-time > 2700)
			(goal gl-strategy turkish-fast-imp)))
=>
	(set-goal gl-strategy default)
	(disable-self)
)

#load-if-not-defined BYZANTINE-CIV
#load-if-not-defined PERSIAN-CIV
#load-if-not-defined SARACEN-CIV
(defrule
	(building-type-count-total castle > 1)
=>
	(set-strategic-number sn-castle-build-notice 1)
)

(defrule
	(not	(goal CASTLE 0))
	(goal gl-advanced-archery 0)
	(up-compare-const no-castles-value == 1)
	(strategic-number sn-castle-build-notice == 1)
	(building-type-count-total castle == 0)
=>
	(set-goal gl-advanced-archery BACKUP-PLAN-ARCHER)
	(set-goal gl-advanced-infantry BACKUP-PLAN-MAA)
	(chat-to-player my-player-number "24No castles or low stone so switch to alternative plan")
	(set-strategic-number sn-castle-build-notice 0)
)
#end-if
#end-if
#end-if

#load-if-not-defined WONDER-RACE

#load-if-not-defined KING-OF-THE-HILL
#load-if-not-defined TURBO-RANDOM-MAP

#load-if-defined DARK-AGE-START
#load-if-defined UP-2-PLAYER-GAME

#load-if-not-defined MAYAN-CIV
(defrule
	(goal gl-strategy castle-drop)
	(current-age == castle-age)
	(game-time < 1800)
	(not	(civ-selected mayan))
	(players-unit-type-count any-enemy monk > 6)
=>
	(set-goal gl-advanced-cavalry LC)
	(set-goal gl-strategy boom)
	(chat-to-player my-player-number "Enemy mushing?")
	(disable-self)
)

(defrule
	(goal gl-strategy boom)
	(current-age >= castle-age)
	(not	(civ-selected mayan))
	(unit-type-count scout-cavalry-line > 6)
=>
	(set-goal gl-strategy default)
	(disable-self)
)

(defrule
	(or	(goal gl-strategy knight-archer)
		(goal gl-strategy krush))
	(current-age == castle-age)
	(game-time < 1800)
	(players-unit-type-count any-enemy monk > 6)
=>
	(set-goal gl-strategy boom)
	(set-goal gl-advanced-cavalry LC)
	(chat-to-player my-player-number "Enemy mushing?")
	(disable-self)
)
#end-if
#end-if
#end-if
#end-if
#end-if

#load-if-defined TINY-MAP
(load "Barbarian_2.0\Strategies1v1")

#load-if-not-defined CUSTOM-MAP
#load-if-not-defined ARCHIPELAGO-MAP
#load-if-not-defined BALTIC-MAP
#load-if-not-defined COASTAL-MAP
#load-if-not-defined CONTINENTAL-MAP
#load-if-not-defined CRATER-LAKE-MAP
#load-if-not-defined HIGHLAND-MAP
#load-if-not-defined ISLANDS-MAP
#load-if-not-defined MEDITERRANEAN-MAP
#load-if-not-defined MIGRATION-MAP
#load-if-not-defined NOMAD-MAP
#load-if-not-defined RIVERS-MAP
#load-if-not-defined SALT-MARSH-MAP
#load-if-not-defined SCANDANAVIA-MAP
#load-if-not-defined TEAM-ISLANDS-MAP
#load-if-not-defined YUCATAN-MAP

#load-if-not-defined REGICIDE
#load-if-not-defined UP-ALLY-IN-GAME
#load-if-not-defined UP-SCENARIO-GAME
#load-if-defined IMPERIAL-AGE-END
#load-if-defined POPULATION-CAP-200
(load "Barbarian_2.0\Commands")
#end-if
#end-if
#end-if
#end-if
#end-if

#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if

#else; Teamgame
#load-if-not-defined UP-SCENARIO-GAME
(load "Barbarian_2.0\CommandsTG")
#end-if
(load "Barbarian_2.0\StrategiesTG")
#end-if

#load-if-not-defined DEATH-MATCH
(load "Barbarian_2.0\ScoutArcher")
#load-if-not-defined DARK-AGE-END
(load-random 15 "Barbarian_2.0\Strategies\AddedDrush")
(load-random 10 "Barbarian_2.0\Strategies\EternalDrush")
#load-if-defined POPULATION-CAP-200
(load-random 15 "Barbarian_2.0\UnusualSwitch"); To add unpredictability
(load-random 80 "Barbarian_2.0\PocketAggressiveness"); Against humans this will only make krush more aggressive instead of completely switching strategy
(load-random 35 "Barbarian_2.0\FlankAggressiveness"); Also holds the possibity of pockets go scouts
#end-if
#load-if-defined UP-HUMAN-IN-GAME
#load-if-not-defined TINY-MAP
#load-if-not-defined SMALL-MAP
#load-if-defined ARENA-MAP
(load-random 15 "Barbarian_2.0\Strategies\MONKBOOM")
(load-random 10 "Barbarian_2.0\Strategies\FC17")
#end-if
#end-if
#end-if
#load-if-defined BLACK-FOREST-MAP
(load-random 20 "Barbarian_2.0\Strategies\MONKBOOM")
(load-random 20 "Barbarian_2.0\Strategies\FC17")
#end-if
#end-if
#else
(load "Barbarian_2.0\Strategies\AddedDrush")
(load "Barbarian_2.0\Strategies\EternalDrush")
#end-if
(load "Barbarian_2.0\Drush")
(load "Barbarian_2.0\SuicidalKnightRush")
(load "Barbarian_2.0\KnightRush")
#end-if

#end-if
(load "Barbarian_2.0\CA")
#load-if-not-defined DEATH-MATCH
#load-if-defined DARK-AGE-END
(defrule
	(or	(strategic-number sn-minimum-water-body-size-for-dock == 998)
		(building-type-count-total dock > 0))
	(or	(up-compare-goal gl-DRUSH != YES)
		(up-compare-goal gl-strategy != eternal-drush))
=>
	(set-goal gl-DRUSH YES)
	(set-goal gl-drush-stance defensive)
	(set-goal gl-strategy eternal-drush)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type controlled-flush)
	(set-goal gl-eternal-drush YES)
	(set-strategic-number sn-target-evaluation-hitpoints 1)
	(set-strategic-number sn-allow-new-build-order 4)
	(set-goal gl-anti-cysion YES)
)
#end-if

(defrule
	(goal gl-ENEMY-DISTANCE UNKNOWN)
	(goal SLING 0)
	(goal gl-rush-suitability-on-map GOOD)
	(up-compare-goal gl-enemy-strategy != FLUSH)
	(strategic-number sn-target-evaluation-hitpoints == 0)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-my-villager-count-total < 27)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(players-building-count any-enemy > 1)
	(game-time > 120)
=>
	(up-get-target-fact player-distance 0 gl-distance-to-enemy)
	(up-modify-goal gl-original-enemy-distance g:= gl-distance-to-enemy)
	(chat-to-player my-player-number "Check enemy distance")
	(up-chat-data-to-player my-player-number "Scan result: %d" g: gl-distance-to-enemy)
	(set-goal gl-ENEMY-DISTANCE CHECKING)
	(disable-self)
)

#load-if-not-defined DARK-AGE-END
#load-if-defined UP-2-PLAYER-GAME

#load-if-defined AZTEC-CIV
#load-if-defined UP-AZTEC-CIV-ENEMY
(defrule
	(or	(goal gl-strategy fi-monk-rush)
		(goal gl-eew-strategy-type boom))
	(strategic-number sn-target-evaluation-hitpoints == 0)
	(players-civ every-enemy aztec)
	(goal gl-current-age gv-feudal-up)
	(commodity-selling-price stone < default-stone-price)
=>
	(set-goal gl-strategy eagle-monk-rush)
	(set-goal gl-strategy-aggressiveness-level AVERAGE)
	(set-goal gl-strategy-type FC)
	(disable-self)
)
#end-if; This is here to make jump-rule even
#end-if

(defrule
	(or	(current-age >= castle-age)
		(up-compare-goal gl-rush-suitability-on-map < GOOD))
=>
	(up-jump-rule 4)
)

(defrule
	(goal gl-ENEMY-DISTANCE CHECKING)
	(up-compare-goal gl-distance-to-enemy >= 80)
	(up-compare-goal gl-strategy-type <= controlled-flush)
	(strategic-number sn-target-evaluation-hitpoints == 0)
=>
	(set-goal gl-ENEMY-DISTANCE FAR)
	(disable-self)
)

(defrule
	(goal gl-ENEMY-DISTANCE CHECKING)
	(up-compare-goal gl-distance-to-enemy <= 60)
	(up-compare-goal gl-strategy-type >= FC)
	(strategic-number sn-target-evaluation-hitpoints == 0)
=>
	(set-goal gl-ENEMY-DISTANCE NEAR)
	(disable-self)
)

#load-if-defined AZTEC-CIV
(defrule
	(goal gl-ENEMY-DISTANCE NEAR)
	(current-age <= feudal-age)
=>
	(set-goal gl-strategy eagle-monk-rush)
	(set-goal gl-strategy-aggressiveness-level AVERAGE)
	(set-goal gl-strategy-type FC)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy eew-strategy)
	(set-goal gl-eew-strategy-type boom)
	(set-goal gl-strategy-aggressiveness-level VERY-LOW)
	(set-goal gl-strategy-type FC2)
	(disable-self)
)
#end-if

#load-if-defined BRITON-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-feudal-infantry 0)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy xbow-boom)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC2)
	(disable-self)
)
#end-if

#load-if-defined BYZANTINE-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-feudal-infantry 0)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy xbow-boom)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC2)
	(disable-self)
)
#end-if

#load-if-defined CELTIC-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archers)
	(set-goal gl-feudal-infantry men-at-arms)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy xbow-boom)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC2)
	(disable-self)
)
#end-if

#load-if-defined CHINESE-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archers)
	(set-goal gl-feudal-infantry men-at-arms)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy xbow-boom)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC2)
	(disable-self)
)
#end-if

#load-if-defined FRANKISH-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
	(up-compare-goal gl-strategy != heavy-krush)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-feudal-infantry 0)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy heavy-krush)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type FC2)
	(disable-self)
)
#end-if

#load-if-defined GOTHIC-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-feudal-infantry men-at-arms)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy castle-drop)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC)
	(disable-self)
)
#end-if

#load-if-defined HUN-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
	(or	(goal gl-strategy knight-CA)
		(goal gl-strategy CA-boom))
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-feudal-infantry 0)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy CA-boom)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC2)
	(disable-self)
)
#end-if

#load-if-defined INCAN-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-feudal-infantry men-at-arms)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy xbow-boom)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC2)
	(disable-self)
)
#end-if

#load-if-defined INDIAN-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-feudal-infantry 0)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy xbow-boom)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC2)
	(disable-self)
)
#end-if

#load-if-defined ITALIAN-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archers)
	(set-goal gl-feudal-infantry men-at-arms)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy castle-drop)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC)
	(disable-self)
)
#end-if

#load-if-defined JAPANESE-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archers)
	(set-goal gl-feudal-infantry men-at-arms)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy xbow-boom)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC2)
	(disable-self)
)
#end-if

#load-if-defined KOREAN-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-feudal-infantry 0)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy castle-drop)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC)
	(disable-self)
)
#end-if

#load-if-defined MAGYAR-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archers)
	(set-goal gl-feudal-infantry men-at-arms)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy krush)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC2)
	(disable-self)
)
#end-if

#load-if-defined MAYAN-CIV
(defrule
	(or	(goal gl-ENEMY-DISTANCE NEAR)
		(and	(goal gl-eew-strategy-type boom)
			(and	(players-civ every-enemy aztec)
				(and	(up-compare-goal gl-current-age >= gv-feudal-up)
					(commodity-selling-price stone < default-stone-price)))))
	(strategic-number sn-target-evaluation-hitpoints == 0)
	(current-age <= feudal-age)
=>
	(set-goal gl-strategy eagle-rush)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type FC)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy castle-drop)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC)
	(disable-self)
)
#end-if

#load-if-defined MONGOL-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-feudal-infantry 0)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy castle-drop)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC)
	(disable-self)
)
#end-if

#load-if-defined PERSIAN-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-feudal-infantry 0)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy krush)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC2)
	(disable-self)
)
#end-if

#load-if-defined SARACEN-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
	(up-compare-goal gl-strategy != heavy-krush)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-feudal-infantry 0)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy xbow-boom)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC2)
	(disable-self)
)
#end-if

#load-if-defined SLAVIC-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-feudal-infantry men-at-arms)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy castle-drop)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC)
	(disable-self)
)
#end-if

#load-if-defined SPANISH-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash YES)
	(set-goal gl-feudal-archery 0)
	(set-goal gl-feudal-infantry 0)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy castle-drop)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC)
	(disable-self)
)
#end-if

#load-if-defined TEUTONIC-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
	(up-compare-goal gl-strategy != heavy-krush)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-feudal-infantry 0)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy krush)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC2)
	(disable-self)
)
#end-if

#load-if-defined TURKISH-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archers)
	(set-goal gl-feudal-infantry men-at-arms)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)


(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy castle-drop)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC)
	(disable-self)
)
#end-if

#load-if-defined VIKING-CIV
(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE NEAR)
=>
	(set-goal gl-strategy default)
	(set-goal gl-feudal-trash 0)
	(set-goal gl-feudal-archery archer-skirm)
	(set-goal gl-feudal-infantry men-at-arms)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(set-goal gl-strategy-type basic-flush)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(goal gl-ENEMY-DISTANCE FAR)
=>
	(set-goal gl-strategy xbow-boom)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(set-goal gl-strategy-type FC2)
	(disable-self)
)
#end-if
#else
(defrule
	(or	(goal gl-ENEMY-DISTANCE NEAR)
		(and	(goal gl-enemy-strategy FLUSH)
			(goal gl-strategy fi-monk-rush)))
	(goal gl-current-age gv-dark)
=>
	(set-goal gl-DRUSH NO)
	(set-goal gl-strategy default)
	(set-goal gl-strategy-type basic-flush)
	(set-goal gl-feudal-infantry FLUSH-DEFENCE-MAA)
	(set-goal gl-feudal-archery FLUSH-DEFENCE-ARCHER)
	(set-strategic-number sn-stone-gatherer-percentage 0)
	(set-goal gl-strategy-aggressiveness-level HIGH)
	(chat-to-player my-player-number "1Go for a flush war")
	(disable-self)
)

(defrule
	(goal gl-ENEMY-DISTANCE CHECKING)
	(up-compare-goal gl-distance-to-enemy <= 30)
	(up-compare-goal gl-strategy-aggressiveness-level <= LOW)
	(up-compare-goal gl-strategy != castle-drop)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(game-time > 120)
	(goal SLING 0)
	(goal gl-current-age gv-dark)
=>
	(set-goal gl-ENEMY-DISTANCE NEAR)
	(disable-self)
)
#end-if
#end-if
#end-if

#load-if-not-defined DEATH-MATCH
#load-if-defined UP-HUMAN-IN-GAME
#load-if-defined DARK-AGE-START
#load-if-not-defined DIFFICULTY-HARDEST
(defrule
	(current-age == dark-age)
	(goal gl-current-age gv-dark)
	(game-time > 455)
	(game-time < 465)
	(strategic-number sn-focus-player-number > 0)
	(stance-toward focus-player enemy)
	(player-human focus-player)
	(strategic-number sn-nomad-style-start == 0)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
=>
	(chat-to-player my-player-number "1Trying to recognize opponent's playing level")
	(set-goal gl-enemy-human-rating DETERMINING)
	(up-get-fact unit-type-count villager gl-my-villager-count)
	(up-modify-goal gl-my-villager-count c:- 4)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(game-time < 475)
	(strategic-number sn-focus-player-number > 0)
	(stance-toward focus-player enemy)
	(player-human focus-player)
	(goal gl-current-age gv-dark)
	(goal gl-enemy-human-rating DETERMINING)
	(players-civilian-population focus-player g:<= gl-my-villager-count)
=>
	(chat-to-player my-player-number "1We have atleast a 4 villager lead")
	(set-goal gl-enemy-human-rating LOW)
	(up-modify-goal gl-my-villager-count c:+ 4)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(game-time < 475)
	(strategic-number sn-focus-player-number > 0)
	(stance-toward focus-player enemy)
	(player-human focus-player)
	(goal gl-current-age gv-dark)
	(goal gl-enemy-human-rating DETERMINING)
	(players-civilian-population focus-player g:> gl-my-villager-count)
=>
	(up-modify-goal gl-my-villager-count c:+ 2)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(game-time < 475)
	(strategic-number sn-focus-player-number > 0)
	(stance-toward focus-player enemy)
	(player-human focus-player)
	(goal gl-current-age gv-dark)
	(goal gl-enemy-human-rating DETERMINING)
	(players-civilian-population focus-player g:<= gl-my-villager-count)
=>
	(chat-to-player my-player-number "1We have atleast a 2 villager lead")
	(set-goal gl-enemy-human-rating AVERAGE)
	(up-modify-goal gl-my-villager-count c:+ 2)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(game-time < 475)
	(strategic-number sn-focus-player-number > 0)
	(stance-toward focus-player enemy)
	(player-human focus-player)
	(goal gl-current-age gv-dark)
	(goal gl-enemy-human-rating DETERMINING)
=>
	(chat-to-player my-player-number "1Enemy human rating: Good")
	(set-goal gl-enemy-human-rating GOOD)
	(up-modify-goal gl-my-villager-count c:+ 2)
	(disable-self)
)

(defrule
	(strategic-number sn-focus-player-number > 0)
	(stance-toward focus-player enemy)
	(player-human focus-player)
	(game-time < 780)
	(game-time > 475)
	(up-compare-goal gl-enemy-human-rating != GOOD)
	(or	(and	(players-civilian-population focus-player > 21)
			(players-current-age focus-player >= feudal-age))
		(players-military-population any-enemy > 3)); No tricking around in TGs vs good players even if the target player isn't that good
=>
	(chat-to-player my-player-number "24Ops, the opponent is actually good")
	(set-goal gl-enemy-human-rating GOOD)
	(disable-self)
)
#end-if
#end-if

#load-if-defined VICTORY-STANDARD
(load-random +chance-for-wonder "Barbarian_2.0\WonderVictory")
#end-if
#end-if
#end-if

; ============= ENSURING BUILDINGS GET DROPPED

(defrule
	(up-compare-goal castle-dropped-timer > 0)
	(nand	(game-time < 120)
		(death-match-game))
=>
	(up-modify-goal castle-dropped-timer c:- 1)
)

(defrule
	(or	(wood-amount >= 100)
		(civ-selected japanese))
	(wood-amount >= 50)
	(not	(goal gl-mill-placed YES))
	(up-pending-placement c: mill)
	(game-time < 1500)
=>
	(up-get-fact game-time 0 mill-dropped-timer)
	(up-modify-goal mill-dropped-timer c:+ 10)
	(set-goal gl-mill-placed YES)
)

(defrule
	(goal gl-mill-placed YES)
	(game-time g:>= mill-dropped-timer)
	(up-pending-placement c: mill)
=>
	(up-reset-placement c: mill)
	(chat-to-player my-player-number "Reset mill")
	(set-goal gl-mill-placed NO)
	(set-goal mill-dropped-timer -1)
)

(defrule
	(goal gl-mill-placed YES)
	(or	(not	(up-pending-placement c: mill))
		(or	(and	(wood-amount <= 100)
				(not	(civ-selected japanese)))
			(wood-amount <= 50)))
=>
	(set-goal gl-mill-placed NO)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-castle-placed YES)
	(up-pending-placement c: castle)
	(stone-amount >= castle-stone)
	(up-compare-goal castle-dropped-timer <= 0)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count > 0)
=>
	(set-goal D-TSA YES)
	(up-modify-sn sn-maximum-town-size c:+ 1)
	(chat-to-player my-player-number "Increase TS for castle +1")
	(enable-timer 2 10)
)

(defrule
	(goal gl-castle-placed placed-forward)
	(stone-amount >= castle-stone)
	(or	(up-compare-goal castle-dropped-timer <= 0)
		(and	(up-compare-goal MILITARY != 1); We have no longer superiority -> cancel forward castle
			(up-compare-goal gl-arena-forward != YES)))
	(up-pending-placement c: castle)
=>
	(up-reset-placement c: castle)
	(chat-to-player my-player-number "Reset castle")
	(set-goal gl-castle-placed NO)
)

(defrule
	(or	(goal gl-castle-placed YES)
		(goal gl-castle-placed placed-forward))
	(not	(up-pending-placement c: castle))
=>
	(set-goal gl-castle-placed NO)
)

(defrule
	(or	(goal gl-castle-placed YES)
		(goal gl-castle-placed placed-forward))
	(stone-amount < castle-stone)
	(up-pending-placement c: castle)
=>
	(set-goal gl-castle-placed NO)
	(up-reset-placement c: castle)
)

(defrule
	(building-type-count town-center == 0)
=>
	(up-jump-rule 6)
)

(defrule
	(goal gl-castle-control placed-forward)
	(up-compare-goal MILITARY != 1)
	(up-timer-status 21 == timer-disabled)
	(strategic-number sn-percent-building-cancellation < 90)
=>
	(set-strategic-number sn-percent-building-cancellation 90)
	(enable-timer 21 150)
)

(defrule
	(goal gl-castle-control placed-forward)
	(player-in-game any-human-enemy)
	(up-compare-goal gl-arena-forward != YES)
	(up-timer-status 21 == timer-disabled)
	(strategic-number sn-percent-building-cancellation < 70)
=>
	(set-strategic-number sn-percent-building-cancellation 70)
	(enable-timer 21 150)
)

#load-if-defined UP-HUMAN-IN-GAME
(defrule
	(or	(unit-type-count dead-builder1 > 3)
		(or	(unit-type-count dead-builder2 > 3)
			(and	(unit-type-count dead-builder1 > 1)
				(unit-type-count dead-builder2 > 1))))
	(up-timer-status 21 == timer-disabled)
	(strategic-number sn-percent-building-cancellation < 100)
=>
	(set-strategic-number sn-percent-building-cancellation 100)
	(chat-to-player my-player-number "Use immediate building cancellation")
	(up-assign-builders c: unbuilt-town-center c: 1)
	(up-assign-builders c: castle c: 1)
	(enable-timer 21 240)
)

(defrule
	(or	(unit-type-count dead-builder1 > 1)
		(or	(unit-type-count dead-builder2 > 1)
			(and	(unit-type-count dead-builder1 > 0)
				(unit-type-count dead-builder2 > 0))))
	(up-timer-status 21 == timer-disabled)
	(strategic-number sn-percent-building-cancellation < 93)
=>
	(set-strategic-number sn-percent-building-cancellation 93)
	(chat-to-player my-player-number "Increase building cancellation percentage")
	(up-assign-builders c: unbuilt-town-center c: 1)
	(up-assign-builders c: castle c: 1)
	(enable-timer 21 180)
)
#else
(defrule
	(or	(unit-type-count dead-builder1 > 4)
		(or	(unit-type-count dead-builder2 > 4)
			(and	(unit-type-count dead-builder1 > 2)
				(unit-type-count dead-builder2 > 2))))
	(up-timer-status 21 == timer-disabled)
	(strategic-number sn-percent-building-cancellation < 100)
=>
	(set-strategic-number sn-percent-building-cancellation 100)
	(chat-to-player my-player-number "Use immediate building cancellation")
	(up-assign-builders c: unbuilt-town-center c: 1)
	(up-assign-builders c: castle c: 1)
	(enable-timer 21 240)
)

(defrule
	(up-compare-goal gl-strategy != castle-drop)
	(up-compare-goal gl-strategy != gothic-boom)
	(or	(unit-type-count dead-builder1 > 2)
		(or	(unit-type-count dead-builder2 > 2)
			(and	(unit-type-count dead-builder1 > 0)
				(unit-type-count dead-builder2 > 1))))
	(up-timer-status 21 == timer-disabled)
	(strategic-number sn-percent-building-cancellation < 93)
=>
	(set-strategic-number sn-percent-building-cancellation 93)
	(chat-to-player my-player-number "Increase building cancellation percentage")
	(up-assign-builders c: unbuilt-town-center c: 1)
	(up-assign-builders c: castle c: 1)
	(enable-timer 21 180)
)
#end-if

(defrule
	(or	(goal gl-castle-control placed-forward)
		(strategic-number sn-percent-building-cancellation >= 93))
	(up-compare-goal MILITARY != 1)
	(timer-triggered 21)
	(or	(strategic-number sn-percent-building-cancellation == 90)
		(or	(strategic-number sn-percent-building-cancellation == 70)
			(strategic-number sn-percent-building-cancellation >= 93)))
=>
	(up-assign-builders c: unbuilt-town-center c: 4)
	(up-assign-builders c: castle c: 5)
	(set-strategic-number sn-percent-building-cancellation 20)
	(set-goal gl-castle-control NO)
	(disable-timer 21)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-siege-workshop-placed NO)
	(up-pending-placement c: siege-workshop)
	(wood-amount >= 200)
=>
	(up-get-fact game-time 0 siege-workshop-dropped-timer)
	(up-modify-goal siege-workshop-dropped-timer c:+ 10)
	(set-goal gl-siege-workshop-placed YES)
)

(defrule
	(goal gl-siege-workshop-placed YES)
	(or	(not	(up-pending-placement c: siege-workshop))
		(or	(wood-amount < 200)
			(goal MILITARY 1)))
=>
	(set-goal gl-siege-workshop-placed NO)
	(set-goal siege-workshop-dropped-timer -1)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-siege-workshop-placed YES)
	(up-pending-placement c: siege-workshop)
	(wood-amount >= 200)
	(game-time g:>= siege-workshop-dropped-timer)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count > 0)
=>
	(set-goal D-TSA YES)
	(up-modify-sn sn-maximum-town-size c:+ 1)
	(chat-to-player my-player-number "Increase TS for siege-workshop +1")
	(enable-timer 2 10)
)

(defrule
	(not	(goal MILITARY 1))
	(up-compare-goal gl-house-placed != YES)
	(up-pending-placement c: house)
	(wood-amount >= 30)
=>
	(up-get-fact game-time 0 house-dropped-timer)
	(up-modify-goal house-dropped-timer c:+ 10)
	(set-goal gl-house-placed YES)
)

(defrule
	(goal gl-house-placed YES)
	(or	(not	(up-pending-placement c: house))
		(or	(wood-amount < 30)
			(goal MILITARY 1)))
=>
	(set-goal gl-house-placed NO)
	(set-goal house-dropped-timer -1)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-house-placed YES)
	(up-pending-placement c: house)
	(wood-amount >= 30)
	(game-time g:>= house-dropped-timer)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count > 0)
=>
	(set-goal D-TSA YES)
	(up-modify-sn sn-maximum-town-size c:+ 1)
	(chat-to-player my-player-number "Increase TS for house +1")
	(enable-timer 2 10)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-town-center-placed NO)
	(up-pending-placement c: town-center)
	(wood-amount >= town-center-wood)
	(stone-amount >= 100)
=>
	(up-get-fact game-time 0 TC-dropped-timer)
	(up-modify-goal TC-dropped-timer c:+ 10)
	(set-goal gl-town-center-placed YES)
)

(defrule
	(goal gl-town-center-placed YES)
	(or	(not	(up-pending-placement c: town-center))
		(or	(wood-amount < town-center-wood)
			(or	(stone-amount < 100)
				(goal MILITARY 1))))
=>
	(set-goal gl-town-center-placed NO)
	(set-goal TC-dropped-timer -1)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-town-center-placed YES)
	(up-pending-placement c: town-center)
	(wood-amount >= town-center-wood)
	(stone-amount >= 100)
	(game-time g:>= TC-dropped-timer)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count > 0)
=>
	(set-goal D-TSA YES)
	(up-modify-sn sn-maximum-town-size c:+ 1)
	(chat-to-player my-player-number "Increase TS for town center +1")
	(enable-timer 2 10)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-barracks-placed NO)
	(up-pending-placement c: barracks)
	(wood-amount >= 175)
=>
	(up-get-fact game-time 0 barracks-dropped-timer)
	(up-modify-goal barracks-dropped-timer c:+ 10)
	(set-goal gl-barracks-placed YES)
)

(defrule
	(goal gl-barracks-placed YES)
	(or	(not	(up-pending-placement c: barracks))
		(or	(wood-amount < 175)
			(goal MILITARY 1)))
=>
	(set-goal gl-barracks-placed NO)
	(set-goal barracks-dropped-timer -1)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-barracks-placed YES)
	(up-pending-placement c: barracks)
	(wood-amount >= 175)
	(game-time g:>= barracks-dropped-timer)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count > 0)
=>
	(set-goal D-TSA YES)
	(up-modify-sn sn-maximum-town-size c:+ 1)
	(chat-to-player my-player-number "Increase TS for barracks +1")
	(enable-timer 2 10)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-range-placed NO)
	(up-pending-placement c: archery-range)
	(wood-amount >= 175)
=>
	(up-get-fact game-time 0 range-dropped-timer)
	(up-modify-goal range-dropped-timer c:+ 10)
	(set-goal gl-range-placed YES)
)

(defrule
	(goal gl-range-placed YES)
	(or	(not	(up-pending-placement c: archery-range))
		(or	(wood-amount < 175)
			(goal MILITARY 1)))
=>
	(set-goal gl-range-placed NO)
	(set-goal range-dropped-timer -1)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-range-placed YES)
	(up-pending-placement c: archery-range)
	(wood-amount >= 175)
	(game-time g:>= range-dropped-timer)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count > 0)
=>
	(set-goal D-TSA YES)
	(up-modify-sn sn-maximum-town-size c:+ 1)
	(chat-to-player my-player-number "Increase TS for range +1")
	(enable-timer 2 10)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-stable-placed NO)
	(up-pending-placement c: stable)
	(wood-amount >= 175)
=>
	(up-get-fact game-time 0 stable-dropped-timer)
	(up-modify-goal stable-dropped-timer c:+ 10)
	(set-goal gl-stable-placed YES)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-stable-placed YES)
	(up-pending-placement c: stable)
	(wood-amount >= 175)
	(game-time g:>= stable-dropped-timer)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count > 0)
=>
	(set-goal D-TSA YES)
	(up-modify-sn sn-maximum-town-size c:+ 1)
	(chat-to-player my-player-number "Increase TS for stable +1")
	(enable-timer 2 10)
)

(defrule
	(goal gl-stable-placed YES)
	(or	(not	(up-pending-placement c: stable))
		(or	(wood-amount < 175)
			(goal MILITARY 1)))
=>
	(set-goal gl-stable-placed NO)
	(set-goal stable-dropped-timer -1)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-monastery-placed NO)
	(or	(up-pending-placement c: monastery)
		(and	(up-pending-placement c: blacksmith)
			(goal gl-current-age gv-feudal)))
	(wood-amount >= 175)
=>
	(up-get-fact game-time 0 monastery-dropped-timer)
	(up-modify-goal monastery-dropped-timer c:+ 10)
	(set-goal gl-monastery-placed YES)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-monastery-placed YES)
	(or	(up-pending-placement c: monastery)
		(and	(up-pending-placement c: blacksmith)
			(goal gl-current-age gv-feudal)))
	(wood-amount >= 175)
	(game-time g:>= monastery-dropped-timer)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count > 0)
=>
	(set-goal D-TSA YES)
	(up-modify-sn sn-maximum-town-size c:+ 1)
	(chat-to-player my-player-number "Increase TS for monastery/blacksmith +1")
	(enable-timer 2 10)
)

(defrule
	(goal gl-monastery-placed YES)
	(or	(not	(up-pending-placement c: monastery))
		(or	(wood-amount < 175)
			(or	(goal MILITARY 1)
				(and	(current-age < castle-age)
					(not	(up-pending-placement c: blacksmith))))))
=>
	(set-goal gl-monastery-placed NO)
	(set-goal monastery-dropped-timer -1)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-market-placed NO)
	(up-pending-placement c: market)
	(wood-amount >= 175)
	(current-age >= castle-age)
	(game-time < 2700)
=>
	(up-get-fact game-time 0 market-dropped-timer)
	(up-modify-goal market-dropped-timer c:+ 10)
	(set-goal gl-market-placed YES)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-market-placed YES)
	(up-pending-placement c: market)
	(wood-amount >= 175)
	(game-time g:>= market-dropped-timer)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count > 0)
=>
	(set-goal D-TSA YES)
	(up-modify-sn sn-maximum-town-size c:+ 1)
	(chat-to-player my-player-number "Increase TS for market +1")
	(enable-timer 2 10)
)

(defrule
	(goal gl-market-placed YES)
	(or	(not	(up-pending-placement c: market))
		(or	(wood-amount < 175)
			(goal MILITARY 1)))
=>
	(set-goal gl-market-placed NO)
	(set-goal market-dropped-timer -1)
)

(defrule
	(not	(goal MILITARY 1))
	(up-compare-goal gl-university-placed != YES)
	(up-pending-placement c: university)
	(wood-amount >= 200)
	(current-age >= castle-age)
=>
	(up-get-fact game-time 0 university-dropped-timer)
	(up-modify-goal university-dropped-timer c:+ 10)
	(set-goal gl-university-placed YES)
)

(defrule
	(not	(goal MILITARY 1))
	(goal gl-market-placed YES)
	(up-pending-placement c: university)
	(wood-amount >= 200)
	(game-time g:>= university-dropped-timer)
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count > 0)
=>
	(set-goal D-TSA YES)
	(up-modify-sn sn-maximum-town-size c:+ 1)
	(chat-to-player my-player-number "Increase TS for university +1")
	(enable-timer 2 10)
)

(defrule
	(goal gl-university-placed YES)
	(or	(not	(up-pending-placement c: university))
		(or	(wood-amount < 200)
			(goal MILITARY 1)))
=>
	(set-goal gl-university-placed NO)
	(set-goal university-dropped-timer -1)
)

(defrule
	(goal D-TSA YES)
	(up-compare-goal gl-market-placed != YES)
	(goal gl-castle-placed NO)
	(up-compare-goal gl-town-center-placed != YES)
	(up-compare-goal gl-university-placed != YES)
	(up-compare-goal gl-barracks-placed != YES)
	(up-compare-goal gl-range-placed != YES)
	(up-compare-goal gl-stable-placed != YES)
	(up-compare-goal gl-monastery-placed != YES)
	(up-compare-goal gl-siege-workshop-placed != YES)
	(up-compare-goal gl-house-placed != YES)
=>
	(set-goal D-TSA NO)
	(set-strategic-number sn-maximum-town-size 10)
)

(defrule
	(goal D-TSA YES)
	(goal MILITARY 1)
=>
	(set-goal D-TSA NO)
)

; =============== FLARE COORDINATION

#load-if-not-defined WONDER-RACE
(defrule
	(players-unit-type-count every-ally 274 == 0)
	(nor	(taunt-detected any-human-ally 40)
		(taunt-detected any-human-ally 222))
	(up-timer-status 47 == timer-disabled)
	(up-timer-status 48 == timer-disabled)
	(up-compare-goal 445 != 2)
	(up-compare-goal 446 != 2)
=>
	(up-jump-rule 8)
)

(defrule
	(up-pending-objects c: market < 2)
	(taunt-detected any-human-ally 40)
	(up-compare-goal 445 != 2)
=>
	(enable-timer 47 10)
	(set-goal 445 2)
	(chat-to-allies "Controlled market placing has been allowed for 10 seconds")
	(chat-to-allies "Flare the position for market")
	(up-reset-placement c: market)
)

(defrule
	(timer-triggered 47)
=>
	(disable-timer 47)
	(set-goal 445 0)
	(acknowledge-taunt every-ally 40)
)

(defrule
	(up-pending-objects c: market < 2)
	(players-unit-type-count any-human-ally flare > 0)
	(taunt-detected any-human-ally 40)
	(can-build market)
=>
	(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data this-any-human-ally flare c: 0)
	(up-build place-control 0 c: market)
	(acknowledge-taunt every-ally 40)
	(disable-timer 47)
	(set-goal 445 0)
	(set-goal gl-disable-market-placing YES)
	(chat-to-allies "1Attempting to place market to the flared position")
)

(defrule
	(up-pending-objects c: market > 1)
	(players-unit-type-count any-human-ally flare > 0)
	(taunt-detected any-human-ally 40)
=>
	(acknowledge-taunt every-ally 40)
	(disable-timer 47)
	(set-goal 445 0)
	(chat-to-allies "2I'm already building atleast 2 markets, try again later")
)

(defrule
	(taunt-detected any-human-ally 222)
	(up-compare-goal 446 != 2)
=>
	(enable-timer 48 10)
	(set-goal 446 2)
	(chat-to-allies "Unit control has been allowed for 10 seconds")
	(chat-to-allies "Flare the position for units")
)

(defrule
	(timer-triggered 48)
=>
	(disable-timer 48)
	(set-goal 446 0)
	(acknowledge-taunt every-ally 222)
)

(defrule
	(players-unit-type-count any-human-ally flare > 0)
	(taunt-detected any-human-ally 222)
=>
	(set-strategic-number sn-disable-defend-groups 1)
	(set-strategic-number sn-retreating 0)
	(set-strategic-number sn-unit-spreading2 0)
	(disable-timer 1)
	(disable-timer 7)
	(disable-timer 14)
	(enable-timer 44 180)
	(disable-timer 48)
	(set-strategic-number sn-hitting-pop-cap NO)
	(set-goal MILITARY 0)
	(set-goal 446 0)
	(chat-to-allies "1I'm sending my units there")
)

(defrule
	(players-unit-type-count any-human-ally flare > 0)
	(taunt-detected any-human-ally 222)
=>
	(up-reset-unit c: -1)
	(up-find-flare gl-point-x)
	(up-reset-search 1 1 1 1)
	(up-filter-exclude -1 -1 -1 -1)
	(up-filter-range -1 -1 -1 -1)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-find-local c: all-units-class c: 200)
	(up-filter-include cmdid-monk -1 -1 -1)
	(up-find-local c: all-units-class c: 200)
	(up-set-target-point gl-point-x)
	(up-target-point gl-point-x action-patrol -1 aggressive)
	(acknowledge-taunt every-ally 222)
)

(defrule
	(building-type-count market > 1)
	(taunt-detected any-human-ally 147)
=>
	(acknowledge-taunt every-ally 147)
	(delete-building market)
	(set-goal gl-disable-market-placing YES)
	(chat-to-allies "1I'll delete the oldest market")
)

(defrule
	(not	(player-in-game any-human-ally))
	(goal gl-disable-market-placing YES)
=>
	(set-goal gl-disable-market-placing NO)
)
#end-if

; =========== SOME USE OF THE KNOWN POSITION AND SO ON

#load-if-defined ARENA-MAP
#load-if-defined UP-4-PLAYER-GAME
(load-random 80 "Barbarian_2.0\TheAntiCysion"); 1v3
#else
(load "Barbarian_2.0\TheAntiCysion"); 1v4+
#end-if
#else
(load-random 80 "Barbarian_2.0\TheAntiCysion")
#end-if

#load-if-not-defined DEATH-MATCH
(defrule
	(or	(up-compare-goal gl-current-age > gv-dark)
		(or	(strategic-number sn-target-evaluation-hitpoints == 1)
			(up-compare-const gv-feudal-age-end == 1)))
=>
	(up-jump-rule 7)
)

(defrule
	(up-compare-goal gl-strategy != sling)
	(up-compare-goal gl-strategy != grush)
	(up-compare-goal gl-strategy-type <= controlled-flush)
	(goal SLING 0)
	(goal gl-current-age gv-dark)
	(game-time > 20)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(goal POSITION POCKET)
	(up-compare-goal gl-anti-cysion != YES)
=>
	(set-goal gl-strategy regicide-strategy)
	(set-goal gl-strategy-type FC2)
	(set-goal gl-strategy-aggressiveness-level LOW)
)

(defrule
	(civ-selected hun)
	(goal gl-strategy CA-rush)
	(goal SLING 0)
	(goal gl-current-age gv-dark)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(goal POSITION POCKET)
=>
	(set-goal gl-strategy CA-boom)
	(set-goal gl-strategy-type FC2)
	(set-goal gl-strategy-aggressiveness-level LOW)
)

(defrule
	(not	(civ-selected hun))
	(or	(goal gl-strategy fi-archer-flush)
		(goal gl-strategy xbow-rush))
	(goal SLING 0)
	(goal gl-current-age gv-dark)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(goal POSITION POCKET)
=>
	(set-goal gl-strategy xbow-boom)
	(set-goal gl-strategy-type FC2)
	(set-goal gl-strategy-aggressiveness-level LOW)
)

(defrule
	(civ-selected celtic)
	(goal gl-strategy scorpion-rush)
	(goal SLING 0)
	(goal gl-current-age gv-dark)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(goal POSITION POCKET)
=>
	(set-goal gl-strategy regicide-strategy)
	(set-goal gl-strategy-type FC2)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(disable-self)
)

(defrule
	(goal gl-strategy eagle-rush)
	(goal SLING 0)
	(goal gl-current-age gv-dark)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(goal POSITION POCKET)
=>
	(set-goal gl-strategy regicide-strategy)
	(set-goal gl-strategy-type FC)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(disable-self)
)

(defrule
	(civ-selected turkish)
	(player-valid 3)
	(goal gl-strategy turkish-fast-imp)
	(goal SLING 0)
	(goal gl-current-age gv-dark)
	(up-compare-goal gl-rush-suitability-on-map >= LOW)
	(goal POSITION FLANK)
=>
	(set-goal gl-strategy castle-drop)
	(set-goal gl-strategy-type FC)
	(set-goal gl-strategy-aggressiveness-level LOW)
	(disable-self)
)

(defrule
	(goal gl-DRUSH YES)
	(or	(goal gl-strategy fast-eagles)
		(or	(goal gl-strategy heavy-ranged-flush)
			(or	(goal gl-strategy scrush)
				(or	(goal gl-strategy wall-boom)
					(or	(goal gl-strategy scout-skirm-flush)
						(or	(goal gl-nothing-style-map YES)
							(up-compare-goal gl-rush-suitability-on-map <= AVERAGE)))))))
=>
	(set-goal gl-DRUSH NO)
	(chat-to-player my-player-number "2This strategy doesn't allow drushing")
)

#load-if-not-defined UP-POCKET-POSITION
(defrule
	(or	(and	(goal POSITION POCKET)
			(or	(and	(goal gl-strategy fi-monk-rush)
					(up-compare-goal gl-rush-suitability-on-map >= AVERAGE))
				(goal gl-eew-strategy-type fast-imp)))
		(and	(goal SLING 3)
			(goal gl-strategy monk-boom)))
	(goal gl-current-age gv-dark)
=>
	(set-goal gl-strategy regicide-strategy)
	(set-goal gl-strategy-type FC2)
	(set-goal gl-strategy-aggressiveness-level LOW)
)
#else
(defrule
	(or	(and	(goal POSITION POCKET)
			(or	(goal gl-strategy fi-monk-rush)
				(goal gl-eew-strategy-type fast-imp)))
		(and	(goal SLING 3)
			(goal gl-strategy monk-boom)))
	(goal gl-current-age gv-dark)
=>
	(set-goal gl-strategy regicide-strategy)
	(set-goal gl-strategy-type FC2)
	(set-goal gl-strategy-aggressiveness-level LOW)
)
#end-if

; ============= GATHERING UNITS INSIDE BUILDINGS

#load-if-not-defined DEFEND-WONDER
#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
#load-if-not-defined DIFFICULTY-MODERATE
#load-if-defined POPULATION-CAP-200
(defrule
	(or	(goal gl-gathering-inside ALL)
		(and	(or	(players-unit-type-count focus-player archer-line > 10)
				(players-unit-type-count focus-player cavalry-archer-line > 10))
			(and	(unit-type-count mangonel-line > 0)
				(and	(game-time < 2400)
					(not	(up-player-distance target-player < 40))))))
=>
	(set-goal gl-gathering-inside RESET); If garrisoning is required, this'll get overwritten
)

(defrule
	(or	(goal MILITARY 1)
		(or	(military-population > 25)
			(or	(game-time > 1900)
				(and	(game-time > 1500)
					(goal POSITION POCKET)))))
	(up-compare-goal gl-gathering-inside >= MOST)
	(nand	(goal gl-gathering-inside EVEN-CASTLE)
		(up-compare-goal gl-garrison-rule-fired != YES)); Don't loop reset
=>
	(set-goal gl-gathering-inside RESET)
)

(defrule
	(or	(and	(or	(players-unit-type-count focus-player archer-line > 10)
				(players-unit-type-count focus-player cavalry-archer-line > 10))
			(and	(unit-type-count mangonel-line > 0)
				(game-time < 2400)))
		(goal gl-strategy wall-boom))
=>
	(up-jump-rule 3)
)

(defrule
	(up-compare-goal MILITARY <= 0)
	(or	(and	(or	(up-projectile-detected projectile-castle < 30000)
				(players-military-population focus-player > 10))
			(and	(up-player-distance target-player < 36)
				(and	(unit-type-count battering-ram-line < 2)
					(unit-type-count trebuchet-set < 1))))
		(players-military-population focus-player > 40))
	(military-population < 28)
	(up-compare-goal gl-my-villager-count-total >= 65)
	(up-compare-goal gl-gathering-inside != EVEN-CASTLE)
=>
	(set-goal gl-gathering-inside EVEN-CASTLE)
)

(defrule
	(up-compare-goal MILITARY <= 0)
	(or	(and	(players-building-type-count target-player watch-tower > 7)
			(up-compare-goal gl-my-villager-count-total >= 65))
		(and	(players-building-type-count target-player watch-tower > 5)
			(unit-type-count battering-ram-line < 3)))
	(up-projectile-detected projectile-watch-tower < 30000)
	(military-population < 28)
	(up-compare-goal gl-gathering-inside != EVEN-CASTLE)
=>
	(set-goal gl-gathering-inside EVEN-CASTLE)
)

(defrule
	(up-compare-goal MILITARY <= 0)
	(players-military-population focus-player > 20)
	(or	(military-population < 12)
		(players-military-population focus-player > 30))
	(military-population < 20)
	(up-compare-goal gl-my-villager-count-total >= 65)
	(up-compare-goal gl-gathering-inside != EVEN-CASTLE)
=>
	(set-goal gl-gathering-inside EVEN-CASTLE)
)

(defrule
	(or	(up-compare-goal MILITARY > 0)
		(or	(and	(up-compare-goal threat-time > 30000)
				(or	(not	(up-player-distance target-player < 36))
					(or	(unit-type-count battering-ram-line > 1)
						(unit-type-count trebuchet-set > 0))))
			(or	(military-population >= 28)
				(population < 65))))
	(goal gl-garrison-rule-fired YES); Same as EVEN-CASTLE with the additional requirement that gathering-inside has actually been used -> ungarrisoning doesn't loop
=>
	(set-goal gl-gathering-inside RESET)
)

(defrule
	(or	(up-compare-goal MILITARY > 0)
		(or	(and	(up-compare-goal threat-time > 30000)
				(or	(not	(up-player-distance target-player < 36))
					(or	(unit-type-count battering-ram-line > 1)
						(unit-type-count trebuchet-set > 0))))
			(or	(military-population >= 28)
				(population < 65))))
	(goal gl-gathering-inside EVEN-CASTLE); If this returns true but the rule above didn't trigger, we do not need to ungarrison anything
=>
	(set-goal gl-gathering-inside NO)
)

(defrule
	(game-time < 1800)
	(unit-type-count battering-ram-line == 0)
	(unit-type-count trebuchet-set == 0)
	(unit-type-count knight-line < 5)
	(players-military-population target-player < 5); No risk of getting hurt by enemy units, just a forward tower
	(or	(players-building-type-count target-player stone-wall-line > 3)
		(players-building-type-count target-player palisade-wall > 3)); But it's walled
	(players-building-type-count target-player watch-tower > 0)
	(up-projectile-detected projectile-watch-tower < 30000)
	(up-player-distance target-player < 25)
	(military-population < 28)
	(up-compare-goal gl-my-villager-count-total >= 25)
	(up-compare-goal gl-gathering-inside != EVEN-CASTLE)
=>
	(set-goal gl-gathering-inside EVEN-CASTLE)
)

(defrule
	(up-compare-goal MILITARY <= 0)
	(or	(military-population < 12)
		(players-military-population focus-player > 6))
	(military-population < 18)
	(up-compare-goal gl-my-villager-count-total >= 30)
	(up-player-distance target-player < 33)
	(nand	(building-type-count castle == 1)
		(and	(goal threat-source siege-weapon-class)
			(goal threat-target building-class)))
	(unit-type-count battering-ram-line < 2)
	(players-building-type-count target-player watch-tower > 3)
	(up-compare-goal gl-gathering-inside != EVEN-CASTLE)
=>
	(set-goal gl-gathering-inside EVEN-CASTLE)
)

(defrule
	(up-compare-goal MILITARY <= 0)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1000)
	(or	(players-building-type-count target-player watch-tower > 15)
		(or	(players-building-type-count target-player castle > 2)
			(players-building-type-count target-player bombard-tower > 4)))
	(up-player-distance target-player < 40)
	(up-compare-goal gl-my-villager-count-total >= 65)
	(unit-type-count battering-ram-line < 7)
	(unit-type-count trebuchet-set < 1)
	(up-projectile-detected projectile-fortification < 30000)
	(military-population < 40)
	(up-compare-goal gl-gathering-inside != EVEN-CASTLE)
=>
	(set-goal gl-gathering-inside EVEN-CASTLE)
)

#load-if-not-defined UP-POCKET-POSITION
(defrule
	(up-compare-goal MILITARY <= 0)
	(game-time < 2400)
	(up-compare-goal gl-current-age >= gv-castle)
	(players-building-type-count target-player castle > 0)
	(nand	(building-type-count castle == 1)
		(and	(goal threat-source siege-weapon-class)
			(goal threat-target building-class)))
	(up-player-distance target-player < 33)
	(unit-type-count battering-ram-line < 3)
	(up-projectile-detected projectile-castle < 300000)
	(military-population < 23)
	(population > 30)
	(up-compare-goal gl-gathering-inside != EVEN-CASTLE)
=>
	(set-goal gl-gathering-inside EVEN-CASTLE)
)
#else
(defrule
	(up-compare-goal MILITARY <= 0)
	(game-time < 2400)
	(up-compare-goal gl-current-age >= gv-castle)
	(players-building-type-count target-player castle > 0)
	(nand	(building-type-count castle == 1)
		(and	(goal threat-source siege-weapon-class)
			(goal threat-target building-class)))
	(up-player-distance target-player < 33)
	(unit-type-count battering-ram-line < 3)
	(up-projectile-detected projectile-castle < 300000)
	(military-population < 23)
	(population > 65)
	(up-compare-goal gl-gathering-inside != EVEN-CASTLE)
=>
	(set-goal gl-gathering-inside EVEN-CASTLE)
)
#end-if

(defrule
	(or	(up-compare-goal MILITARY >= 1)
		(or	(goal gl-current-age gv-dark)
			(or	(unit-type-count mangonel > 0); We want to unleash that
				(or	(up-compare-goal gl-my-villager-count-total < 20)
					(or	(building-type-count castle > 0)
						(up-compare-goal threat-time > 30000))))))
=>
	(up-jump-rule 6)
)

(defrule
	(or	(goal gl-strategy fi-monk-rush)
		(or	(and	(goal gl-strategy turkish-fast-imp)
				(current-age < imperial-age))
			(or	(goal gl-strategy monk-mango-push)
				(or	(goal gl-strategy castle-push)
					(goal gl-strategy wall-boom)))))
=>
	(up-jump-rule 5)
)

(defrule
	(up-compare-goal gl-gathering-inside < ALL)
	(up-compare-goal gl-strategy-type <= controlled-flush)
	(up-compare-goal gl-current-age <= gv-feudal)
	(players-military-population focus-player > 3)
	(or	(military-population < 4)
		(players-military-population focus-player > 6))
	(or	(military-population < 6)
		(players-military-population focus-player > 9))
	(or	(military-population < 8)
		(players-military-population focus-player > 16))
	(military-population < 11)
=>
	(set-goal gl-gathering-inside ALL)
)

(defrule
	(up-compare-goal gl-gathering-inside < ALL)
	(up-compare-goal gl-strategy-type <= controlled-flush)
	(up-compare-goal gl-current-age <= gv-feudal)
	(up-compare-goal gl-my-villager-count-total > 40)
	(players-military-population focus-player > 22)
	(or	(military-population < 15)
		(players-military-population focus-player > 30))
	(military-population < 21)
=>
	(set-goal gl-gathering-inside ALL)
)

(defrule
	(up-compare-goal gl-gathering-inside < ALL)
	(or	(up-compare-goal gl-strategy-type >= FC)
		(up-compare-goal gl-current-age >= gv-feudal-up))
	(players-current-age focus-player == feudal-age)
	(players-military-population focus-player > 4)
	(or	(military-population < 3)
		(players-military-population focus-player > 7))
	(or	(military-population < 5)
		(and	(players-military-population focus-player > 14)
			(building-type-count castle == 0)))
	(military-population < 8)
=>
	(set-goal gl-gathering-inside ALL)
)

(defrule
	(up-compare-goal gl-gathering-inside < ALL)
	(or	(up-compare-goal gl-strategy-type >= FC)
		(up-compare-goal gl-current-age >= gv-feudal-up))
	(players-current-age focus-player >= castle-age)
	(players-military-population focus-player > 3)
	(or	(military-population < 3)
		(players-military-population focus-player > 7))
	(or	(military-population < 5)
		(and	(players-military-population focus-player > 12)
			(building-type-count castle == 0)))
	(military-population < 7)
=>
	(set-goal gl-gathering-inside ALL)
)

(defrule
	(up-compare-goal gl-gathering-inside < ALL)
	(or	(up-compare-goal gl-strategy-type >= FC)
		(up-compare-goal gl-current-age >= gv-feudal-up))
	(building-type-count castle == 0)
	(up-compare-goal gl-my-villager-count-total > 35)
	(players-military-population focus-player > 18)
	(or	(military-population < 11)
		(players-military-population focus-player > 21))
	(military-population < 13)
=>
	(set-goal gl-gathering-inside ALL)
)

(defrule
	(not	(goal MILITARY 1))
	(strategic-number sn-minimum-water-body-size-for-dock == 1000)
	(up-compare-goal threat-time < 30000)
	(up-compare-goal gl-gathering-inside < LAND-ARMY)
	(civilian-population > 80)
	(population < 175)
	(population < almost-full-pop)
	(players-military-population focus-player > 30)
	(or	(players-military-population focus-player > 45)
		(soldier-count < 17))
	(soldier-count < 27)
=>
	(set-goal gl-gathering-inside LAND-ARMY)
)
#end-if
#end-if
#end-if
#end-if
#end-if

#end-if

(defrule
	(or	(goal gl-gathering-inside EVEN-CASTLE)
		(goal gl-gathering-inside LAND-ARMY))
=>
	(up-gather-inside c: castle c: 1)
	(set-goal gl-garrison-rule-fired YES)
)

(defrule
	(up-compare-goal gl-gathering-inside >= ALL)
=>
	(up-gather-inside c: monastery c: 1)
)

(defrule
	(up-compare-goal gl-gathering-inside >= MOST)
	(up-compare-goal gl-gathering-inside != LAND-ARMY)
=>
	(up-gather-inside c: dock c: 1)
)

(defrule
	(up-compare-goal gl-gathering-inside >= MOST)
=>
	(up-gather-inside c: barracks c: 1)
	(up-gather-inside c: archery-range c: 1)
	(up-gather-inside c: stable c: 1)
	(up-gather-inside c: siege-workshop c: 1)
)

(defrule
	(goal gl-gathering-inside RESET)
=>
	(up-gather-inside c: barracks c: 0)
	(up-gather-inside c: castle c: 0)
	(up-gather-inside c: archery-range c: 0)
	(up-gather-inside c: stable c: 0)
	(up-gather-inside c: siege-workshop c: 0)
	(up-gather-inside c: dock c: 0)
	(up-gather-inside c: monastery c: 0)
	(up-ungarrison c: barracks)
	(up-ungarrison c: monastery)
	(up-ungarrison c: archery-range)
	(up-ungarrison c: stable)
	(up-ungarrison c: castle)
	(up-ungarrison c: dock)
	(up-ungarrison c: siege-workshop)
	(set-goal gl-garrison-rule-fired NO)
)

(defrule
	(goal gl-gathering-inside RESET)
=>
	(set-goal gl-gathering-inside NO)
)

; ============== THROWING A PATROL ATTACK TO ENEMY MONASTERY

(defrule
	(up-compare-goal winning-player <= 0)
=>
	(up-jump-rule 10)
)

(defrule
	(or	(not	(goal MILITARY 1))
		(not	(enemy-captured-relics)))
	(up-compare-goal winning-player > 0)
	(up-timer-status 46 != timer-running)
=>
	(up-jump-rule 2)
)

(defrule
	(up-compare-goal winning-player > 0)
	(up-timer-status 46 != timer-running)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number g:= winning-player)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-remote c: monastery c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object gl-object-point-x)
	(up-set-target-point gl-object-point-x)
	(up-filter-distance c: 3 c: -1)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(up-filter-include cmdid-monk -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(up-target-point gl-object-point-x action-patrol -1 defensive)
)

(defrule
	(up-compare-goal winning-player > 0)
	(up-timer-status 46 != timer-running)
=>
	(enable-timer 46 50)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
)

; ============== TO WONDER

(defrule
	(or	(up-compare-goal winning-player <= 0)
		(or	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
			(players-building-type-count every-enemy wonder == 0)))
=>
	(up-jump-rule 3)
)

(defrule
	(goal MILITARY 1)
	(up-compare-goal winning-player > 0)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number g:= winning-player)
)

(defrule
	(goal MILITARY 1)
	(players-building-type-count focus-player wonder > 0)
	(stance-toward focus-player enemy)
	(up-compare-goal winning-player > 0)
=>
	(up-set-attack-stance battering-ram-line c: stand-ground)
)

(defrule
	(goal MILITARY 1)
	(players-building-type-count focus-player wonder > 0)
	(stance-toward focus-player enemy)
	(up-compare-goal winning-player > 0)
	(up-timer-status 46 != timer-running)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-filter-exclude -1 actionid-attack -1 -1)
	(up-find-local c: battering-ram-line c: 240)
	(up-find-remote c: wonder c: 1)
	(up-target-objects 0 action-patrol -1 stand-ground)
	(enable-timer 46 20)
	(enable-timer 40 60)
)

(defrule
	(goal MILITARY 1)
	(up-compare-goal winning-player > 0)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
)

; ============== REPAIRING WONDER

(defrule
	(or	(players-building-type-count any-ally wonder > 0)
		(building-type-count wonder > 0))
	(up-compare-goal winning-player > 0)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number g:= winning-player)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-remote c: wonder c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-hitpoints gl-max-scout-hp)
)

(defrule
	(or	(stance-toward focus-player ally)
		(goal winning-player my-player-number))
	(game-time g:> gl-wonder-repair-time)
	(up-compare-goal gl-max-scout-hp < 4700)
	(up-compare-goal winning-player > 0)
=>
	(up-find-local c: villager-class c: 15)
	(up-target-objects -1 action-default -1 -1)
	(up-get-fact game-time 0 gl-wonder-repair-time)
	(up-modify-goal gl-wonder-repair-time c:+ 5)
)

(defrule
	(or	(players-building-type-count any-ally wonder > 0)
		(building-type-count wonder > 0))
	(up-compare-goal winning-player > 0)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
)

; ============== SAVING THE SCOUT FROM TC

#load-if-not-defined DEATH-MATCH
(defrule
	(or	(game-time > 900)
		(or	(not	(goal gl-boar-stealing -1))
			(or	(unit-type-count scout-unit == 0)
				(or	(strategic-number sn-number-explore-groups == 0)
					(current-age >= castle-age)))))
	(goal gl-dodging-TC -1)
=>
	(up-jump-rule 12)
)

(defrule
	(true)
=>
	(up-modify-goal gl-real-focus-player s:= sn-focus-player-number)
)

(defrule
	(goal gl-dodging-TC -1)
=>
	(set-strategic-number sn-focus-player-number 0)
)

(defrule
	(goal gl-dodging-TC -1)
	(strategic-number sn-focus-player-number < 8)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-object-point-x)
	(up-set-target-point gl-object-point-x)
	(up-filter-range -1 -1 -1 10)
)

(defrule
	(stance-toward focus-player enemy)
	(or	(up-find-remote c: town-center c: 1)
		(up-find-remote c: castle c: 1))
	(goal gl-dodging-TC -1)
=>
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(up-reset-unit c: scout-unit)
	(up-reset-scouts)
	(set-goal gl-dodging-TC 1)
	(up-modify-goal gl-saved-focus-player2 s:= sn-focus-player-number)
	(chat-to-player my-player-number "Scary object found!")
)

(defrule
	(goal gl-dodging-TC -1)
	(player-valid focus-player)
	(strategic-number sn-focus-player-number < 8)
=>
	(up-jump-rule -3)
)

(defrule
	(stance-toward focus-player enemy)
	(up-compare-goal gl-dodging-TC >= 1)
	(up-timer-status 46 != timer-running)
=>
	(up-modify-sn sn-focus-player-number g:= gl-saved-focus-player2)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-object-point-x)
	(up-set-target-point gl-object-point-x)
	(up-filter-range -1 -1 -1 11)
)

(defrule
	(stance-toward focus-player enemy)
	(nor	(up-find-remote c: town-center c: 1)
		(up-find-remote c: castle c: 1))
	(goal gl-dodging-TC 1)
=>
	(set-goal gl-dodging-TC 2)
	(chat-to-player my-player-number "Scary object dodged!")
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
	(enable-timer 46 7)
)

(defrule
	(goal gl-dodging-TC 2)
=>
	(up-modify-sn sn-focus-player-number g:= gl-saved-focus-player2)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-object-point-x)
	(up-set-target-point gl-object-point-x)

)

(defrule
	(goal gl-dodging-TC 2)
=>
	(up-filter-range -1 -1 -1 30)
	(up-find-remote c: town-center c: 1)
	(up-find-remote c: castle c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object gl-point-x)
	(up-lerp-tiles gl-object-point-x gl-point-x c: -7)
	(up-set-target-point gl-object-point-x)
	(up-target-point 0 action-move -1 no-attack)
)

(defrule
	(goal gl-dodging-TC 2)
	(up-timer-status 46 != timer-running)
=>
	(set-goal gl-dodging-TC -1)
)

(defrule
	(goal gl-dodging-TC 1)
	(up-timer-status 46 != timer-running)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-set-target-point gl-object-point-x)
	(up-find-remote c: town-center c: 1)
	(up-find-remote c: castle c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object gl-point-x)
	(up-cross-tiles gl-object-point-x gl-point-x c: 7)
	(up-target-point gl-object-point-x action-move -1 no-attack)
	(enable-timer 46 1)
)

(defrule
	(up-compare-goal gl-real-focus-player > 0)
=>
	(up-modify-sn sn-focus-player-number g:= gl-real-focus-player)
	(set-goal gl-real-focus-player -1)
)
#end-if

; ============== STEALING BOAR

#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
#load-if-not-defined DIFFICULTY-MODERATE
#load-if-not-defined UP-SCENARIO-GAME
(defrule
	(or	(game-time > 900)
		(or	(up-compare-goal gl-boar-stealing >= 3)
			(strategic-number sn-town-center-start == 0)))
=>
	(up-jump-rule 26)
)

(defrule
	(up-compare-goal gl-boar-stealing >= 2)
;	(up-timer-status 46 != timer-running)
;	(unit-type-count villager-hunter > 0)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-object-point-x)
	(up-get-point position-self gl-point-x)
	(up-get-point position-self gl-saved-point-x)
	(up-cross-tiles gl-object-point-x gl-point-x c: 5)
)

(defrule
	(up-compare-goal gl-boar-stealing >= 2)
;	(up-timer-status 46 != timer-running)
;	(unit-type-count villager-hunter > 0)
=>
	(up-modify-goal gl-saved-point-x g:- gl-object-point-x)
	(up-modify-goal gl-saved-point-y g:- gl-object-point-y)
	(up-modify-goal gl-saved-point-x c:* 6)
	(up-modify-goal gl-saved-point-y c:* 6)
	(up-get-point-distance gl-point-x gl-object-point-x gl-point-distance)
	(up-modify-goal gl-saved-point-x g:/ gl-point-distance)
	(up-modify-goal gl-saved-point-y g:/ gl-point-distance)
	(up-modify-goal gl-point-x g:- gl-saved-point-x)
	(up-modify-goal gl-point-y g:- gl-saved-point-y)
	(up-target-point gl-point-x action-move -1 -1)
;	(enable-timer 46 1)
)

(defrule
	(or	(and	(up-compare-goal gl-point-distance2 < 8)
			(up-compare-goal gl-point-distance2 >= 0))
		(or	(goal gl-boar-stealing -1)
			(up-compare-goal gl-boar-stealing >= 2)))
=>
	(up-jump-rule 13)
)

(defrule
	(up-compare-goal gl-boar-stealing >= 1)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 0)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-saved-point-x)
	(up-set-target-point gl-saved-point-x)
	(up-filter-range -1 -1 -1 15)
	(up-find-remote g: gl-boar-unit c: 1)
	(up-set-target-by-id g: gl-stored-boar-id)
	(up-get-object-data object-data-action gl-max-scout-hp); Well, not the correct goal anymore
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
)

(defrule
	(up-timer-status 29 != timer-running)
	(or	(goal threat-target infantry-class)
		(goal threat-target scout-cavalry-class))
	(up-compare-goal threat-time < 3000)
	(up-object-data object-data-action == actionid-attack)
=>
	(enable-timer 29 0)
)

(defrule
	(not	(timer-triggered 29))
=>
	(up-jump-rule 6)
)

(defrule
;	(timer-triggered 29)
;	(up-compare-goal 344 != 1)
;	(up-timer-status 46 != timer-running)
	(up-compare-goal gl-point-distance >= 0)
	(up-compare-goal gl-point-distance < 4)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 0)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-saved-point-x)
	(up-set-target-point gl-saved-point-x)
	(up-filter-range -1 -1 -1 15)
)

(defrule
;	(timer-triggered 29)
;	(up-compare-goal 344 != 1)
;	(up-timer-status 46 != timer-running)
	(up-compare-goal gl-point-distance >= 0)
	(up-compare-goal gl-point-distance < 4)
=>
	(up-find-remote g: gl-boar-unit c: 1)
	(up-set-target-by-id g: gl-stored-boar-id)
	(up-get-point position-object gl-object-point-x)
	(up-get-point position-object gl-saved-point-x)
	(up-get-point position-self gl-point-x)
;	(up-lerp-tiles gl-object-point-x gl-point-x c: 15)
;	(up-cross-tiles gl-object-point-x gl-saved-point-x c: boar-tiles-to-left)
	(up-target-point gl-point-x action-move -1 no-attack)
;	(enable-timer 46 1)
	(set-goal 344 0)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
;	(chat-to-all "Run")
)

(defrule
;	(timer-triggered 29)
	(up-compare-goal 345 != 1)
	(up-timer-status 46 != timer-running)
	(up-compare-goal gl-point-distance >= 3)
	(up-compare-goal gl-point-distance < 7)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 0)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-saved-point-x)
	(up-set-target-point gl-saved-point-x)
	(up-filter-range -1 -1 -1 15)
)

(defrule
;	(timer-triggered 29)
	(up-compare-goal 345 != 1)
	(up-timer-status 46 != timer-running)
	(up-compare-goal gl-point-distance >= 3)
	(up-compare-goal gl-point-distance < 7)
=>
	(up-get-point position-object gl-point-x)
	(up-find-remote g: gl-boar-unit c: 1)
	(up-set-target-by-id g: gl-stored-boar-id)
	(up-get-point position-object gl-object-point-x)
;	(up-get-point position-object gl-saved-point-x)
;	(up-get-point position-self gl-point-x)
	(up-lerp-tiles gl-object-point-x gl-point-x c: 4); 8
	(up-cross-tiles gl-object-point-x gl-saved-point-x c: boar-tiles-to-left)
	(up-target-point gl-object-point-x action-move -1 no-attack)
	(enable-timer 46 1)
	(set-goal 344 1)
	(set-goal 345 1)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
;	(chat-to-all "zig")
)

(defrule
;	(timer-triggered 29)
	(up-compare-goal 345 != 2)
	(up-timer-status 46 != timer-running)
	(up-compare-goal gl-point-distance >= 3)
	(up-compare-goal gl-point-distance < 7)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 0)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-saved-point-x)
	(up-set-target-point gl-saved-point-x)
	(up-filter-range -1 -1 -1 15)
)

(defrule
;	(timer-triggered 29)
	(up-compare-goal 345 != 2)
	(up-timer-status 46 != timer-running)
	(up-compare-goal gl-point-distance >= 3)
	(up-compare-goal gl-point-distance < 7)
=>
	(up-get-point position-object gl-point-x)
	(up-find-remote g: gl-boar-unit c: 1)
	(up-set-target-by-id g: gl-stored-boar-id)
	(up-get-point position-object gl-object-point-x)
;	(up-get-point position-object gl-saved-point-x)
;	(up-get-point position-self gl-point-x)
	(up-lerp-tiles gl-object-point-x gl-point-x c: 4)
	(up-cross-tiles gl-object-point-x gl-saved-point-x c: boar-tiles-to-right)
	(up-target-point gl-object-point-x action-move -1 no-attack)
	(enable-timer 46 1)
	(set-goal 344 2)
	(set-goal 345 2)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
;	(chat-to-all "zag")
)

(defrule
	(up-compare-goal 344 < 0)
;	(up-timer-status 46 != timer-running)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 0)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-saved-point-x)
	(up-set-target-point gl-saved-point-x)
	(up-filter-range -1 -1 -1 15)
	(up-find-remote g: gl-boar-unit c: 1)
	(up-set-target-object search-remote c: 0)
	(disable-self)
)

(defrule
	(up-compare-goal 344 < 0)
;	(up-timer-status 46 != timer-running)
=>
	(up-get-point position-object gl-object-point-x)
	(up-target-objects gl-object-point-x action-default -1 -1)
	(up-get-point-distance gl-saved-point-x gl-object-point-x gl-point-distance)
;	(up-chat-data-to-all "Distance: %d" g: gl-point-distance)
;	(enable-timer 46 20)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
	(disable-timer 46)
	(disable-timer 29)
	(enable-timer 12 25)
	(up-get-object-data object-data-id gl-stored-boar-id)
	(disable-self)
)

(defrule
	(up-compare-goal gl-boar-stealing >= 1)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 0)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-saved-point-x)
	(up-set-target-point gl-saved-point-x)
	(up-filter-range -1 -1 -1 8)
	(up-find-remote g: gl-boar-unit c: 1)
)

(defrule
	(up-compare-goal gl-boar-stealing >= 1)
=>
	(up-set-target-by-id g: gl-stored-boar-id)
	(up-get-point position-object gl-object-point-x)
	(up-get-point-distance gl-saved-point-x gl-object-point-x gl-point-distance)
;	(up-chat-data-to-all "Distance: %d" g: gl-point-distance)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
)

(defrule
	(up-compare-goal gl-boar-stealing >= 1)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 0)
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(set-strategic-number sn-home-exploration-time 0)
	(up-reset-scouts)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object temporary-goal)
)

(defrule
	(up-compare-goal gl-boar-stealing >= 1)
=>
	(up-set-target-point temporary-goal)
	(up-filter-range -1 -1 -1 15)
	(up-find-remote g: gl-boar-unit c: 1)
	(up-set-target-by-id g: gl-stored-boar-id)
	(up-get-point position-object temporary-goal2)
	(up-get-point position-self gl-point-x)
	(up-get-point-distance gl-point-x temporary-goal2 gl-point-distance2)
;	(up-chat-data-to-all "Distance2: %d" g: gl-point-distance2)
	(up-get-target-fact player-distance 0 gl-distance-to-enemy)
	(up-modify-goal gl-distance-to-enemy c:+ 2)
	(up-get-object-data object-data-action gl-max-scout-hp)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
)

(defrule
	(up-compare-goal gl-boar-stealing >= 1)
	(up-compare-goal gl-point-distance2 >= 0)
	(up-compare-goal gl-point-distance2 < 13)
	(dropsite-min-distance live-boar < 15)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 0)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-get-point position-self gl-point-x)
	(up-set-target-point gl-point-x)
	(up-filter-range -1 -1 -1 15)
	(disable-self)
)

(defrule
	(up-compare-goal gl-boar-stealing >= 1)
	(up-compare-goal gl-point-distance2 >= 0)
	(up-compare-goal gl-point-distance2 < 13)
	(dropsite-min-distance live-boar < 15)
=>
	(up-find-local c: villager-class c: 6)
	(up-set-target-by-id g: gl-stored-boar-id)
	(up-find-remote g: gl-boar-unit c: 1)
	(up-target-objects -1 action-default -1 -1)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
	(set-goal gl-boar-stealing 2)
	(disable-self)
)

(defrule
	(up-compare-goal gl-boar-stealing >= 1)
	(or	(and	(up-compare-goal gl-point-distance2 > 15)
			(up-compare-goal gl-point-distance > 15))
		(or	(unit-type-count scout-unit == 0)
			(and	(up-object-data object-data-action != actionid-attack)
				(timer-triggered 12))))
=>
	(set-goal gl-boar-stealing -1)
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
	(chat-to-player my-player-number "Give up with boar stealing")
	(up-set-attack-stance -1 c: aggressive)
	(disable-self)
)

(defrule
	(up-compare-goal gl-boar-stealing >= 1)
	(or	(and	(map-type arena)
			(up-compare-goal gl-distance-to-enemy g:< gl-point-distance2))
		(or	(and	(goal gl-point-distance 0)
				(goal gl-point-distance2 0))
			(game-time > 800)))
=>
	(set-goal gl-boar-stealing -1)
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
	(chat-to-player my-player-number "Give up with boar stealing")
	(up-set-attack-stance -1 c: aggressive)
	(disable-self)
)

(defrule
	(goal gl-boar-stealing 2)
	(dropsite-min-distance boar-hunting < 15)
	(dropsite-min-distance live-boar >= 15)
=>
	(set-goal gl-boar-stealing -1)
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
	(up-set-attack-stance -1 c: aggressive)
	(disable-self)
)

(defrule
	(game-time > 1)
	(game-time < 600)
	(goal gl-boar-stealing -1)
	(up-compare-const boar-stealing-nature == 1)
	(unit-type-count scout-unit > 0)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 0)
	(up-get-point position-self gl-point-x)
	(up-set-target-point gl-point-x)
	(up-reset-search 1 1 1 1)
	(up-filter-include -1 -1 -1 -1)
	(up-filter-exclude -1 -1 -1 -1)
	(up-filter-range -1 -1 min-boar-distance max-boar-distance); 40/110 on most maps
)

(defrule
	(game-time > 1)
	(game-time < 600)
	(goal gl-boar-stealing -1)
	(up-compare-const boar-stealing-nature == 1)
	(up-find-remote g: gl-boar-unit c: 1)
	(unit-type-count scout-unit > 0)
=>
	(set-goal gl-boar-stealing 1)
	(chat-to-player my-player-number "A boar found!")
;	(chat-to-all "A boar found!")
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(set-strategic-number sn-home-exploration-time 0)
	(up-reset-scouts)
	(up-reset-unit c: scout-unit)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
	(disable-self)
)

(defrule
	(game-time > 1)
	(game-time < 600)
	(goal gl-boar-stealing -1)
	(up-compare-const boar-stealing-nature == 1)
	(unit-type-count scout-unit > 0)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
)

; ============== ENEMY SCOUT RUNS INTO TC

(defrule
	(or	(game-time > 900)
		(or	(not	(goal gl-boar-stealing -1))
			(or	(current-age >= castle-age)
				(or	(goal gl-strategy fast-eagles)
					(up-enemy-units-in-town == 0)))))
	(up-compare-goal gl-TC-garrisoning <= 0)
=>
	(up-jump-rule 10)
)

(defrule
	(true)
=>
	(up-modify-goal gl-real-focus-player s:= sn-focus-player-number)
)

(defrule
	(goal gl-TC-garrisoning -1)
=>
	(set-strategic-number sn-focus-player-number 0)
)

(defrule
	(goal gl-TC-garrisoning 2)
=>
	(up-modify-goal gl-real-focus-player s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number g:= gl-saved-focus-player)
	(up-get-point position-self gl-point-x)
	(up-set-target-point gl-point-x)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-filter-distance c: -1 c: 4)
)

(defrule
	(goal gl-TC-garrisoning 2)
	(nor	(up-find-remote c: scout-cavalry-line c: 1)
		(or	(up-find-remote c: eagle-warrior-line c: 1)
			(or	(up-find-remote c: villager c: 1)
				(up-find-remote c: militiaman-line c: 1))))
=>
	(up-ungarrison c: town-center)
	(set-goal gl-TC-garrisoning -1)
)

(defrule
	(goal gl-TC-garrisoning -1)
	(strategic-number sn-focus-player-number < 8)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-get-point position-self gl-point-x)
	(up-set-target-point gl-point-x)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-filter-distance c: -1 c: 4)
)

(defrule
	(goal gl-TC-garrisoning -1)
	(stance-toward focus-player enemy)
	(or	(up-find-remote c: scout-cavalry-line c: 1)
		(or	(up-find-remote c: eagle-warrior-line c: 1)
			(or	(up-find-remote c: militiaman-line c: 1)
				(and	(player-human focus-player)
					(up-find-remote c: villager-class c: 1)))))
	(up-timer-status 30 != timer-running)
=>
	(set-goal gl-TC-garrisoning 1)
	(up-filter-distance c: -1 c: 6)
)

(defrule
	(up-find-local c: villager-class c: 1)
	(goal gl-TC-garrisoning 1)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-filter-distance c: -1 c: 8)
	(up-find-local c: villager-class c: 10)
	(up-get-search-state gl-local-total)
	(up-modify-sn sn-number-garrison-units g:= gl-local-last)
	(up-modify-sn sn-maximum-garrison-fill g:= gl-local-last)
	(up-garrison town-center c: villager-class)
	(up-chat-data-to-player my-player-number "Garrisoning %d villagers" g: gl-local-last)
)

(defrule
	(goal gl-TC-garrisoning 1)
=>
	(enable-timer 30 30)
	(set-goal gl-TC-garrisoning 2)
	(up-modify-goal gl-saved-focus-player s:= sn-focus-player-number)
)

(defrule
	(goal gl-TC-garrisoning -1)
	(player-valid focus-player)
	(strategic-number sn-focus-player-number < 8)
=>
	(up-jump-rule -5)
)

(defrule
	(up-compare-goal gl-real-focus-player > 0)
=>
	(up-modify-sn sn-focus-player-number g:= gl-real-focus-player)
	(set-goal gl-real-focus-player -1)
)
#end-if

; ============== MONK MICRO

#load-if-not-defined KING-OF-THE-HILL
(defrule
	(or	(up-compare-goal MILITARY != 1)
		(or	(unit-type-count monastery-class == 0)
			(or	(up-compare-goal TSA <= 0)
				(strategic-number sn-minimum-water-body-size-for-dock >= 1999))))
=>
	(up-jump-rule 1)
)

(defrule
	(players-building-count target-player > 0)
	(research-completed ri-theocracy)
	(up-timer-status 46 != timer-running)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-filter-exclude -1 -1 731 -1)
	(up-find-local c: monastery-class c: 240)
	(up-get-point position-target gl-object-point-x)
	(up-target-point gl-object-point-x action-patrol -1 -1)
	(enable-timer 46 73)
;	(chat-to-all "Micro-rule")
)

; ============== FORWARD BUILDINGS

(defrule
	(or	(wood-amount <= 2000)
		(or	(food-amount <= 2000)
			(or	(gold-amount <= 2000)
				(or	(strategic-number sn-minimum-water-body-size-for-dock != 998)
					(or	(map-type black-forest)
						(or	(up-compare-const gv-michi-style == 1)
							(or	(unit-type-count dead-builder1 > 5)
								(unit-type-count dead-builder2 > 5))))))))
=>
	(up-jump-rule 5)
)

(defrule
	(goal MILITARY 1)
	(building-type-count-total siege-workshop < 10)
	(up-pending-objects c: siege-workshop < 2)
	(can-build siege-workshop)
=>
	(build-forward siege-workshop)
	(set-goal gl-forward-buildings YES)
)

(defrule
	(goal MILITARY 1)
	(or	(research-completed ri-hussar)
		(research-completed ri-paladin))
	(up-pending-objects c: stable < 2)
	(building-type-count-total stable < 15)
	(can-build stable)
=>
	(build-forward stable)
	(set-goal gl-forward-buildings YES)
)

(defrule
	(goal MILITARY 1)
	(civ-selected aztec)
	(up-pending-objects c: monastery < 2)
	(building-type-count-total monastery < 5)
	(can-build monastery)
=>
	(build-forward monastery)
	(set-goal gl-forward-buildings YES)
)

(defrule
	(goal MILITARY 1)
	(up-pending-objects c: archery-range < 2)
	(building-type-count-total archery-range < 15)
	(can-build archery-range)
=>
	(build-forward archery-range)
	(set-goal gl-forward-buildings YES)
)

(defrule
	(goal MILITARY 1)
	(up-pending-objects c: barracks < 2)
	(building-type-count-total barracks < 15)
	(can-build barracks)
=>
	(build-forward barracks)
	(set-goal gl-forward-buildings YES)
)

(defrule
	(goal gl-forward-buildings YES)
	(not	(goal MILITARY 1))
	(up-timer-status 35 != timer-running)
=>
	(up-get-point position-self gl-point-x)
	(up-set-target-point gl-point-x)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-filter-distance c: 50 c: -1)
	(up-filter-include cmdid-military-building actionid-train -1 -1)
	(up-find-local c: building-class c: 240)
	(up-filter-include -1 actionid-train -1 -1)
	(up-find-local c: monastery c: 240)
	(up-target-point 0 action-stop -1 -1)
	(enable-timer 35 4)
)
#end-if

; ============== HIT-AND-RUN MICRO

#load-if-not-defined DEATH-MATCH-GAME
(defrule
	(or	(game-time > 2200)
		(or	(game-time < 900)
			(or	(goal gl-strategy castle-push)
				(or	(goal gl-strategy fi-monk-rush)
					(or	(up-compare-goal gl-rush-suitability-on-map != GOOD)
						(or	(players-building-type-count any-enemy stone-wall-line > 0)
							(players-building-type-count any-enemy palisade-wall > 7)))))))
=>
	(up-jump-rule 19)
)

(defrule
	(game-time < 2100)
	(goal gl-hit-and-run-unit -1)
	(up-compare-goal gl-hit-and-run-search-distance <= 128)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(goal MILITARY 1)
	(up-compare-goal TSA >= 1)
	(unit-type-count conquistador-line > 4)
=>
	(set-goal gl-hit-and-run-distance 14)
	(set-goal gl-hit-and-run-unit conquistador-line)
	(set-goal gl-hit-and-run-unit-class cavalry-cannon-class)
	(up-set-attack-stance -1 c: aggressive)
	(enable-timer 37 1)
)

(defrule
	(game-time < 2100)
	(goal gl-hit-and-run-unit -1)
	(population < 130)
	(up-compare-goal gl-hit-and-run-search-distance <= 128)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(goal MILITARY 1)
	(up-compare-goal TSA >= 1)
	(unit-type-count war-wagon-line > 4)
=>
	(set-goal gl-hit-and-run-distance 14)
	(set-goal gl-hit-and-run-unit war-wagon-line)
	(set-goal gl-hit-and-run-unit-class cavalry-archer-class)
	(up-set-attack-stance -1 c: aggressive)
	(enable-timer 37 1)
)

(defrule
	(game-time < 2100)
	(goal gl-hit-and-run-unit -1)
	(up-compare-goal gl-hit-and-run-search-distance <= 128)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(goal MILITARY 1)
	(up-compare-goal TSA >= 1)
	(unit-type-count janissary-line > 4)
=>
	(set-goal gl-hit-and-run-distance 14)
	(set-goal gl-hit-and-run-unit janissary-line)
	(set-goal gl-hit-and-run-unit-class archery-cannon-class)
	(up-set-attack-stance -1 c: aggressive)
	(enable-timer 37 1)
)

(defrule
	(game-time < 2100)
	(goal gl-hit-and-run-unit -1)
	(up-compare-goal gl-hit-and-run-search-distance <= 128)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(goal MILITARY 1)
	(up-compare-goal TSA >= 1)
	(unit-type-count hand-cannoneer > 4)
=>
	(set-goal gl-hit-and-run-distance 14)
	(set-goal gl-hit-and-run-unit hand-cannoneer)
	(set-goal gl-hit-and-run-unit-class archery-cannon-class)
	(up-set-attack-stance -1 c: aggressive)
	(enable-timer 37 1)
)

(defrule
	(game-time < 2100)
	(goal gl-hit-and-run-unit -1)
	(population < 130)
	(up-compare-goal gl-hit-and-run-search-distance <= 128)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(goal MILITARY 1)
	(up-compare-goal TSA >= 1)
	(unit-type-count cavalry-archer-line > 4)
=>
	(set-goal gl-hit-and-run-distance 14)
	(set-goal gl-hit-and-run-unit cavalry-archer-line)
	(set-goal gl-hit-and-run-unit-class cavalry-archer-class)
	(up-set-attack-stance -1 c: aggressive)
	(enable-timer 37 1)
)

(defrule
	(goal MILITARY 1)
	(or	(game-time > 2100)
		(or	(up-compare-goal gl-hit-and-run-search-distance > 128)
			(and	(soldier-count > 25)
				(players-military-population target-player < 2))))
	(up-compare-goal gl-hit-and-run-distance > 0)
=>
	(up-reset-unit c: -1)
	(up-set-attack-stance -1 c: aggressive)
	(set-goal gl-hit-and-run-distance 0)
	(set-goal gl-hit-and-run-unit -1)
	(set-goal gl-hit-and-run-unit-class -1)
	(set-goal gl-hit-and-run-search-distance 200)
	(up-jump-rule 13)
)

(defrule
	(or	(up-compare-goal MILITARY != 1)
		(or	(and	(strategic-number sn-minimum-water-body-size-for-dock != 998)
				(up-compare-goal gl-hit-and-run-unit != galley-line))
			(or	(up-compare-goal TSA <= 0)
				(game-time > 2400))))
	(up-compare-goal gl-hit-and-run-distance > 0)
=>
	(up-retreat-to -1 g: gl-hit-and-run-unit)
	(up-set-attack-stance -1 c: aggressive)
	(set-goal gl-hit-and-run-distance 0)
	(set-goal gl-hit-and-run-unit -1)
	(set-goal gl-hit-and-run-unit-class -1)
)

(defrule
	(or	(up-compare-goal MILITARY != 1)
		(or	(and	(strategic-number sn-minimum-water-body-size-for-dock != 998)
				(up-compare-goal gl-hit-and-run-unit != galley-line))
			(or	(goal gl-hit-and-run-unit -1)
				(or	(game-time > 2100)
					(or	(up-player-distance target-player > 128)
						(strategic-number sn-focus-player-number s:!= sn-target-player-number))))))
=>
	(up-jump-rule 11)
)

(defrule
	(goal gl-group-hit-and-run 2)
	(up-compare-goal threat-player > 0)
	(up-compare-goal threat-target g:== gl-hit-and-run-unit-class)
	(up-compare-goal threat-time < 20000)
	(up-timer-status 37 != timer-running)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local g: gl-hit-and-run-unit c: 40)
	(up-set-target-point gl-object-point-x)
	(up-target-point gl-object-point-x action-move -1 no-attack)
	(set-goal gl-group-hit-and-run 1)
	(enable-timer 37 3)
	(enable-timer 40 30)
	(set-goal gl-hit-and-run-distance 14)
)

(defrule
	(goal gl-group-hit-and-run 2)
	(or	(up-compare-goal threat-time > 20000)
		(or	(up-compare-goal threat-target g:!= gl-hit-and-run-unit-class)
			(up-compare-goal threat-player <= 0)))
	(up-timer-status 37 != timer-running)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local g: gl-hit-and-run-unit c: 40)
	(up-set-target-point gl-object-point-x)
	(up-target-point gl-object-point-x action-move -1 no-attack)
	(set-goal gl-group-hit-and-run 1)
	(enable-timer 37 2)
	(enable-timer 40 30)
	(set-goal gl-hit-and-run-distance 6)
)

(defrule
	(up-compare-goal 355 != 4)
	(up-timer-status 37 != timer-running)
=>
	(up-get-point position-self gl-point-x)
	(up-set-target-point gl-point-x)
	(set-goal gl-hit-and-run-search-distance -1)
)

(defrule
	(up-compare-goal 355 != 4)
	(up-timer-status 37 != timer-running)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-filter-exclude -1 -1 orderid-explore -1)
	(up-find-local g: gl-hit-and-run-unit c: 40)
	(up-modify-goal gl-hit-and-run-search-distance c:+ 3)
	(up-filter-distance c: -1 g: gl-hit-and-run-search-distance)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-find-remote c: all-units-class c: 3)
	(up-filter-include cmdid-monk -1 -1 -1)
	(up-find-remote c: all-units-class c: 3)
	(up-filter-include cmdid-villager -1 -1 -1)
	(up-find-remote c: all-units-class c: 3)
	(up-filter-include -1 -1 -1 -1)
	(up-find-remote c: all-units-class c: 3)
)

(defrule
	(up-compare-goal 355 != 4)
	(up-timer-status 37 != timer-running)
=>
	(up-get-search-state gl-local-total)
)

(defrule
	(up-compare-goal gl-remote-last < 1)
	(up-compare-goal gl-hit-and-run-search-distance < 128)
	(up-compare-goal 355 != 4)
	(up-timer-status 37 != timer-running)
=>
	(up-jump-rule -3)
)

(defrule
	(or	(players-unit-type-count focus-player archer-line >= 7)
		(or	(players-unit-type-count focus-player skirmisher-line >= 7)
			(or	(players-unit-type-count focus-player cavalry-archer-line >= 5)
				(or	(players-unit-type-count focus-player mangonel-line >= 1)
					(or	(players-unit-type-count focus-player monk >= 3)
						(or	(players-unit-type-count focus-player scorpion-line >= 1)
							(or	(players-unit-type-count focus-player missionary >= 3)
								(players-unit-type-count focus-player longbowman-line >= 5))))))))
=>
	(up-jump-rule 3)
)

(defrule
	(or	(players-unit-type-count focus-player bombard-cannon >= 1)
		(or	(players-unit-type-count focus-player plumed-archer-line >= 5)
			(or	(players-unit-type-count focus-player war-wagon-line >= 3)
				(or	(players-unit-type-count focus-player conquistador-line >= 3)
					(or	(players-unit-type-count focus-player elephant-archer >= 3)
						(or	(players-unit-type-count focus-player chu-ko-nu-line >= 5)
							(or	(players-unit-type-count focus-player galley-line >= 4)
								(players-unit-type-count focus-player turtle-ship-line >= 1))))))))
=>
	(up-jump-rule 2)
)

(defrule
	(or	(players-unit-type-count focus-player cannon-galleon-line >= 1)
		(or	(players-unit-type-count focus-player slinger >= 5)
			(or	(players-unit-type-count focus-player genoese-crossbowman >= 3)
				(or	(players-unit-type-count focus-player janissary-line >= 3)
					(or	(players-unit-type-count focus-player hand-cannoneer >= 4)
						(or	(players-unit-type-count focus-player mangudai-line >= 4)
							(players-unit-type-count focus-player longboat-line >= 4)))))))
=>
	(up-jump-rule 1)
)

(defrule
	(up-compare-goal gl-group-hit-and-run != 2)
	(up-timer-status 37 != timer-running)
=>
	(up-target-objects -1 action-default -1 stand-ground)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object gl-object-point-x)
	(up-get-point position-self gl-home-point-x)
	(up-lerp-tiles gl-object-point-x gl-home-point-x g: gl-hit-and-run-distance)
	(set-goal gl-group-hit-and-run 2)
	(enable-timer 37 1)
	(enable-timer 40 30)
)

(defrule
	(up-compare-goal gl-group-hit-and-run != 2)
	(up-timer-status 37 != timer-running)
=>
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object gl-object-point-x)
	(up-target-objects gl-object-point-x action-patrol -1 aggressive)
	(up-get-point position-self gl-home-point-x)
	(up-lerp-tiles gl-object-point-x gl-home-point-x g: gl-hit-and-run-distance)
	(set-goal gl-group-hit-and-run 2)
	(enable-timer 37 30)
	(enable-timer 40 40)
)

; ============== THROWING A PATROL ATTACK TO ENEMY

(defrule
	(or	(up-compare-goal MILITARY != 1)
		(or	(and	(up-compare-goal TSA <= 0)
				(up-compare-goal gl-strategy != scrush))
			(or	(up-compare-goal gl-strategy-type >= FC)
				(or	(up-compare-goal gl-current-age >= gv-feudal-up)
					(and	(goal gl-strategy scrush)
						(up-compare-goal gl-SCRUSH-CONTROL < ARCHERS-ADDED))))))
=>
	(up-jump-rule 7)
)

(defrule
	(players-building-type-count target-player mill > 0)
=>
	(set-goal gl-drush-target-object mill)
)

(defrule
	(players-building-type-count target-player mining-camp > 0)
=>
	(set-goal gl-drush-target-object mining-camp)
)

(defrule
	(players-building-type-count target-player lumber-camp > 0)
=>
	(set-goal gl-drush-target-object lumber-camp)
)

(defrule
	(players-building-type-count target-player lumber-camp == 0)
	(players-building-type-count target-player mining-camp == 0)
	(players-building-type-count target-player mill == 0)
=>
	(up-jump-rule 1)
)

(defrule
	(goal gl-current-age gv-feudal)
	(current-age == feudal-age)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(up-timer-status 46 != timer-running)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-remote g: gl-drush-target-object c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object gl-object-point-x)
	(up-set-target-point gl-object-point-x)
	(up-jump-rule 1)
)

(defrule
	(goal gl-current-age gv-feudal)
	(current-age == feudal-age)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(up-timer-status 46 != timer-running)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-get-point position-target gl-object-point-x)
	(up-set-target-point gl-object-point-x)
)

(defrule
	(goal gl-current-age gv-feudal)
	(current-age == feudal-age)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(up-timer-status 46 != timer-running)
=>
	(up-filter-distance c: 3 c: -1)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 -1 orderid-explore -1)
	(up-find-local c: all-units-class c: 240)
	(up-target-point gl-object-point-x action-patrol -1 aggressive)
	(enable-timer 46 30)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
)

; ============== ATTACKING ENEMY VILLAGERS WITH THE SCOUT

(defrule
	(or	(and	(game-time > 1200)
			(up-compare-goal gl-villager-laming <= -1))
		(or	(up-compare-goal gl-boar-stealing != -1)
			(or	(up-compare-goal gl-dodging-TC != -1)
				(or	(and	(up-compare-const villager-laming-nature == 0)
						(up-compare-goal gl-x-vs-one-challenge != YES))
					(up-compare-goal gl-rush-suitability-on-map != GOOD)))))
=>
	(up-jump-rule 11)
)

(defrule
	(true)
=>
	(up-modify-goal gl-real-focus-player s:= sn-focus-player-number)
)

(defrule
	(goal gl-boar-stealing -1)
	(goal gl-dodging-TC -1)
	(goal gl-villager-laming -1)
	(unit-type-count scout-unit == 1)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-object-data object-data-hitpoints gl-max-scout-hp)
)

(defrule
	(goal gl-boar-stealing -1)
	(goal gl-dodging-TC -1)
	(goal gl-villager-laming -1)
	(unit-type-count scout-unit == 1)
	(up-compare-goal gl-max-scout-hp > 44)
=>
	(up-modify-goal gl-real-focus-player s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 0)
	(set-goal gl-villager-laming 0)
)

(defrule
	(goal gl-villager-laming 0)
	(strategic-number sn-focus-player-number < 8)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-object-point-x)
	(up-set-target-point gl-object-point-x)
	(up-filter-range -1 -1 -1 6)
)

(defrule
	(goal gl-villager-laming 0)
	(stance-toward focus-player enemy)
	(up-find-remote c: villager-class c: 1)
=>
	(up-reset-search 1 1 1 1)
	(up-find-local c: scout-unit c: 1)
	(up-find-remote c: villager-class c: 5)
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-hitpoints gl-max-scout-hp)
	(up-get-search-state gl-local-total)
)

(defrule
	(goal gl-villager-laming 0)
	(stance-toward focus-player enemy)
	(or	(and	(up-compare-goal gl-max-scout-hp < 26)
			(goal gl-remote-last 1))
		(up-compare-goal gl-max-scout-hp < 10))
	(up-compare-goal gl-remote-last > 0)
=>
	(up-target-objects 0 action-default -1 -1)
	(set-goal gl-villager-laming 1)
	(up-modify-goal gl-saved-focus-player2 s:= sn-focus-player-number)
	(up-get-search-state gl-local-total)
	(chat-to-player my-player-number "Weak villager found")
)

(defrule
	(goal gl-villager-laming 0)
	(player-valid focus-player)
	(strategic-number sn-focus-player-number < 8)
=>
	(up-jump-rule -4)
)

(defrule
	(goal gl-villager-laming 0)
=>
	(set-goal gl-villager-laming -1)
)

(defrule
	(goal gl-villager-laming 1)
=>
	(up-modify-sn sn-focus-player-number g:= gl-saved-focus-player2)
	(up-reset-search 1 1 1 1)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-object-point-x)
	(up-set-target-point gl-object-point-x)
	(up-filter-range -1 -1 -1 7)
	(up-find-remote c: villager-class c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-hitpoints gl-max-scout-hp)
	(up-get-search-state gl-local-total)
)

(defrule
	(goal gl-villager-laming 1)
	(or	(up-compare-goal gl-max-scout-hp >= 26)
		(up-compare-goal gl-remote-last < 1))
=>
	(up-reset-unit c: scout-unit)
	(up-reset-scouts)
	(set-goal gl-villager-laming -2)
	(chat-to-player my-player-number "Return to scouting")
)

(defrule
	(up-compare-goal gl-real-focus-player > 0)
=>
	(up-modify-sn sn-focus-player-number g:= gl-real-focus-player)
	(set-goal gl-real-focus-player -1)
)

; ============== REPLY

#load-if-defined UP-MULTIPLAYER-GAME
#load-if-not-defined UP-SCENARIO-GAME
(defrule
	(up-compare-goal FFA != YES)
	(player-valid any-ally)
	(player-in-game every-ally)
	(player-resigned any-enemy)
=>
	(chat-to-all "gg")
	(disable-self)
)
#end-if
#end-if

#end-if

; ============== VILLAGERS VS RAMS

(defrule
	(or	(up-compare-goal TSA >= 1)
		(or	(not	(town-under-attack))
			(or	(game-time > 2400)
				(or	(and	(soldier-count >= 20)
						(up-compare-goal gl-gathering-inside < MOST))
					(up-compare-goal gl-town-center-placed >= placed-to-ally))))); We're trying to escape
=>
	(up-jump-rule 1)
)

(defrule
	(or	(unit-type-count 54 > 0)
		(or	(building-type-count castle > 0)
			(unit-type-count 328 > 0)))
	(players-unit-type-count focus-player battering-ram-line > 0)
	(up-unit-type-in-town c: battering-ram-line > 0)
	(up-timer-status 29 != timer-triggered)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-remote c: battering-ram-line c: 4)
	(up-find-local c: villager-class c: 7)
	(up-target-objects -1 action-default -1 -1)
	(enable-timer 29 60)
)
#end-if
#end-if
#end-if; Lower difficulties

; ============== FINDING SHEEP

#load-if-not-defined DEATH-MATCH
(defrule
	(game-time > 3)
	(game-time < 780)
	(goal gl-boar-stealing -1)
	(goal gl-villager-laming -1)
	(up-gaia-type-count c: livestock-class > 0)
	(up-timer-status 29 != timer-running)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-local c: scout-unit c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-object-point-x)
	(up-set-target-point gl-object-point-x)
	(up-filter-range -1 -1 -1 31)
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 0)
	(up-reset-search 1 1 1 1)
;	(chat-to-all "Search")
)

(defrule
	(game-time > 3)
	(game-time < 780)
	(goal gl-boar-stealing -1)
	(goal gl-villager-laming -1)
	(up-find-remote c: livestock-class c: 1)
	(up-gaia-type-count c: livestock-class > 0)
	(up-timer-status 29 != timer-running)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-find-remote c: livestock-class c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object gl-point-x)
	(up-find-local c: scout-unit c: 1)
	(up-target-point gl-point-x action-move -1 -1)
;	(chat-to-all "Found")
)

(defrule
	(game-time > 3)
	(game-time < 780)
	(goal gl-boar-stealing -1)
	(goal gl-villager-laming -1)
	(up-gaia-type-count c: livestock-class > 0)
	(up-timer-status 29 != timer-running)
=>
	(enable-timer 29 3)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
)
#end-if

; ============== FIXING POP CAP 25 VILLAGER TRAIN BUG

#load-if-defined POPULATION-CAP-25
(defrule
	(or	(current-age >= castle-age)
		(current-age == gv-maximum-age))
	(up-compare-goal gl-my-villager-count-total > imperial-villager-cap)
	(up-timer-status 35 != timer-running)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-filter-include -1 actionid-train -1 -1)
	(up-find-local c: town-center c: 240)
	(up-target-point -1 action-stop -1 -1); Not the best solution, but may do for now
	(enable-timer 35 4)
)
#end-if

; ============== RAM PATROL

(defrule
	(or	(up-compare-goal TSA <= 0)
		(or	(up-compare-goal winning-player > 0)
			(or	(strategic-number sn-minimum-water-body-size-for-dock >= 1999)
				(or	(up-timer-status 12 == timer-running)
					(up-compare-goal gl-boar-stealing != -1)))))
=>
	(up-jump-rule 1)
)

(defrule
	(unit-type-count battering-ram-line > 1)
	(players-building-count target-player > 0)
	(players-building-type-count target-player stone-wall-line > 0)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-filter-exclude -1 actionid-attack -1 -1)
	(up-get-fact unit-type-count battering-ram-line temporary-goal2)
	(up-modify-goal temporary-goal2 c:/ 2)
	(up-find-local c: battering-ram-line g: temporary-goal2)
	(up-get-point position-target gl-point-x)
	(up-target-point gl-point-x action-patrol -1 -1)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
	(enable-timer 12 60)
)

; ============== PREVENTING MONKS FROM COMMITTING SUICIDE

(defrule
	(game-time > 1800)
=>
	(up-jump-rule 2)
)

(defrule
	(game-time < 1790)
	(unit-type-count 134 > 1)
=>
	(up-reset-search 1 1 1 1)
	(up-reset-filters)
	(up-filter-include -1 -1 731 -1)
	(up-find-local c: monk c: 240)
	(up-target-point 0 action-stop -1 -1)
)

(defrule
	(or	(unit-type-count 134 < 1)
		(game-time > 1790))
=>
	(up-disband-group-type group-type-monk)
)

; ============== RE-EXPLORING

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(game-time g:> gl-rescouting-time)
	(player-in-game any-ally)
	(players-building-count any-enemy > 0)
	(strategic-number sn-total-number-explorers == 1)
=>
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(up-get-fact game-time 0 gl-rescouting-time)
	(up-modify-goal gl-rescouting-time c:+ 1200)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(game-time g:> gl-rescouting-time); Starts at >2700
	(player-in-game any-ally)
	(soldier-count > 45)
	(population > 150)
	(strategic-number sn-total-number-explorers == 0)
=>
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
	(up-get-fact game-time 0 gl-rescouting-time)
	(up-modify-goal gl-rescouting-time c:+ 10)
)

; ============== GARRISONING INTO RAMS

(defrule
	(or	(up-timer-status 33 == timer-running)
		(or	(population-cap < 140)
			(difficulty > hard)))
=>
	(up-jump-rule 3)
)

(defrule
	(up-timer-status 33 != timer-running)
	(up-compare-goal MILITARY != 1)
	(unit-type-count battering-ram-line > 0)
	(or	(up-unit-type-in-town c: battering-ram-line > 0)
		(or	(up-projectile-detected projectile-siege < 5000)
			(or	(up-projectile-detected projectile-fortification < 5000)
				(enemy-buildings-in-town))))
	(soldier-count > 5)
	(unit-type-count infantry-class > 0)
=>
	(set-strategic-number sn-number-garrison-units 6)
	(set-strategic-number sn-maximum-garrison-fill 6)
	(up-garrison battering-ram c: infantry-class)
	(enable-timer 33 32)
)

(defrule
	(up-timer-status 33 != timer-running)
	(goal MILITARY 1)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(unit-type-count battering-ram-line > 0)
	(soldier-count > 25)
	(or	(up-compare-goal gl-distance-to-enemy > 70)
		(and	(unit-type-count infantry-class > 25)
			(or	(players-building-type-count target-player castle > 0)
				(players-building-type-count target-player bombard-tower > 0))))
=>
	(set-strategic-number sn-number-garrison-units 6)
	(set-strategic-number sn-maximum-garrison-fill 6)
	(up-garrison battering-ram c: infantry-class)
	(enable-timer 33 32)
)

(defrule
	(up-timer-status 33 != timer-running)
	(up-compare-goal MILITARY != 1)
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(unit-type-count battering-ram-line > 0)
	(nor	(up-unit-type-in-town c: battering-ram-line > 0)
		(or	(up-projectile-detected projectile-siege < 10000)
			(or	(up-projectile-detected projectile-fortification < 10000)
				(enemy-buildings-in-town))))
=>
	(up-ungarrison c: battering-ram-line)
	(enable-timer 33 32)
)

; ============== KEEPING UNITS GROUPED

(defrule
	(game-time < 1800)
	(goal MILITARY 0)
	(or	(current-age <= feudal-age)
		(or	(goal gl-strategy xbow-rush)
			(goal gl-strategy CA-rush)))
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(up-timer-status 16 != timer-running)
	(up-compare-goal threat-time > 25000)
=>
	(up-retreat-to barracks c: -1)
	(enable-timer 16 40)
)

(defrule
	(or	(current-age >= castle-age)
		(unit-type-count monastery-class > 0))
	(up-timer-status 40 != timer-running)
=>
	(up-set-attack-stance -1 c: aggressive); Reset attack stances once in a while to keep converted units useful
	(enable-timer 40 130)
)

; ============== DELETING OBJECTS

(defrule
	(game-time > 500)
	(or	(game-time > 1800)
		(death-match-game))
	(or	(and	(population > 170)
			(military-population > 20))
		(population > almost-full-pop))
=>
	(up-delete-objects c: wall-class c: 32767)
	(up-delete-objects c: gate-class c: 32767)
	(disable-self)
)

(defrule
	(or	(and	(not	(player-in-game any-human-ally))
			(and	(game-time > 1800)
				(up-compare-const gv-grouped-by-team == 1)))
		(death-match-game))
	(map-type fortress)
=>
	(up-delete-objects c: wall-class c: 32767)
	(up-delete-objects c: gate-class c: 32767)
	(disable-self)
)

; ============== VERSION

#load-if-not-defined UP-SCENARIO-GAME
(defrule
	(or	(taunt-detected any-ally 250)
		(or	(taunt-detected any-enemy 250)
			(taunt-detected my-player-number 250)))
=>
	(chat-to-player my-player-number "Barbarian 2.13")
	(chat-to-player this-any-ally "Barbarian 2.13")
	(chat-to-player this-any-enemy "Barbarian 2.13")
	(acknowledge-taunt my-player-number 250)
	(acknowledge-taunt every-ally 250)
	(acknowledge-taunt every-enemy 250)
)
#end-if

; ============== RANDOM TAUNTS

#load-if-defined UP-HUMAN-IN-GAME
(defrule
	(not	(taunt-detected any-ally 42))
=>
	(up-jump-rule 7)
)

(defrule
	(taunt-detected any-ally 42)
	(current-age == dark-age)
	(goal gl-current-age gv-dark)
=>
	(chat-to-allies-using-id 22165)
	(acknowledge-taunt every-ally 42)
)

(defrule
	(taunt-detected any-ally 42)
	(current-age == dark-age)
	(goal gl-current-age gv-dark-up)
=>
	(chat-to-allies-using-id 22165)
	(chat-to-allies "I'm already researching the Feudal Age though")
	(acknowledge-taunt every-ally 42)
)

(defrule
	(taunt-detected any-ally 42)
	(current-age == feudal-age)
	(up-compare-goal gl-current-age <= gv-feudal)
=>
	(chat-to-allies-using-id 22166)
	(acknowledge-taunt every-ally 42)
)

(defrule
	(taunt-detected any-ally 42)
	(current-age == feudal-age)
	(goal gl-current-age gv-feudal-up)
=>
	(chat-to-allies-using-id 22166)
	(chat-to-allies "I'm researching Castle Age")
	(acknowledge-taunt every-ally 42)
)

(defrule
	(taunt-detected any-ally 42)
	(current-age == castle-age)
	(up-compare-goal gl-current-age <= gv-castle)
=>
	(chat-to-allies-using-id 22167)
	(acknowledge-taunt every-ally 42)
)

(defrule
	(taunt-detected any-ally 42)
	(current-age == castle-age)
	(goal gl-current-age gv-castle-up)
=>
	(chat-to-allies-using-id 22167)
	(chat-to-allies "I'm researching Imperial Age")
	(acknowledge-taunt every-ally 42)
)

(defrule
	(taunt-detected any-ally 42)
	(current-age == imperial-age)
=>
	(chat-to-allies-using-id 22168)
	(acknowledge-taunt every-ally 42)
)
#end-if

; ============== NOTHING-MAPS

#load-if-not-defined DEATH-MATCH
(defrule
	(goal gl-nothing-style-map YES)
=>
	(up-jump-rule 18)
)
#end-if

; ======== FIGHTING VS LAMERS

(defrule
	(or	(up-research-status c: ri-loom <= research-pending)
		(game-time > 1800))
=>
	(up-jump-rule 8)
)

(defrule
	(up-building-type-in-town c: wall-class < 5)
	(up-player-distance target-player < 25)
	(building-type-count-total stone-wall-line < 1)
	(players-building-type-count target-player watch-tower > 0)
	(players-military-population focus-player < 4)
	(nor	(up-projectile-detected projectile-castle < 60000)	
		(up-projectile-detected projectile-town-center < 60000))
	(up-compare-goal gl-anti-trush != RESET)
=>
	(set-strategic-number sn-maximum-town-size 26)
	(set-goal gl-anti-trush YES)
	(set-strategic-number sn-allow-civilian-offense 2)
	(set-strategic-number sn-allow-civilian-defense 3)
	(set-strategic-number sn-number-civilian-militia 10)
	(up-set-attack-stance -1 c: aggressive)
	(up-set-defense-priority c: watch-tower c: 20000)
)

(defrule
	(up-building-type-in-town c: wall-class < 5)
	(game-time < 1200)
	(up-player-distance target-player < 25)
	(building-type-count-total stone-wall-line < 1)
	(players-building-type-count target-player castle > 0)
	(players-military-population focus-player < 4)
	(nor	(up-projectile-detected projectile-castle < 60000)
		(up-projectile-detected projectile-town-center < 60000))
	(up-compare-goal gl-anti-trush != RESET)
=>
	(set-strategic-number sn-maximum-town-size 26)
	(set-goal gl-anti-trush YES)
	(set-strategic-number sn-allow-civilian-offense 2)
	(set-strategic-number sn-allow-civilian-defense 3)
	(set-strategic-number sn-number-civilian-militia 10)
	(up-set-defense-priority c: watch-tower c: 20000)
)

(defrule
	(goal gl-anti-trush YES)
	(or	(up-building-type-in-town c: wall-class > 4); The enemy forward tower is probably walled completely
		(or	(and	(players-building-type-count target-player watch-tower > 3)
				(up-projectile-detected projectile-watch-tower < 6000000))
			(game-time >= 1490)))
=>
	(set-strategic-number sn-maximum-town-size 9)
	(set-goal gl-anti-trush RESET)
	(set-strategic-number sn-allow-civilian-offense 0)
	(set-strategic-number sn-allow-civilian-defense 3)
	(set-strategic-number sn-number-civilian-militia 0)
	(set-goal target-system-rewriting YES)
	(chat-to-player my-player-number "Disable anti-tower villager attacking")
	(chat-to-player my-player-number "Fight over!")
)

(defrule
	(goal gl-anti-trush YES)
	(not	(up-player-distance target-player < 25))
	(up-enemy-villagers-in-town < 1)
	(up-compare-goal gl-anti-trush != RESET)
=>
	(set-strategic-number sn-maximum-town-size 9)
	(set-goal gl-anti-trush NO)
	(set-strategic-number sn-allow-civilian-offense 0)
	(set-strategic-number sn-allow-civilian-defense 3)
	(set-strategic-number sn-number-civilian-militia 0)
	(set-goal target-system-rewriting YES)
	(chat-to-player my-player-number "Fight over!")
)

(defrule
	(or	(goal gl-anti-trush YES)
		(goal gl-anti-castle-drop YES))
	(strategic-number sn-minimum-water-body-size-for-dock == 998)
	(players-building-count any-enemy > 0)
=>
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(up-reset-scouts)
	(disable-self)
)

(defrule
	(up-compare-goal gl-anti-castle-drop != RESET)
	(game-time < 1500)
	(up-player-distance target-player < 29)
	(players-military-population focus-player < 2)
	(not	(up-projectile-detected projectile-any < 6000000))
	(building-type-count-total stone-wall-line > 0)
	(or	(soldier-count > 2)
		(unit-type-count knight > 0))
	(strategic-number sn-maximum-town-size < 28)
=>
	(set-strategic-number sn-maximum-town-size 28)
	(up-get-fact building-type-in-town wall-class gl-enemy-wall-count-total)
	(up-get-fact building-type-in-town gate-class gl-enemy-gate-count)
	(up-modify-goal gl-enemy-wall-count-total g:+ gl-enemy-gate-count)
	(set-goal gl-anti-castle-drop YES)
)

(defrule
	(goal gl-anti-castle-drop YES)
	(or	(up-compare-goal gl-enemy-wall-count-total > 0)
		(or	(up-projectile-detected projectile-any < 6000000)
			(game-time > 1700)))
=>
	(set-strategic-number sn-maximum-town-size 9)
	(set-goal gl-anti-castle-drop RESET)
	(disable-self)
)

(defrule
	(goal gl-anti-castle-drop YES)
	(not	(up-player-distance target-player < 29))
=>
	(set-strategic-number sn-maximum-town-size 9)
	(set-goal gl-anti-castle-drop NO)
)

; ======== SOME THREAT LEVEL FOR MESOS

(defrule
	(up-compare-goal gl-strategy != eew-strategy)
=>
	(up-jump-rule 4)
)

(defrule
	(goal gl-strategy eew-strategy)
	(goal gl-eagles heavy-eagles)
	(research-completed ri-plate-mail)
	(or	(and	(players-current-age focus-player <= castle-age)
			(strategic-number sn-upgrade-eagles == 0))
		(and	(up-research-status c: ri-blast-furnace >= research-pending)
			(up-research-status c: my-unique-unit-upgrade >= research-pending)))
	(strategic-number sn-threat-level > -3)
	(current-age == imperial-age)
=>
	(set-strategic-number sn-threat-level -3)
)

(defrule
	(goal gl-strategy eew-strategy)
	(goal gl-eagles heavy-eagles)
	(research-completed ri-plate-mail)
	(up-research-status c: my-unique-unit-upgrade >= research-pending)
	(up-research-status c: ri-blast-furnace >= research-pending)
	(players-current-age focus-player <= castle-age)
	(strategic-number sn-threat-level > -4)
	(current-age == imperial-age)
=>
	(set-strategic-number sn-threat-level -4)
)

(defrule
	(goal gl-strategy eew-strategy)
	(goal gl-eagles heavy-eagles)
	(strategic-number sn-upgrade-eagles == 0)
	(or	(players-unit-type-count every-enemy hand-cannoneer < 5)
		(up-research-status c: ri-plate-mail < research-pending))
	(players-current-age focus-player == imperial-age)
	(strategic-number sn-threat-level > -2)
	(current-age == imperial-age)
=>
	(set-strategic-number sn-threat-level -2)
)

(defrule
	(goal gl-strategy eew-strategy)
	(goal gl-eagles heavy-eagles)
	(up-research-status c: ri-plate-mail < research-pending)
	(strategic-number sn-upgrade-eagles == 0)
	(players-unit-type-count focus-player hand-cannoneer > 4)
	(players-current-age focus-player == imperial-age)
	(strategic-number sn-threat-level < 0)
	(current-age == imperial-age)
=>
	(set-strategic-number sn-threat-level 0)
)

; ========= SOME TARGET STUFF

#load-if-defined UP-2-PLAYER-GAME
#load-if-not-defined UP-ALLY-IN-GAME
(defrule
	(or	(and	(goal gl-strategy grush)
			(players-unit-type-count any-enemy fishing-ship > 2))
		(or	(players-building-type-count any-enemy stone-wall-line > 0)
			(or	(players-building-type-count any-enemy palisade-wall > 0)
				(or	(players-building-type-count any-enemy gate > 0)
					(strategic-number sn-minimum-water-body-size-for-dock <= 1000)))))
	(player-number 1)
=>
	(set-goal gl-target-player 2)
	(set-strategic-number sn-target-player-number 2)
	(set-strategic-number sn-focus-player-number 2)
	(disable-self)
)

(defrule
	(or	(and	(goal gl-strategy grush)
			(players-unit-type-count any-enemy fishing-ship > 2))
		(or	(players-building-type-count any-enemy stone-wall-line > 0)
			(or	(players-building-type-count any-enemy palisade-wall > 0)
				(or	(players-building-type-count any-enemy gate > 0)
					(strategic-number sn-minimum-water-body-size-for-dock <= 1000)))))
	(player-number 2)
=>
	(set-goal gl-target-player 1)
	(set-strategic-number sn-target-player-number 1)
	(set-strategic-number sn-focus-player-number 1)
	(disable-self)
)
#end-if
#end-if

; ========= SUPERIORITY DETECTION

(defrule
	(up-timer-status 7 != timer-triggered)
=>
	(up-jump-rule 15)
)

(defrule
	(timer-triggered 7)
=>
	(up-get-fact military-population 0 gl-my-soldier-count)
	(up-get-focus-fact military-population 0 gl-target-soldier-count)
)

(defrule
	(timer-triggered 7)
	(goal MILITARY 1)
;	(goal gl-current-age gv-feudal)
;	(up-compare-goal gl-strategy-type <= controlled-flush); Actually do it always when attacking
=>
	(up-modify-goal gl-my-soldier-count c:+ 3)
)

(defrule
	(strategic-number sn-threat-level == -5)
	(timer-triggered 7)
=>
	(up-modify-goal gl-target-soldier-count c:* 2)
	(up-modify-goal gl-target-soldier-count c:/ 5)
)

(defrule
	(strategic-number sn-threat-level == -4)
	(timer-triggered 7)
=>
	(up-modify-goal gl-target-soldier-count c:* 2)
	(up-modify-goal gl-target-soldier-count c:/ 3)
)

(defrule
	(strategic-number sn-threat-level == -3)
	(timer-triggered 7)
=>
	(up-modify-goal gl-target-soldier-count c:* 5)
	(up-modify-goal gl-target-soldier-count c:/ 6)
)

(defrule
	(strategic-number sn-threat-level == -3)
	(timer-triggered 7)
	(military-population > 80)
=>
	(up-modify-goal gl-my-soldier-count c:* 10)
)

(defrule
	(strategic-number sn-threat-level == -1)
	(timer-triggered 7)
=>
	(up-modify-goal gl-target-soldier-count c:* 7)
	(up-modify-goal gl-target-soldier-count c:/ 8)
)

(defrule
	(strategic-number sn-threat-level == -1)
	(timer-triggered 7)
	(military-population < 40)
=>
	(up-modify-goal gl-my-soldier-count c:- 3)
)

(defrule
	(strategic-number sn-threat-level == 0)
	(timer-triggered 7)
=>
	(up-modify-goal gl-target-soldier-count c:* 10)
	(up-modify-goal gl-target-soldier-count c:/ 7)
)

(defrule
	(or	(strategic-number sn-threat-level == 0)
		(and	(strategic-number sn-threat-level < 0)
			(and	(death-match-game)
				(game-time < 600))))
	(timer-triggered 7)
	(players-military-population focus-player > 1)
=>
	(up-modify-goal gl-target-soldier-count c:+ 5)
)

(defrule
	(or	(strategic-number sn-threat-level == 1)
		(and	(death-match-game)
			(and	(game-time < 600)
				(and	(unit-type-count battering-ram-line < 3)
					(and	(up-projectile-detected projectile-castle < 2000000); The enemy castle is actually built
						(and	(strategic-number sn-threat-level < 1)
							(population < pop-to-full-pop-attack)))))))
	(timer-triggered 7)
=>
	(up-modify-goal gl-target-soldier-count c:* 2)
)

(defrule
	(strategic-number sn-threat-level == 1)
	(timer-triggered 7)
	(players-military-population focus-player > 3)
=>
	(up-modify-goal gl-target-soldier-count c:+ 4)
)

(defrule
	(strategic-number sn-threat-level == 2)
	(timer-triggered 7)
=>
	(up-modify-goal gl-target-soldier-count c:* 4)
)

(defrule
	(strategic-number sn-threat-level == 2)
	(timer-triggered 7)
	(players-military-population focus-player > 40)
=>
	(up-modify-goal gl-target-soldier-count c:- 10)
)

(defrule
	(strategic-number sn-threat-level == 2)
	(timer-triggered 7)
	(players-military-population focus-player > 80)
=>
	(up-modify-goal gl-target-soldier-count c:- 10)
)

; water superiority

#load-if-not-defined ARABIA-MAP
#load-if-not-defined ARENA-MAP
#load-if-not-defined BLACK-FOREST-MAP
#load-if-not-defined FORTRESS-MAP
#load-if-not-defined GHOST-LAKE-MAP
#load-if-not-defined GOLD-RUSH-MAP
#load-if-not-defined MONGOLIA-MAP
#load-if-not-defined OASIS-MAP

(defrule
	(goal DOCK 0)
	(strategic-number sn-minimum-water-body-size-for-dock < 1000)
=>
	(up-jump-rule 18)
	(disable-timer 14)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= 1000)
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(or	(current-age == feudal-age)
		(starting-age != dark-age))
	(strategic-number sn-focus-player-number > 0)
=>
	(enable-timer 7 0)
	(enable-timer 14 0)
	(disable-self)
)

(defrule
	(or	(up-timer-status 14 != timer-triggered)
		(strategic-number sn-minimum-water-body-size-for-dock != 1000))
=>
	(up-jump-rule 9)
)

(defrule
	(timer-triggered 14)
	(up-timer-status 7 != timer-running); Otherwise go with the period of timer 7
=>
	(up-get-fact warboat-count 0 gl-my-warboat-count)
	(set-goal gl-target-soldier-count 0)
	(up-get-focus-fact unit-type-count galley-line gl-target-soldier-count)
	(up-get-focus-fact unit-type-count fire-ship-line temporary-goal)
	(up-modify-goal gl-target-soldier-count g:+ temporary-goal)
	(up-get-focus-fact unit-type-count turtle-ship-line temporary-goal)
	(up-modify-goal temporary-goal c:* 3)
	(up-modify-goal gl-target-soldier-count g:+ temporary-goal)
	(up-get-focus-fact unit-type-count cannon-galleon-line temporary-goal)
	(up-modify-goal gl-target-soldier-count g:+ temporary-goal)
	(up-get-focus-fact unit-type-count longboat-line temporary-goal)
	(up-modify-goal gl-target-soldier-count g:+ temporary-goal)
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 1)
)

(defrule
	(up-timer-status 7 != timer-running)
	(timer-triggered 14)
	(player-valid focus-player)
	(stance-toward focus-player ally)
	(strategic-number sn-focus-player-number != my-player-number)
	(up-allied-sn focus-player sn-target-player-number s:== sn-target-player-number)
	(up-allied-goal focus-player 392 == 1)
	(nand	(up-compare-goal threat-time < 10000)
		(up-compare-goal gl-enemy-attacker g:!= gl-target-player))
	(strategic-number sn-target-player-number > 0)
	(military-population > 20)
=>
	(up-modify-goal gl-my-warboat-count c:+ 10)
)

(defrule
	(timer-triggered 14)
	(up-timer-status 7 != timer-running)
	(player-valid focus-player)
	(strategic-number sn-focus-player-number < 8)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2)
)

(defrule
	(timer-triggered 14)
	(up-timer-status 7 != timer-running)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
)

(defrule
	(up-timer-status 7 != timer-running)
	(timer-triggered 14)
	(research-completed ri-fletching)
	(warboat-count > 10)
=>
	(up-modify-goal gl-my-warboat-count c:+ 5)
)

(defrule
	(goal gl-strategy grush)
	(up-timer-status 7 != timer-running)
	(timer-triggered 14)
	(players-current-age-time focus-player > 35)
	(players-current-age focus-player >= castle-age)
	(strategic-number sn-focus-player-number > 0)
=>
	(up-modify-goal gl-target-soldier-count c:* 2)
)

(defrule
	(goal gl-strategy grush)
	(up-timer-status 7 != timer-running)
	(timer-triggered 14)
	(warboat-count < 5)
	(up-compare-goal gl-target-soldier-count > 0)
=>
	(up-modify-goal gl-target-soldier-count c:+ 2)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= 1000)
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(not	(goal MILITARY 1))
	(up-timer-status 7 != timer-running)
	(timer-triggered 14)
	(up-compare-goal gl-my-warboat-count g:> gl-target-soldier-count)
=>
	(set-goal MILITARY 2)
	(enable-timer 14 15)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= 1000)
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(not	(goal MILITARY 1))
	(up-timer-status 7 != timer-running)
	(strategic-number sn-hitting-pop-cap != YES)
	(timer-triggered 14)
	(up-compare-goal gl-my-warboat-count g:<= gl-target-soldier-count)
=>
	(set-goal MILITARY 0)
	(enable-timer 14 15)
	(set-strategic-number sn-number-boat-attack-groups 0)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= 1000)
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(unit-type-count-total cannon-galleon-line < 1)
	(not	(goal MILITARY 1))
	(up-projectile-target projectile-castle == warship-class)
	(up-projectile-detected projectile-castle < 120000)
	(strategic-number sn-hitting-pop-cap != YES)
	(timer-triggered 14)
	(or	(timer-triggered 7)
		(up-timer-status 7 == timer-disabled))
	(up-compare-goal gl-my-warboat-count g:<= gl-target-soldier-count)
=>
	(set-goal MILITARY 0)
	(enable-timer 14 120)
	(set-strategic-number sn-number-boat-attack-groups 0)
)

(defrule
	(or	(goal DOCK 3)
		(goal DOCK 4))
	(game-time > 2500)
	(not	(map-type migration))
	(players-building-count any-enemy > 0)
	(warboat-count > 27)
	(players-unit-type-count every-enemy fire-ship-line < 13)
	(players-unit-type-count every-enemy galley-line < 13)
=>
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-minimum-water-body-size-for-dock 1999)
	(set-strategic-number sn-group-form-distance 30)
	(set-goal DOCK 1)
	(chat-to-player my-player-number "Enable landing")
)

(defrule
	(or	(goal DOCK 3)
		(goal DOCK 4))
	(game-time > 2500)
	(not	(map-type migration))
	(players-building-count any-enemy > 0)
	(warboat-count > 38)
	(players-unit-type-count every-enemy fire-ship-line < 17)
	(players-unit-type-count every-enemy galley-line < 17)
=>
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-minimum-water-body-size-for-dock 1999)
	(set-strategic-number sn-group-form-distance 30)
	(set-goal DOCK 1)
	(chat-to-player my-player-number "Enable landing")
)

(defrule
	(or	(goal DOCK 3)
		(goal DOCK 4))
	(game-time > 500)
	(not	(map-type migration))
	(warboat-count > 20)
	(or	(players-building-type-count any-enemy wonder > 0)
		(enemy-captured-relics))
	(victory-condition standard)
=>
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-minimum-water-body-size-for-dock 1999)
	(set-strategic-number sn-group-form-distance 30)
	(set-goal DOCK 1)
	(chat-to-player my-player-number "Enable landing")
)

; attacking at water maps

(defrule
	(goal gl-strategy grush)
	(timer-triggered 1)
	(up-compare-goal gl-current-age >= gv-dark-up)
=>
	(disable-timer 1)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= 1000)
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(up-compare-goal MILITARY >= 1)
	(players-building-count target-player > 0)
=>
	(up-get-fact warboat-count 0 gl-my-warboat-count)
	(up-modify-goal gl-my-warboat-count s:- sn-number-boat-explore-groups)
	(up-modify-sn sn-total-number-explorers s:= sn-number-boat-explore-groups)
	(up-modify-sn sn-total-number-explorers c:+ 1)
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock >= 1000)
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(up-compare-goal MILITARY >= 1)
	(strategic-number sn-number-boat-attack-groups != gl-my-warboat-count)
	(players-building-count target-player > 0)
=>
	(set-strategic-number sn-enemy-sighted-response-distance 10)
	(set-strategic-number sn-group-form-distance 0)
	(set-strategic-number sn-minimum-boat-attack-group-size 1)
	(set-strategic-number sn-maximum-boat-attack-group-size 1)
	(up-modify-sn sn-number-boat-attack-groups g:= gl-my-warboat-count)
)

#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if

; Select superiority (0 = none, 1 = land (allows attacking on water too), 2 = water)

#load-if-not-defined DEFEND-WONDER
#load-if-not-defined DEATH-MATCH
(defrule
	(timer-triggered 7)
	(or	(goal MILITARY 0)
		(military-population < 25))
	(nand	(up-allied-sn every-ally sn-target-player-number s:== sn-target-player-number); Every ally shares the target
		(up-allied-goal any-ally 392 == 1)); Some has decided to attacked so we may join nevertheless
	(up-projectile-detected projectile-fortification < 600000)
	(up-player-distance target-player < 33)
	(or	(players-building-type-count target-player watch-tower > 2)
		(or	(players-building-type-count target-player bombard-tower > 0)
			(players-building-type-count target-player castle > 0)))
=>
	(up-modify-goal gl-target-soldier-count c:+ 10)
)

(defrule
	(timer-triggered 7)
	(or	(goal MILITARY 0); If we happen to attack, keep attacking as we can't retreat after a couple of rams die
		(unit-type-count battering-ram-line < 1)); Unless they're all gone
	(nand	(up-allied-sn every-ally sn-target-player-number s:== sn-target-player-number)
		(up-allied-goal any-ally 392 == 1))
	(up-player-distance target-player < 33)
	(unit-type-count battering-ram-line < 7)
	(unit-type-count battering-ram-line < large-army-rams)
	(or	(players-building-type-count target-player watch-tower > 10)
		(or	(players-building-type-count target-player bombard-tower > 4)
			(players-building-type-count target-player castle > 2)))
=>
	(up-modify-goal gl-target-soldier-count c:+ 20)
)
#end-if
#end-if

(defrule
	(timer-triggered 7)
	(or	(and	(or	(military-population > 3)
				(and	(military-population > 1)
					(population-cap < 40)))
			(up-compare-goal gl-my-soldier-count g:> gl-target-soldier-count))
		(and	(up-compare-const gv-maximum-age == dark-age)
			(population >= pop-to-full-pop-attack)))
=>
	(set-goal MILITARY 1)
	(enable-timer 7 10)
)

(defrule
	(timer-triggered 7)
	(not	(goal MILITARY 2))
	(or	(military-population <= 3)
		(up-compare-goal gl-my-soldier-count g:<= gl-target-soldier-count))
=>
	(set-goal MILITARY 0)
	(set-strategic-number sn-number-boat-attack-groups 0)
	(enable-timer 7 10)
)

; ============= SOME TRIBUTING

(defrule
	(goal SLING 0)
	(goal gl-MICRO-CONTROL NO)
	(game-time > 600)
	(or	(game-time > 2400)
		(death-match-game))
	(or	(up-allied-resource-percent any-ally amount-tribute-inefficiency < 10)
		(game-time > 3000))
=>
	(enable-timer 13 0)
	(enable-timer 15 0)
	(set-goal timer-enabler 1)
	(set-goal substitute-timer3 0)
	(disable-self)
)

(defrule
	(or	(up-timer-status 11 != timer-triggered)
		(or	(not	(goal SLING 0))
			(or	(building-type-count town-center == 0)
				(and	(not	(up-allied-resource-percent any-ally amount-tribute-inefficiency < 10))
					(and	(game-time <= 3000)
						(up-compare-goal gl-town-center-placed != placed-to-ally))))))
=>
	(up-jump-rule 4)
)

(defrule
	(goal SLING 0)
	(building-type-count town-center > 0)
	(or	(up-allied-resource-percent any-ally amount-tribute-inefficiency < 10)
		(game-time > 3000))
	(up-allied-resource-amount any-ally food > 500)
	(or	(food-amount < 100)
		(up-allied-resource-amount any-ally food > 800))
	(or	(food-amount < 500)
		(up-allied-resource-amount any-ally food > 1200))
	(food-amount < 800)
=>
	(chat-to-allies-using-id 22122)
)

(defrule
	(goal SLING 0)
	(building-type-count town-center > 0)
	(or	(up-allied-resource-percent any-ally amount-tribute-inefficiency < 10)
		(game-time > 3000))
	(up-allied-resource-amount any-ally wood > 500)
	(or	(wood-amount < 100)
		(up-allied-resource-amount any-ally wood > 800))
	(or	(wood-amount < 500)
		(up-allied-resource-amount any-ally wood > 1200))
	(wood-amount < 800)
=>
	(chat-to-allies-using-id 22123)
)

(defrule
	(goal SLING 0)
	(building-type-count town-center > 0)
	(or	(up-allied-resource-percent any-ally amount-tribute-inefficiency < 10)
		(game-time > 3000))
	(up-allied-resource-amount any-ally gold > 500)
	(or	(gold-amount < 100)
		(up-allied-resource-amount any-ally gold > 800))
	(or	(gold-amount < 500)
		(up-allied-resource-amount any-ally gold > 1200))
	(gold-amount < 800)
=>
	(chat-to-allies-using-id 22124)
)

(defrule
	(goal gl-town-center-placed placed-to-ally)
	(goal SLING 0)
	(building-type-count town-center > 0)
	(up-allied-resource-amount any-ally food > 200)
	(population-cap > 50)
	(up-compare-goal gl-my-villager-count < 20)
	(food-amount < 50)
	(not	(taunt-detected my-player-number 3))
=>
	(chat-to-allies "3Food for rebuilding, please.")
	(chat-to-allies "103")
)

(defrule
	(goal SLING 0)
	(or	(taunt-detected my-player-number 3)
		(or	(taunt-detected my-player-number 4)
			(taunt-detected my-player-number 5)))
	(building-type-count town-center > 0)
	(up-timer-status 11 != timer-running)
=>
	(acknowledge-taunt my-player-number 3)
	(acknowledge-taunt my-player-number 4)
	(acknowledge-taunt my-player-number 5)
	(enable-timer 11 222)
)

(defrule
	(or	(nor	(taunt-detected any-ally 3)
			(or	(taunt-detected any-ally 4)
				(or	(taunt-detected any-ally 5)
					(taunt-detected any-ally 6))))
		(or	(not	(research-completed ri-banking))
			(goal gl-wonder-build-attempt-stage saving-resources)))
=>
	(up-jump-rule 8)
)

(defrule
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(research-completed ri-banking)
	(or	(strategic-number sn-allow-resource-spending > 5)
		(death-match-game))
	(food-amount > 2000)
	(taunt-detected any-ally 3)
=>
	(tribute-to-player this-any-ally food 1000)
	(acknowledge-taunt every-ally 3)
	(chat-to-player my-player-number "Give 1000 food to ally")
)

(defrule
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(research-completed ri-banking)
	(or	(strategic-number sn-allow-resource-spending > 5)
		(death-match-game))
	(wood-amount > 2000)
	(taunt-detected any-ally 4)
=>
	(tribute-to-player this-any-ally wood 1000)
	(acknowledge-taunt every-ally 4)
	(chat-to-player my-player-number "Give 1000 wood to ally")
)

(defrule
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(research-completed ri-banking)
	(or	(strategic-number sn-allow-resource-spending > 5)
		(death-match-game))
	(gold-amount > 1500)
	(taunt-detected any-ally 5)
=>
	(tribute-to-player this-any-ally gold 600)
	(acknowledge-taunt every-ally 5)
	(chat-to-player my-player-number "Give 600 gold to ally")
)

(defrule
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(research-completed ri-banking)
	(or	(strategic-number sn-allow-resource-spending > 5)
		(death-match-game))
	(building-type-count-total castle > 0)
	(nand	(up-compare-goal CASTLE != 0)
		(building-type-count-total castle < 3))
	(building-type-count-total town-center >= preferred-TC-number)
	(stone-amount > 500)
	(taunt-detected any-ally 6)
=>
	(tribute-to-player this-any-ally stone 500)
	(acknowledge-taunt every-ally 6)
	(chat-to-player my-player-number "Give 500 stone to ally")
)

(defrule
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(research-completed ri-banking)
	(or	(strategic-number sn-allow-resource-spending > 5)
		(food-amount > 900))
	(food-amount > 500)
	(taunt-detected any-ally 3)
=>
	(tribute-to-player this-any-ally food 200)
	(acknowledge-taunt every-ally 3)
	(chat-to-player my-player-number "Give 200 food to ally")
)

(defrule
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(research-completed ri-banking)
	(or	(strategic-number sn-allow-resource-spending > 5)
		(wood-amount > 900))
	(wood-amount > 500)
	(taunt-detected any-ally 4)
=>
	(tribute-to-player this-any-ally wood 200)
	(acknowledge-taunt every-ally 4)
	(chat-to-player my-player-number "Give 200 wood to ally")
)

(defrule
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(research-completed ri-banking)
	(or	(strategic-number sn-allow-resource-spending > 5)
		(gold-amount > 900))
	(gold-amount > 500)
	(taunt-detected any-ally 5)
=>
	(tribute-to-player this-any-ally gold 200)
	(acknowledge-taunt every-ally 5)
	(chat-to-player my-player-number "Give 200 gold to ally")
)

(defrule
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(research-completed ri-banking)
	(building-type-count-total castle > 0)
	(nand	(not	(goal CASTLE 0))
		(building-type-count-total castle < 3))
	(building-type-count-total town-center > 3)
	(stone-amount > 200)
	(taunt-detected any-ally 6)
=>
	(tribute-to-player this-any-ally stone 200)
	(acknowledge-taunt every-ally 6)
	(chat-to-player my-player-number "Give 200 stone to ally")
)

(defrule
	(or	(taunt-detected any-ally 3)
		(or	(taunt-detected any-ally 4)
			(or	(taunt-detected any-ally 5)
				(taunt-detected any-ally 6))))
	(goal timer-enabler 1)
=>
	(enable-timer 13 90)
	(set-goal timer-enabler 0)
)

(defrule
	(or	(taunt-detected any-ally 3)
		(or	(taunt-detected any-ally 4)
			(or	(taunt-detected any-ally 5)
				(taunt-detected any-ally 6))))
	(timer-triggered 13)
	(goal timer-enabler 0)
=>
	(acknowledge-taunt every-ally 3)
	(acknowledge-taunt every-ally 4)
	(acknowledge-taunt every-ally 5)
	(acknowledge-taunt every-ally 6)
	(disable-timer 13)
	(set-goal timer-enabler 1)
)

(defrule
	(game-time > 2400)
	(strategic-number sn-allow-resource-spending > 3)
	(or	(strategic-number sn-allow-resource-spending > 5)
		(game-time > 3000))
	(or	(taunt-detected any-ally 3)
		(or	(taunt-detected any-ally 4)
			(taunt-detected any-ally 5)))
	(or	(can-research ri-coinage)
		(can-research ri-banking))
=>
	(research ri-coinage)
	(research ri-banking)
)

#load-if-not-defined DEATH-MATCH
#load-if-not-defined WONDER-RACE
#load-if-defined TURKISH-CIV
(defrule
	(or	(unit-type-count bombard-cannon > 0)
		(goal gl-strategy turkish-bombardment))
	(research-available my-unique-research)
=>
	(up-jump-rule 1)
)
#end-if

(defrule
	(up-compare-goal gl-wonder-build-attempt != YES)
	(up-compare-goal gl-strategy != gothic-boom)
	(up-compare-goal gl-strategy != spanish-vill-rush)
	(up-compare-goal gl-strategy != fi-monk-rush)
	(up-compare-goal gl-strategy != jaguar-boom)
	(up-compare-goal FFA != YES)
	(building-type-count-total castle > 0)
	(or	(goal CASTLE 0)
		(and	(building-type-count-total castle > 3)
			(gold-amount < 50)))
	(stone-amount > 425)
	(commodity-selling-price stone >= 85)
	(can-sell-commodity stone)
=>
	(sell-commodity stone)
)

#load-if-not-defined AZTEC-CIV
(defrule
	(up-compare-goal gl-wonder-build-attempt != YES)
	(goal TC 1)
	(goal CASTLE 0)
	(up-compare-goal gl-strategy != eew-strategy)
	(up-compare-goal gl-strategy != fi-monk-rush)
	(or	(stone-amount >= 300)
		(building-type-count-total town-center > 1))
	(or	(stone-amount >= 200)
		(building-type-count-total town-center > 3))
	(commodity-selling-price stone >= 85)
	(can-sell-commodity stone)
=>
	(sell-commodity stone)
)
#else
(defrule
	(up-compare-goal gl-wonder-build-attempt != YES)
	(goal TC 1)
	(goal CASTLE 0)
	(up-compare-goal gl-strategy != eew-strategy)
	(up-compare-goal gl-strategy != fi-monk-rush)
	(or	(stone-amount >= 300)
		(building-type-count-total town-center > 1))
	(or	(stone-amount >= 200)
		(building-type-count-total town-center > 3))
	(building-type-count-total castle > 0)
	(up-compare-goal FFA != YES)
	(commodity-selling-price stone >= 85)
	(can-sell-commodity stone)
=>
	(sell-commodity stone)
)
#end-if
#end-if

(defrule
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(building-available bombard-tower)
	(unit-type-count-total trade-cart > 10)
	(or	(up-compare-goal substitute-timer3 < 60)
		(unit-type-count-total trade-cart > 28))
	(up-compare-goal substitute-timer3 < 100)
=>
	(up-modify-goal substitute-timer3 c:+ 1)
)

#load-if-not-defined UP-MICHI-STYLE
(defrule
	(building-available bombard-tower)
	(strategic-number sn-allow-resource-spending > 5)
	(unit-type-count-total trade-cart > 10)
	(gold-amount > 500)
	(or	(commodity-buying-price stone < 140)
		(gold-amount > 800))
	(or	(commodity-buying-price stone < 200)
		(gold-amount > 1500))
	(commodity-buying-price stone < 400)
	(stone-amount < 200)
	(can-buy-commodity stone)
	(up-compare-goal substitute-timer3 >= 50)
=>
	(buy-commodity stone)
	(up-modify-goal substitute-timer3 c:- 50)
)
#else
(defrule
	(building-available bombard-tower)
	(strategic-number sn-allow-resource-spending > 5)
	(unit-type-count-total trade-cart > 10)
	(gold-amount > 1200)
	(or	(commodity-buying-price stone < 200)
		(gold-amount > 2000))
	(commodity-buying-price stone < 400)
	(stone-amount < 200)
	(can-buy-commodity stone)
	(up-compare-goal substitute-timer3 >= 10)
=>
	(buy-commodity stone)
	(up-modify-goal substitute-timer3 c:- 10)
)
#end-if

; ========== Check if being under a real attack

(defrule
	(or	(goal MILITARY 0)
		(or	(and	(current-age == feudal-age)
				(players-current-age any-ally >= castle-age))
			(goal gl-eew-strategy-type fast-imp)))
	(up-attacker-class != wolf-class)
	(players-military-population any-enemy > 1)
	(timer-triggered 10)
	(town-under-attack)
=>
	(enable-timer 9 12)
	(enable-timer 10 13)
)

(defrule
	(timer-triggered 9)
=>
	(disable-timer 9)
)

; ========= SOME ENEMY STRATEGY DETECTION

(defrule
	(game-time > 2100)
=>
	(up-jump-rule 5)
)

(defrule
	(or	(players-civ any-enemy aztec)
		(players-civ any-enemy mayan))
=>
	(set-goal gl-enemy-strategy EAGLERUSH-NOTE)
	(disable-self)
)

(defrule
	(goal gl-enemy-strategy EAGLERUSH-NOTE)
	(game-time < 1500)
	(not	(goal gl-strategy scrush))
	(or	(and	(players-current-age any-enemy == castle-age)
			(players-unit-type-count any-enemy eagle-warrior-line > 5))
		(or	(players-building-type-count any-enemy barracks > 1)
			(and	(commodity-selling-price stone < default-stone-price)
				(goal gl-strategy xbow-rush))))
=>
	(set-goal gl-enemy-strategy EAGLERUSH)
	(disable-self)
)

(defrule
	(goal gl-enemy-strategy EAGLERUSH-NOTE)
	(goal gl-strategy eew-strategy)
	(game-time < 1500)
	(or	(and	(players-current-age any-enemy == castle-age)
			(players-unit-type-count any-enemy eagle-warrior-line > 5))
		(or	(players-building-type-count any-enemy barracks > 1)
			(and	(commodity-selling-price stone < default-stone-price)
				(and	(building-type-count-total castle < 1)
					(goal gl-eew-strategy-type fast-imp)))))
=>
	(set-goal gl-enemy-strategy EAGLERUSH)
	(disable-self)
)

(defrule
	(not	(goal gl-enemy-strategy FLUSH))
	(or	(and	(players-military-population any-enemy > 3)
			(players-current-age any-enemy == feudal-age))
		(or	(players-building-type-count any-enemy archery-range > 0)
			(or	(players-building-type-count any-enemy stable > 0)
				(or	(players-unit-type-count any-enemy archer-line > 4)
					(players-unit-type-count any-enemy skirmisher-line > 4)))))
=>
	(set-goal gl-enemy-strategy NOT-EAGLERUSH)
	(disable-self)
)

(defrule
	(goal gl-enemy-strategy NOT-EAGLERUSH)
	(or	(players-unit-type-count any-enemy militiaman-line > 2)
		(players-unit-type-count any-enemy man-at-arms > 0))
=>
	(set-goal gl-enemy-strategy MAA-FLUSH)
	(disable-self)
)

; ========= MARKET - BALANCING THE RESOURCES

#load-if-not-defined FEUDAL-AGE-END
(defrule
	(goal gl-current-age gv-feudal)
	(or	(building-type-count-total blacksmith > 0)
		(or	(building-type-count-total stable > 0)
			(building-type-count-total archery-range > 0)))
	(current-age-time g:>= gl-required-current-age-time)
	(wood-amount >= 200)
	(food-amount < 790)
	(commodity-selling-price wood >= 55)
	(strategic-number sn-target-evaluation-ally-proximity != 9999)
	(nand	(goal gl-strategy eagle-rush)
		(stone-amount > minimum-stone-eagles))
=>
	(sell-commodity wood)
	(buy-commodity food)
)

#load-if-not-defined SARACEN-CIV
(defrule
	(goal gl-current-age gv-feudal)
	(building-type-count-total blacksmith == 1)
	(current-age == feudal-age)
	(gold-amount < 200)
	(can-sell-commodity wood)
	(commodity-selling-price wood >= 53)
	(or	(strategic-number sn-target-evaluation-ally-proximity != 9999)
		(and	(research-available ri-coinage)
			(gold-amount < 50)))
	(nand	(goal gl-strategy eagle-rush)
		(stone-amount > minimum-stone-eagles))
	(current-age-time g:>= gl-required-current-age-time)
=>
	(sell-commodity wood)
)
#else
(defrule
	(goal gl-current-age gv-feudal)
	(building-type-count-total blacksmith == 1)
	(current-age == feudal-age)
	(gold-amount < 200)
	(can-sell-commodity wood)
	(commodity-selling-price wood >= 53)
	(or	(strategic-number sn-target-evaluation-ally-proximity != 9999)
		(and	(research-available ri-coinage)
			(and	(gold-amount < 50)
				(goal gl-strategy sling))))
	(current-age-time g:>= gl-required-current-age-time)
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "Sell wood for up")
)
#end-if

(defrule
	(goal gl-current-age gv-feudal)
	(or	(gold-amount >= 335)
		(civ-selected saracen))
	(current-age-time g:>= gl-required-current-age-time)
	(gold-amount >= 210)
	(food-amount < 790)
	(strategic-number sn-target-evaluation-ally-proximity != 9999)
	(can-buy-commodity food)
=>
	(buy-commodity food)
)
#end-if

(defrule
	(building-type-count town-center > 0)
	(up-compare-goal gl-my-villager-count-total == 0)
	(food-amount < 50)
	(not	(town-under-attack))
	(can-buy-commodity food)
=>
	(buy-commodity food)
)


#load-if-not-defined WONDER-RACE
(defrule
	(up-compare-goal gl-nothing-style-map != YES)
	(strategic-number sn-allow-resource-spending >= 0)
	(gold-amount >= 450)
	(or	(gold-amount >= 900)
		(or	(food-amount < 50)
			(commodity-buying-price food <= 35)))
	(or	(food-amount < 100)
		(gold-amount >= 500))
	(food-amount < 300)
	(commodity-buying-price food <= 200)
	(can-buy-commodity food)
=>
	(buy-commodity food)
	(chat-to-player my-player-number "Buy food")
)

#load-if-not-defined UP-MICHI-STYLE
(defrule
	(dropsite-min-distance wood >= 0)
	(up-research-status c: ri-guilds != research-pending)
	(nand	(goal gl-eew-strategy-type boom)
		(building-type-count-total town-center < 3))
	(strategic-number sn-target-evaluation-ally-proximity != 9999)
	(current-age-time > 10)
	(up-compare-goal gl-current-age >= gv-castle)
	(gold-amount < 50)
	(wood-amount > 400); 300
	(can-sell-commodity wood)
	(commodity-selling-price wood >= 50)
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "Sell wood")
)

(defrule
	(dropsite-min-distance wood >= 0)
	(dropsite-min-distance wood < 10)
	(strategic-number sn-target-evaluation-ally-proximity != 9999)
	(up-research-status c: ri-guilds != research-pending)
	(gold-amount < 150)
	(wood-amount > 500); 400
	(current-age-time > 10)
	(up-compare-goal gl-current-age >= gv-castle)
	(up-compare-goal gl-strategy != boom)
	(up-compare-goal gl-strategy != monk-scorpion-boom)
	(up-compare-goal gl-strategy != monk-boom)
	(can-sell-commodity wood)
	(commodity-selling-price wood >= 55)
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "Sell wood")
)
#else
(defrule
	(dropsite-min-distance wood >= 0)
	(or	(dropsite-min-distance wood < 10)
		(and	(wood-amount > 1000)
			(commodity-selling-price wood >= 65)))
	(up-research-status c: ri-guilds != research-pending)
	(up-compare-goal gl-current-age >= gv-imperial)
	(game-time > 1980)
	(gold-amount < 50)
	(wood-amount > 450); 300
	(can-sell-commodity wood)
	(commodity-selling-price wood >= 50)
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "Sell wood")
)

(defrule
	(dropsite-min-distance wood >= 0)
	(dropsite-min-distance wood < 10)
	(up-research-status c: ri-guilds != research-pending)
	(strategic-number sn-target-evaluation-ally-proximity != 9999)
	(up-compare-goal gl-current-age >= gv-imperial)
	(game-time > 1980)
	(gold-amount < 150)
	(wood-amount > 600); 400
	(can-sell-commodity wood)
	(commodity-selling-price wood >= 55)
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "Sell wood")
)
#end-if

(defrule
	(goal gl-strategy turkish-fast-imp)
	(up-compare-goal gl-current-age == gv-castle)
	(building-type-count-total siege-workshop > 0)
	(wood-amount >= 250)
	(commodity-selling-price wood >= 50)
	(or	(gold-amount < 800)
		(food-amount < 1000))
	(can-sell-commodity wood)
=>
	(sell-commodity wood)
)

(defrule
	(dropsite-min-distance wood >= 0)
	(dropsite-min-distance wood < 10)
	(up-research-status c: ri-guilds != research-pending)
	(gold-amount < 250)
	(wood-amount > 800)
	(current-age-time > 10)
	(commodity-selling-price wood >= 50)
	(can-sell-commodity wood)
	(building-type-count-total barracks > 0)
	(building-type-count-total siege-workshop > 0)
	(nand	(up-compare-const gv-michi-style == 1)
		(game-time < 2100))
=>
	(sell-commodity wood)
	(sell-commodity wood)
	(chat-to-player my-player-number "Sell wood x2")
)

(defrule
	(current-age-time > 30)
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(up-research-status c: ri-guilds != research-pending)
	(current-age == imperial-age)
	(nand	(current-age-time < 300)
		(goal gl-strategy turkish-fast-imp))
	(or	(gold-amount < 50)
		(food-amount > 1400))
	(gold-amount < 800)
	(food-amount > 400)
	(can-sell-commodity food)
	(commodity-selling-price food >= 50)
=>
	(sell-commodity food)
	(chat-to-player my-player-number "Sell food")
)

(defrule
	(current-age-time > 30)
	(current-age == imperial-age)
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(up-research-status c: ri-guilds != research-pending)
	(nand	(goal gl-strategy eew-strategy)
		(up-compare-goal gl-eagles != heavy-eagles))
	(gold-amount < 150)
	(food-amount > 550)
	(can-sell-commodity food)
	(commodity-selling-price food >= 40)
=>
	(sell-commodity food)
	(sell-commodity food)
	(chat-to-player my-player-number "Sell food")
)

#load-if-not-defined UP-MICHI-STYLE
(defrule
	(current-age-time > 30)
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(up-research-status c: ri-guilds != research-pending)
	(or	(goal gl-strategy eew-strategy)
		(goal gl-strategy-class basic-class))
	(or	(goal gl-eagles heavy-eagles)
		(food-amount > 1000))
	(gold-amount < 150)
	(food-amount > 800)
	(can-sell-commodity food)
=>
	(sell-commodity food)
	(chat-to-player my-player-number "Sell food")
)
#else
(defrule
	(up-research-status c: ri-guilds != research-pending)
	(current-age-time > 30)
	(current-age >= castle-age)
	(gold-amount < 150)
	(food-amount > 800)
	(can-sell-commodity food)
=>
	(sell-commodity food)
	(chat-to-player my-player-number "Sell food")
)
#end-if

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(game-time > 1200)
	(current-age-time > 10)
	(or	(goal gl-strategy-class basic-class)
		(goal gl-strategy korean-boom))
	(nand	(food-amount >= 500)
		(up-compare-goal gl-current-age <= gv-castle-up))
	(or	(gold-amount >= 900); 650
		(dropsite-min-distance wood == -1))
	(wood-amount < 140)
	(can-buy-commodity wood)
=>
	(buy-commodity wood)
	(chat-to-player my-player-number "Buy wood")
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(or	(goal gl-strategy turkish-fast-imp)
		(goal gl-strategy scorpion-rush))
	(gold-amount > high-castle-gold)
	(wood-amount < 200)
	(or	(building-type-count-total siege-workshop == 0)
		(and	(goal gl-strategy scorpion-rush)
			(research-completed ri-guilds)))
	(can-buy-commodity wood)
=>
	(buy-commodity wood)
	(chat-to-player my-player-number "Buy wood")
)

(defrule
	(up-compare-goal gl-nothing-style-map != YES)
	(strategic-number sn-allow-resource-spending >= 0)
	(building-type-count-total barracks < 1)
	(up-compare-goal gl-current-age >= gv-castle-up)
	(up-research-status c: ri-guilds != research-pending)
	(wood-amount < 150)
	(gold-amount >= 650)
	(can-buy-commodity wood)
	(commodity-buying-price wood <= 140)
=>
	(buy-commodity wood)
	(chat-to-player my-player-number "Buy wood")
)

(defrule
	(up-compare-goal gl-nothing-style-map != YES)
	(strategic-number sn-allow-resource-spending >= 0)
	(goal gl-strategy-class basic-class)
	(building-type-count-total town-center < 3)
	(wood-amount < 300)
	(or	(gold-amount >= 900)
		(commodity-buying-price wood <= 80))
	(or	(gold-amount >= 600)
		(commodity-buying-price wood <= 60))
	(gold-amount >= 400)
	(can-buy-commodity wood)
	(commodity-buying-price wood <= 140)
=>
	(buy-commodity wood)
	(chat-to-player my-player-number "Buy wood")
)

#load-if-not-defined UP-MICHI-STYLE
(defrule
	(dropsite-min-distance wood >= 0)
	(dropsite-min-distance wood < 10)
	(strategic-number sn-target-evaluation-ally-proximity != 9999)
	(current-age >= castle-age)
	(current-age-time > 30)
	(up-research-status c: ri-guilds != research-pending)
	(wood-amount > 600); 500
	(gold-amount < 150)
	(can-sell-commodity wood)
	(commodity-selling-price wood >= 60)
=>
	(sell-commodity wood)
	(sell-commodity wood)
	(chat-to-player my-player-number "Sell wood x2")
)

(defrule
	(dropsite-min-distance wood >= 0)
	(dropsite-min-distance wood < 10)
	(up-research-status c: ri-guilds != research-pending)
	(up-compare-goal gl-current-age != gv-feudal-up)
	(up-compare-goal gl-current-age != gv-castle-up)
	(current-age-time > 15)
	(wood-amount > 900); 800
	(or	(gold-amount < 500)
		(commodity-selling-price wood >= 65))
	(gold-amount < 600)
	(can-sell-commodity wood)
	(commodity-selling-price wood >= 55)
=>
	(sell-commodity wood)
	(sell-commodity wood)
)

(defrule
	(dropsite-min-distance wood >= 0)
	(strategic-number sn-target-evaluation-ally-proximity != 9999)
	(wood-amount > 1000)
	(current-age-time > 10)
	(up-research-status c: ri-guilds != research-pending)
	(up-compare-goal gl-current-age != gv-feudal-up)
	(up-compare-goal gl-current-age != gv-castle-up)
	(gold-amount < 600)
	(or	(commodity-selling-price wood >= 60); 50
		(wood-amount > 1400))
	(can-sell-commodity wood)
=>
	(sell-commodity wood)
	(sell-commodity wood)
	(sell-commodity wood)
	(chat-to-player my-player-number "Sell wood x3")
)
#else
(defrule
	(dropsite-min-distance wood >= 0)
	(dropsite-min-distance wood < 10)
	(up-compare-goal gl-current-age >= gv-imperial)
	(wood-amount > 650); 500
	(gold-amount < 150)
	(up-research-status c: ri-guilds != research-pending)
	(can-sell-commodity wood)
	(commodity-selling-price wood >= 60)
	(game-time > 2040)
=>
	(sell-commodity wood)
	(sell-commodity wood)
	(chat-to-player my-player-number "Sell wood x2")
)

(defrule
	(dropsite-min-distance wood >= 0)
	(dropsite-min-distance wood < 10)
	(up-compare-goal gl-current-age >= gv-imperial)
	(up-research-status c: ri-guilds != research-pending)
	(wood-amount > 1100); 800
	(or	(gold-amount < 500)
		(commodity-selling-price wood >= 65))
	(gold-amount < 600)
	(can-sell-commodity wood)
	(commodity-selling-price wood >= 55)
	(game-time > 2040)
=>
	(sell-commodity wood)
	(sell-commodity wood)
)

(defrule
	(dropsite-min-distance wood >= 0)
	(up-compare-goal gl-current-age >= gv-imperial)
	(wood-amount > 1300); 1000
	(current-age-time > 10)
	(up-research-status c: ri-guilds != research-pending)
	(gold-amount < 600)
	(or	(commodity-selling-price wood >= 50)
		(wood-amount > 1400))
	(can-sell-commodity wood)
	(game-time > 2100)
=>
	(sell-commodity wood)
	(sell-commodity wood)
	(sell-commodity wood)
	(chat-to-player my-player-number "Sell wood x3")
)
#end-if

(defrule
	(or	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
		(wood-amount >= 500))
	(nor	(goal gl-strategy eew-strategy)
		(and	(goal gl-strategy turkish-fast-imp)
			(current-age-time < 300)))
	(up-research-status c: ri-guilds != research-pending)
	(current-age-time > 45)
	(current-age == imperial-age)
	(gold-amount < 100)
	(food-amount > 300)
	(can-sell-commodity food)
	(commodity-selling-price food >= 60)
=>
	(sell-commodity food)
)

(defrule
	(current-age-time > 45)
	(current-age == imperial-age)
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(up-research-status c: ri-guilds != research-pending)
	(gold-amount < 800)
	(or	(gold-amount < 400)
		(wood-amount < 400))
	(food-amount > 1000)
	(can-sell-commodity food)
	(commodity-selling-price food >= 50)
=>
	(sell-commodity food)
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(nand	(unit-type-count-total spearman-line > 15)
		(research-available ri-halberdier))
	(current-age == imperial-age)
	(up-research-status c: ri-guilds != research-pending)
	(up-compare-goal gl-strategy != eew-strategy)
	(wood-amount < 150)
	(or	(and	(gold-amount > 500)
			(commodity-buying-price wood < 145))
		(dropsite-min-distance wood > 15))
	(can-buy-commodity wood)
=>
	(buy-commodity wood)
)

#load-if-not-defined CASTLE-AGE-END
(defrule
	(dropsite-min-distance wood >= 0)
	(up-compare-goal gl-current-age <= gv-castle)
	(or	(military-population > 40)
		(and	(goal gl-strategy korean-boom)
			(building-type-count-total siege-workshop > 0)))
	(current-age == castle-age)
	(wood-amount >= 550); 150
	(gold-amount < needed-castle-gold)
	(food-amount > needed-castle-food)
	(can-sell-commodity wood)
	(commodity-selling-price wood >= 55)
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "Sell wood for up")
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(up-compare-goal gl-current-age <= gv-castle)
	(or	(soldier-count > 30)
		(or	(goal gl-strategy korean-boom)
			(warboat-count > 12)))
	(current-age == castle-age)
	(gold-amount < needed-castle-gold)
	(food-amount >= very-high-castle-food)
	(can-sell-commodity food)
	(or	(commodity-selling-price food >= 62)
		(food-amount >= 1300))
=>
	(sell-commodity food)
	(chat-to-player my-player-number "Sell food for up")
)

(defrule
	(strategic-number sn-allow-resource-spending >= 0)
	(up-compare-goal gl-strategy != heavy-krush)
	(up-compare-goal gl-current-age <= gv-castle)
	(current-age == castle-age)
	(gold-amount >= high-castle-gold)
	(food-amount < needed-castle-food)
	(nand	(up-compare-const gv-michi-style == 1)
		(game-time < 1830))
	(can-buy-commodity food)
=>
	(buy-commodity food)
	(chat-to-player my-player-number "Buy food for up")
)
#end-if

(defrule
	(dropsite-min-distance wood >= 0)
	(dropsite-min-distance wood < 10)
	(current-age == imperial-age)
	(unit-type-count-total spearman-line > 15)
	(research-available ri-halberdier)
	(up-research-status c: ri-guilds != research-pending)
	(gold-amount < 600)
	(can-sell-commodity wood)
	(commodity-selling-price wood >= 53)
	(nand	(up-compare-const gv-michi-style == 1)
		(game-time < 2160))
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "Sell wood for halbs")
)

(defrule
	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
	(or	(and	(goal gl-strategy xbow-rush)
			(and	(gold-amount < 50)
				(and	(research-completed ri-bodkin-arrow)
					(and	(research-completed ri-crossbow)
						(commodity-selling-price food >= 55)))))
		(food-amount > 1100))
	(gold-amount < 200)
	(food-amount > 250)
	(can-sell-commodity food)
=>
	(sell-commodity food)
)

(defrule
	(or	(strategic-number sn-minimum-water-body-size-for-dock != 2002)
		(wood-amount > 300))
	(up-research-status c: ri-guilds != research-pending)
	(or	(gold-amount < 800)
		(food-amount >= 3000))
	(gold-amount < 1200)
	(food-amount >= 2000)
	(can-sell-commodity food)
=>
	(sell-commodity food)
	(sell-commodity food)
	(sell-commodity food)
	(chat-to-player my-player-number "Sell food x3")
)

(defrule
	(up-compare-goal gl-wonder-build-attempt != YES)
	(goal TC 0)
	(goal CASTLE 0)
	(up-research-status c: ri-guilds != research-pending)
	(or	(or	(goal gl-strategy xbow-rush)
			(goal gl-strategy turkish-fast-imp))
		(and	(goal gl-eew-strategy-type fast-imp)
			(building-type-count-total castle > 0)))
	(commodity-selling-price stone >= 50)
	(can-sell-commodity stone)
=>
	(sell-commodity stone)
)

(defrule
	(up-compare-goal gl-strategy != turtle-rush)
	(up-compare-goal gl-current-age <= gv-feudal)
	(strategic-number sn-minimum-water-body-size-for-dock == 2001)
	(gold-amount < 200)
	(stone-amount >= 200)
	(can-sell-commodity stone)
=>
	(sell-commodity stone)
)

#load-if-defined SARACEN-CIV
(defrule
	(goal gl-strategy heavy-krush)
	(or	(and	(food-amount < 50)
			(commodity-buying-price food <= 200))
		(and	(food-amount < 100)
			(and	(gold-amount > 222)
				(commodity-buying-price food <= 160))))
	(can-buy-commodity food)
=>
	(buy-commodity food)
	(chat-to-player my-player-number "Buy food")
)

(defrule
	(goal gl-strategy heavy-krush)
	(up-compare-goal gl-current-age <= gv-feudal)
	(gold-amount < 200)
	(can-sell-commodity wood)
	(or	(building-type-count-total stable > 0)
		(or	(building-type-count-total archery-range > 0)
			(building-type-count-total blacksmith > 0)))
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "Sell wood for up")
)

(defrule
	(goal gl-strategy heavy-krush)
	(nand	(goal RAM 1)
		(wood-amount < 350))
	(wood-amount > 130)
	(can-sell-commodity wood)
	(building-type-count-total blacksmith > 0)
	(building-type-count-total stable > 1)
	(nand	(or	(goal SLING 3)
			(building-type-count-total town-center > 1))
		(building-type-count-total stable < 4))
	(commodity-selling-price wood >= 35)
=>
	(sell-commodity wood)
)

(defrule
	(goal gl-strategy heavy-krush)
	(current-age == castle-age)
	(wood-amount < 200)
	(or	(building-type-count-total stable < 2)
		(and	(building-type-count-total town-center > 1)
			(building-type-count-total stable < 4)))
	(can-buy-commodity wood)
=>
	(buy-commodity wood)
)
#end-if

(defrule
	(or 	(and	(goal gl-strategy heavy-krush)
			(and	(food-amount < 60)
				(civ-selected saracen)))
		(or	(and	(goal gl-strategy heavy-krush)
				(and	(food-amount < 250)
					(up-research-status c: ri-chain-barding <= research-available)))
			(gold-amount > 2000)))
	(food-amount < 1000)
	(can-buy-commodity food)
=>
	(buy-commodity food)
)

#load-if-not-defined BRITON-CIV
#load-if-not-defined GOTHIC-CIV
#load-if-not-defined KOREAN-CIV
#load-if-not-defined CHINESE-CIV
#load-if-not-defined JAPANESE-CIV
#load-if-not-defined PERSIAN-CIV

(defrule
	(strategic-number sn-allow-resource-spending != -1)
=>
	(up-jump-rule 3)
)

(defrule
	(not	(goal gl-strategy CA-rush))
	(strategic-number sn-allow-resource-spending == -1)
	(can-sell-commodity wood)
	(gold-amount < 1000)
	(commodity-selling-price wood >= 35)
=>
	(sell-commodity wood)
	(chat-to-player my-player-number "Sell wood for heresy")
)

(defrule
	(not	(goal gl-strategy CA-rush))
	(strategic-number sn-allow-resource-spending == -1)
	(can-sell-commodity food)
	(gold-amount < 1000)
	(commodity-selling-price food >= 50)
=>
	(sell-commodity food)
	(chat-to-player my-player-number "Sell food for heresy")
)

(defrule
	(up-compare-goal gl-wonder-build-attempt-stage != saving-resources)
	(not	(goal gl-strategy CA-rush))
	(nand	(goal gl-strategy fi-monk-rush)
		(building-type-count-total castle < 1))
	(strategic-number sn-allow-resource-spending == -1)
	(can-sell-commodity stone)
	(gold-amount < 1000)
	(or	(commodity-selling-price stone >= 70)
		(goal CASTLE 0))
	(commodity-selling-price stone >= 50)
=>
	(sell-commodity stone)
	(chat-to-player my-player-number "Sell stone for heresy")
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if

(defrule
	(up-compare-goal CASTLE != 0)
	(or	(and	(commodity-buying-price stone < 200)
			(building-type-count-total castle < 3))
		(and	(gold-amount > extra-gold-to-buy-castle)
			(up-compare-goal FFA != YES)))
	(or	(gold-amount > 1400)
		(commodity-buying-price stone < 140))
	(gold-amount > 800)
	(commodity-buying-price stone < 350)
	(stone-amount < castle-stone)
	(can-buy-commodity stone)
=>
	(buy-commodity stone)
)
#end-if

#end-if; DM

; =============== CLOSE BUILD

(defrule
	(up-compare-goal TSA >= 1)
	(or	(up-pending-placement c: barracks)
		(or	(up-pending-placement c: archery-range)
			(or	(up-pending-placement c: stable)
				(or	(up-pending-placement c: siege-workshop)
					(or	(up-pending-placement c: university)
						(or	(up-pending-placement c: blacksmith)
							(up-pending-placement c: monastery)))))))
=>
	(set-goal gl-close-build YES)
)

(defrule
	(up-compare-goal TSA >= 1)
	(wood-amount < 175)
	(not	(up-pending-placement c: blacksmith))
	(or	(up-pending-placement c: barracks)
		(or	(up-pending-placement c: archery-range)
			(or	(up-pending-placement c: stable)
				(up-pending-placement c: monastery))))
=>
	(set-goal gl-close-build NO)
)

(defrule
	(up-compare-goal TSA >= 1)
	(or	(up-pending-placement c: siege-workshop)
		(up-pending-placement c: university))
	(wood-amount < 200)
	(nor	(up-pending-placement c: barracks)
		(up-pending-placement c: archery-range))
	(nor	(up-pending-placement c: stable)
		(up-pending-placement c: monastery))
	(not	(up-pending-placement c: blacksmith))
=>
	(set-goal gl-close-build NO)
)

(defrule
	(up-compare-goal TSA >= 1)
	(up-pending-placement c: blacksmith)
	(wood-amount < 150)
=>
	(set-goal gl-close-build NO)
)

(defrule
	(goal gl-close-build YES)
	(up-compare-goal TSA >= 1)
	(up-compare-goal gl-close-build-stage < 40)
	(up-compare-goal gl-saved-town-size < 40)
	(strategic-number sn-maximum-town-size >= 45)
=>
	(up-modify-goal gl-saved-town-size s:= sn-maximum-town-size)
)

(defrule
	(or	(nor	(up-pending-placement c: barracks)
			(or	(up-pending-placement c: archery-range)
				(or	(up-pending-placement c: stable)
					(or	(up-pending-placement c: siege-workshop)
						(or	(up-pending-placement c: university)
							(or	(up-pending-placement c: blacksmith)
								(up-pending-placement c: monastery)))))))
		(up-compare-goal TSA <= 0))
=>
	(set-goal gl-close-build NO)
)

(defrule
	(goal gl-close-build YES)
	(up-compare-goal gl-close-build-stage < 40)
=>
	(up-modify-goal gl-close-build-stage c:+ 2)
	(up-modify-sn sn-maximum-town-size g:= gl-close-build-stage)
)

(defrule
	(goal gl-close-build NO)
	(up-compare-goal TSA >= 1)
	(strategic-number sn-maximum-town-size g:< gl-saved-town-size)
=>
	(up-modify-sn sn-maximum-town-size g:= gl-saved-town-size)
)

(defrule
	(goal gl-close-build NO)
	(or	(up-compare-goal gl-close-build-stage != 10)
		(up-compare-goal gl-saved-town-size != 10))
=>
	(set-goal gl-close-build-stage 10)
	(set-goal gl-saved-town-size 10)
)

; =============== CONCLUSION OF THE NEEDED GATHERER PERCENTAGES

(defrule
	(goal gl-fixed-eco-balancing YES)
=>
	(up-jump-rule 28)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(game-time < 2600)
	(up-compare-const gv-michi-style == 1)
	(timer-triggered 3)
=>
	(up-jump-rule 22)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(or	(up-compare-goal gl-available-wood-amount > 700)
		(food-amount < 400))
	(up-compare-goal gl-available-wood-amount > 250)
	(food-amount < 800)
	(up-compare-goal gl-wood-gp-points > 12)
=>
	(up-modify-goal gl-wood-gp-points c:- 10)
	(up-modify-goal gl-food-gp-points c:+ 7)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(wood-amount > 1500)
	(or	(wood-amount > 2000)
		(food-amount < 1100))
	(or	(wood-amount > 3000)
		(food-amount < 1600))
	(food-amount < 2500)
	(up-compare-goal gl-wood-gp-points > 10)
=>
	(up-modify-goal gl-wood-gp-points c:- 8)
	(up-modify-goal gl-food-gp-points c:+ 12)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(food-amount > 1500)
	(or	(food-amount > 2000)
		(wood-amount < 1100))
	(or	(food-amount > 3000)
		(wood-amount < 1600))
	(wood-amount < 2500)
	(up-compare-goal gl-food-gp-points > 10)
=>
	(up-modify-goal gl-food-gp-points c:- 8)
	(up-modify-goal gl-wood-gp-points c:+ 11)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-castle-up)
	(timer-triggered 3)
	(or	(up-compare-goal gl-available-food-amount > 900)
		(wood-amount < 600))
	(up-compare-goal gl-available-food-amount > 550)
	(wood-amount < 300)
	(up-compare-goal gl-food-gp-points > 12)
=>
	(up-modify-goal gl-food-gp-points c:- 10)
	(up-modify-goal gl-wood-gp-points c:+ 10)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(game-time > 2000)
	(strategic-number sn-allow-resource-spending >= 0)
	(wood-amount < 600)
	(up-compare-goal gl-available-food-amount > 1500)
	(up-compare-goal gl-available-gold-amount > 800)
=>
	(up-modify-goal gl-wood-gp-points c:+ 30)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(strategic-number sn-allow-resource-spending >= 0)
	(food-amount < 400)
	(up-compare-goal gl-available-gold-amount > 300)
=>
	(up-modify-goal gl-food-gp-points c:+ 7)
	(up-modify-goal gl-gold-gp-points c:- 3)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(strategic-number sn-allow-resource-spending >= 0)
	(wood-amount < 400)
	(up-compare-goal gl-available-gold-amount > 300)
	(nand	(food-amount > 500)
		(research-available imperial-age))
=>
	(up-modify-goal gl-wood-gp-points c:+ 7)
	(up-modify-goal gl-gold-gp-points c:- 3)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(or	(up-compare-goal gl-food-gp-points < 14)
		(up-compare-goal gl-wood-gp-points > 10))
	(or	(food-amount < 250)
		(up-compare-goal gl-available-wood-amount > 800))
	(food-amount < 700)
	(up-compare-goal gl-available-wood-amount > 350)
=>
	(up-modify-goal gl-food-gp-points c:+ 3)
	(up-modify-goal gl-wood-gp-points c:- 3)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(or	(up-compare-goal gl-food-gp-points < 14)
		(up-compare-goal gl-wood-gp-points > 10))
	(or	(food-amount < 500)
		(up-compare-goal gl-available-wood-amount > 1100))
	(food-amount < 1000)
	(up-compare-goal gl-available-wood-amount > 600)
=>
	(up-modify-goal gl-food-gp-points c:+ 3)
	(up-modify-goal gl-wood-gp-points c:- 3)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(strategic-number sn-allow-resource-spending >= 0)
	(food-amount < 600)
	(up-compare-goal gl-available-gold-amount > 700)
=>
	(up-modify-goal gl-food-gp-points c:+ 12)
	(up-modify-goal gl-gold-gp-points c:- 5)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(strategic-number sn-allow-resource-spending >= 0)
	(wood-amount < 600)
	(up-compare-goal gl-available-gold-amount > 700)
=>
	(up-modify-goal gl-wood-gp-points c:+ 12)
	(up-modify-goal gl-gold-gp-points c:- 5)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(current-age == castle-age)
	(goal gl-current-age gv-castle)
	(soldier-count > 40)
	(timer-triggered 3)
	(game-time > 2000)
	(building-type-count-total town-center > 1)
	(wood-amount > 150)
	(food-amount > 450)
	(gold-amount > 350)
=>
	(up-modify-goal gl-food-gp-points c:+ 9)
	(up-modify-goal gl-wood-gp-points c:+ 5)
	(up-modify-goal gl-gold-gp-points c:+ 6)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(up-compare-goal gl-available-wood-amount > 300)
	(gold-amount < 200)
	(food-amount < 200)
=>
	(up-modify-goal gl-food-gp-points c:+ 15)
	(up-modify-goal gl-wood-gp-points c:+ 5)
	(up-modify-goal gl-gold-gp-points c:+ 7)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(wood-amount < 200)
	(up-compare-goal gl-available-gold-amount > 300)
	(food-amount < 200)
=>
	(up-modify-goal gl-food-gp-points c:+ 12)
	(up-modify-goal gl-wood-gp-points c:+ 12)
	(up-modify-goal gl-gold-gp-points c:+ 2)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(up-compare-goal gl-available-wood-amount > 200)
	(gold-amount < 100)
	(up-compare-goal gl-available-food-amount > 250)
=>
	(up-modify-goal gl-food-gp-points c:+ 7)
	(up-modify-goal gl-wood-gp-points c:+ 5)
	(up-modify-goal gl-gold-gp-points c:+ 11)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(nand	(food-amount > 450)
		(and	(gold-amount > 350)
			(up-compare-goal gl-current-age <= gv-castle)))
	(wood-amount < 150)
	(up-compare-goal gl-available-gold-amount > 150)
	(up-compare-goal gl-available-food-amount > 250)
=>
	(up-modify-goal gl-food-gp-points c:+ 6)
	(up-modify-goal gl-wood-gp-points c:+ 12)
	(up-modify-goal gl-gold-gp-points c:+ 2)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(up-compare-goal gl-available-wood-amount > 200)
	(up-compare-goal gl-available-gold-amount > 200)
	(food-amount < 150)
=>
	(up-modify-goal gl-food-gp-points c:+ 13)
	(up-modify-goal gl-wood-gp-points c:+ 7)
	(up-modify-goal gl-gold-gp-points c:+ 3)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(wood-amount < 150)
	(gold-amount < 150)
	(up-compare-goal gl-available-food-amount > 200)
=>
	(up-modify-goal gl-food-gp-points c:+ 7)
	(up-modify-goal gl-wood-gp-points c:+ 16)
	(up-modify-goal gl-gold-gp-points c:+ 16)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(up-compare-goal gl-available-wood-amount > 350)
	(gold-amount < 200)
	(food-amount < 200)
=>
	(up-modify-goal gl-food-gp-points c:+ 14)
	(up-modify-goal gl-wood-gp-points c:+ 6)
	(up-modify-goal gl-gold-gp-points c:+ 10)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(wood-amount < 120)
	(gold-amount < 120)
	(food-amount < 120)
=>
	(up-modify-goal gl-food-gp-points c:+ 19)
	(up-modify-goal gl-wood-gp-points c:+ 25)
	(up-modify-goal gl-gold-gp-points c:+ 7)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(up-compare-goal gl-my-villager-count-total > 85)
	(timer-triggered 3)
	(up-compare-goal gl-available-food-amount > 300)
	(up-compare-goal gl-available-wood-amount > 200)
	(or	(gold-amount < 250)
		(and	(up-compare-goal gl-available-food-amount > 600)
			(up-compare-goal gl-available-wood-amount > 400)))
	(or	(gold-amount < 550)
		(up-compare-goal gl-available-food-amount > 1200))
	(gold-amount < 900)
=>
	(up-modify-goal gl-gold-gp-points c:+ 16)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(up-compare-goal gl-food-gp-points < 0)
	(timer-triggered 3)
=>
	(set-goal gl-food-gp-points 0)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(up-compare-goal gl-wood-gp-points < 0)
	(timer-triggered 3)
=>
	(set-goal gl-wood-gp-points 0)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(dropsite-min-distance gold == -1)
		(or	(dropsite-min-distance gold == 255)
			(up-compare-goal gl-gold-gp-points < 0)))
	(timer-triggered 3)
=>
	(set-goal gl-gold-gp-points 0)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
=>
	(set-strategic-number sn-food-gatherer-percentage 0)
	(set-strategic-number sn-wood-gatherer-percentage 0)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-goal gl-gp-points-total 0)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
=>
	(up-modify-goal gl-gp-points-total g:+ gl-food-gp-points)
	(up-modify-goal gl-gp-points-total g:+ gl-wood-gp-points)
	(up-modify-goal gl-gp-points-total g:+ gl-gold-gp-points)
	(up-modify-goal gl-food-gp-points c:* 100)
	(up-modify-goal gl-wood-gp-points c:* 100)
	(up-modify-goal gl-gold-gp-points c:* 100)
	(up-modify-goal gl-food-gp-points g:/ gl-gp-points-total)
	(up-modify-goal gl-wood-gp-points g:/ gl-gp-points-total)
	(up-modify-goal gl-gold-gp-points g:/ gl-gp-points-total)
	(up-modify-sn sn-food-gatherer-percentage g:= gl-food-gp-points)
	(up-modify-sn sn-wood-gatherer-percentage g:= gl-wood-gp-points)
	(up-modify-sn sn-gold-gatherer-percentage g:= gl-gold-gp-points)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
	(taunt-detected my-player-number 241)
=>
	(up-chat-data-to-player my-player-number "Food: %d" s: sn-food-gatherer-percentage)
	(up-chat-data-to-player my-player-number "Wood: %d" s: sn-wood-gatherer-percentage)
	(up-chat-data-to-player my-player-number "Gold: %d" s: sn-gold-gatherer-percentage)
)

(defrule
	(goal gl-fixed-eco-balancing NO)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(timer-triggered 3)
=>
	(enable-timer 3 35)
)

(defrule
	(or	(goal gl-fixed-eco-balancing NO)
		(or	(goal gl-strategy grush)
			(or	(goal gl-strategy turtle-rush)
				(or	(goal gl-strategy war-galley-rush)
					(or	(goal gl-strategy fire-ship-rush)
						(goal gl-strategy sling))))))
=>
	(up-jump-rule 4)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal DOCK != 0)
	(up-compare-goal gl-current-age >= gv-dark-up)
=>
	(up-modify-goal gl-my-food-gp s:= sn-food-gatherer-percentage)
	(up-modify-goal gl-my-wood-gp s:= sn-wood-gatherer-percentage)
	(up-modify-goal gl-my-gold-gp s:= sn-gold-gatherer-percentage)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal DOCK != 0)	
	(up-compare-goal gl-my-food-gp >= 25)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(wood-amount < 200)
	(food-amount > 150)
	(up-compare-goal gl-modified-eco-balancing != YES)
	(strategic-number sn-gold-gatherer-percentage > 0)
=>
	(up-modify-goal gl-saved-food-gp s:= sn-food-gatherer-percentage)
	(up-modify-goal gl-saved-wood-gp s:= sn-wood-gatherer-percentage)
	(up-modify-goal gl-saved-gold-gp s:= sn-gold-gatherer-percentage)
	(set-goal gl-modified-eco-balancing 1)
)

(defrule
	(goal gl-modified-eco-balancing 1)
=>
	(up-modify-goal gl-my-food-gp c:- 20)
	(up-modify-goal gl-my-wood-gp c:+ 15)
	(up-modify-goal gl-my-gold-gp c:+ 5)
	(up-modify-sn sn-food-gatherer-percentage g:= gl-my-food-gp)
	(up-modify-sn sn-wood-gatherer-percentage g:= gl-my-wood-gp)
	(up-modify-sn sn-gold-gatherer-percentage g:= gl-my-gold-gp)
	(set-goal gl-modified-eco-balancing YES)
)

(defrule
	(goal gl-fixed-eco-balancing YES)
	(up-compare-goal DOCK != 0)
	(up-compare-goal gl-current-age >= gv-dark-up)
	(or	(wood-amount > 400)
		(food-amount < 150))
	(goal gl-modified-eco-balancing YES)
=>
	(up-modify-sn sn-food-gatherer-percentage g:= gl-saved-food-gp)
	(up-modify-sn sn-wood-gatherer-percentage g:= gl-saved-wood-gp)
	(up-modify-sn sn-gold-gatherer-percentage g:= gl-saved-gold-gp)
	(set-goal gl-modified-eco-balancing NO)
)

(defrule
	(taunt-detected my-player-number 242)
=>
	(acknowledge-taunt my-player-number 241)
	(acknowledge-taunt my-player-number 242)
)

#load-if-not-defined DEFEND-WONDER
(defrule
	(timer-triggered 5)
	(food-amount > 1600)
	(wood-amount > 1300)
	(gold-amount > 1200)
=>
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(release-escrow food)
	(release-escrow wood)
	(release-escrow gold)
	(release-escrow stone)
	(enable-timer 5 20)
)

(defrule
	(timer-triggered 5)
	(nor	(and	(dropsite-min-distance wood > 4)
			(game-time < 3600))
		(building-type-count-total town-center < 1))
	(or	(strategic-number sn-allow-resource-spending >= 0)
		(gold-amount > 1300))
=>
	(release-escrow food)
	(release-escrow wood)
	(release-escrow gold)
	(up-modify-escrow food c:= 0)
	(up-modify-escrow wood c:= 0)
	(up-modify-escrow gold c:= 0)
	(enable-timer 5 83); Randomly resets escrows to avoid bugs
)
#else
(defrule
	(building-type-count lumber-camp > 0)
	(dropsite-min-distance wood < 5)
	(up-timer-status 5 != timer-running)
	(building-type-count town-center > 0)
=>
	(up-modify-escrow food c:= 0)
	(up-modify-escrow wood c:= 0)
	(up-modify-escrow gold c:= 0)
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(release-escrow food)
	(release-escrow wood)
	(release-escrow gold)
	(release-escrow stone)
	(enable-timer 5 20)
)
#end-if



