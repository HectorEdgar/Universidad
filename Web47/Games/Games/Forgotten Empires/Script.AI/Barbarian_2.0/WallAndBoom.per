; WallAndBoom or actually drop a castle and boom ^^
; (this used to be an independent gothic AI)

; ============== RULES

(defrule
	(goal gl-strategy castle-drop)
	(up-compare-goal gl-current-age >= gv-feudal-up)
=>
	(set-goal gl-strategy gothic-boom)
)

(defrule
	(up-compare-goal gl-strategy != gothic-boom)
=>
	(up-jump-rule 102)
)

(defrule
	(goal gl-strategy gothic-boom)
	(or	(game-time > 3900)
		(or	(and	(players-unit-type-count focus-player teutonic-knight-line > 8)
				(goal SLING 0))
			(or	(and	(players-current-age focus-player == imperial-age)
					(players-unit-type-count focus-player cataphract-line > 11))
				(and	(game-time > 3000)
					(strategic-number sn-minimum-water-body-size-for-dock != 998)))))
=>
	(set-goal gl-strategy default)
	(set-goal gl-strategy-control 0)
)

(defrule
	(goal gl-strategy gothic-boom)
	(current-age >= castle-age)
	(goal MILITARY 1)
	(wood-amount > 450)
	(map-size tiny)
	(or	(up-compare-goal gl-strategy-control != HUSKS)
		(or	(and	(goal SCOUTS YES)
				(building-type-count-total barracks < 1))
			(up-compare-goal gl-current-age >= gv-castle-up)))
	(building-type-count-total barracks > 7)
	(building-type-count-total barracks < 19)
	(can-build barracks)
=>
	(build-forward barracks)
)

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
=>
	(set-goal SCOUTS NO)
	(disable-self)
)

; ================= BASIC STRATEGIC NUMBERS ETC.

(defrule
	(goal gl-strategy gothic-boom)
	(not	(goal MILITARY 1))
	(current-age >= castle-age)
	(strategic-number sn-add-rams-in-attack == 1)
=>
	(set-strategic-number sn-add-rams-in-attack 0)
	(disable-timer 2)
)

(defrule
	(goal gl-strategy gothic-boom)
	(goal MILITARY 1)
	(nand	(goal POSITION POCKET)
		(building-type-count-total town-center < 3))
	(current-age >= castle-age)
	(strategic-number sn-add-rams-in-attack == 0)
=>
	(enable-timer 2 90)
	(set-strategic-number sn-add-rams-in-attack 1)
)

; ======== AGE UP

(defrule
	(goal gl-strategy gothic-boom)
	(current-age == castle-age)
	(can-research-with-escrow imperial-age)
=>
	(release-escrow food)
	(release-escrow gold)
	(research imperial-age)
	(set-goal gl-current-age gv-castle-up)
	(enable-timer 5 300)
)

; ============= ECO BALANCING

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(current-age == feudal-age)
	(dropsite-min-distance stone < 4)
=>
	(set-strategic-number sn-food-gatherer-percentage 27)
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-gold-gatherer-percentage 10)
	(set-strategic-number sn-stone-gatherer-percentage 27)
	(disable-self)
)

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal SLING 3)
=>
	(set-strategic-number sn-food-gatherer-percentage 27)
	(set-strategic-number sn-wood-gatherer-percentage 37)
	(set-strategic-number sn-gold-gatherer-percentage 3)
	(set-strategic-number sn-stone-gatherer-percentage 33)
	(disable-self)
)

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal gl-eternal-drush YES)
=>
	(set-strategic-number sn-food-gatherer-percentage 15)
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 8)
	(set-strategic-number sn-stone-gatherer-percentage 27)
	(disable-self)
)

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(and	(stone-amount >= 650)
			(goal gl-current-age gv-feudal-up))
		(building-type-count-total castle > 0))
	(or	(goal SLING 0)
		(stone-amount >= 800))
=>
	(set-strategic-number sn-food-gatherer-percentage 37)
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 6)
	(disable-self)
)

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal gl-current-age >= gv-feudal)
	(current-age >= castle-age)
	(building-type-count-total castle > 0)
	(building-type-count-total town-center > 1)
=>
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-wood-gatherer-percentage 37)
	(set-strategic-number sn-gold-gatherer-percentage 12)
	(set-strategic-number sn-stone-gatherer-percentage 6)
	(disable-self)
)

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal gl-current-age >= gv-feudal)
	(current-age >= castle-age)
	(building-type-count-total castle > 0)
	(building-type-count-total town-center > 2)
=>
	(set-strategic-number sn-food-gatherer-percentage 56)
	(set-strategic-number sn-wood-gatherer-percentage 24)
	(set-strategic-number sn-gold-gatherer-percentage 9)
	(set-strategic-number sn-stone-gatherer-percentage 11)
	(disable-self)
)

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal gl-current-age >= gv-feudal)
	(current-age >= castle-age)
	(building-type-count-total castle > 0)
	(not	(goal gl-strategy-control HUSKS))
=>
	(set-strategic-number sn-food-gatherer-percentage 48); 50
	(set-strategic-number sn-wood-gatherer-percentage 37); 35
	(set-strategic-number sn-gold-gatherer-percentage 10)
	(set-strategic-number sn-stone-gatherer-percentage 5)
	(disable-self)
)

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal gl-current-age >= gv-feudal)
	(current-age >= castle-age)
	(nor	(goal gl-strategy-control HUSKS)
		(goal gl-strategy-control HUSKS-PIKS))
	(building-type-count-total barracks > 5)
=>
	(set-strategic-number sn-food-gatherer-percentage 51); 54
	(set-strategic-number sn-wood-gatherer-percentage 27); 24
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 4)
	(disable-self)
)

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal gl-current-age >= gv-feudal)
	(current-age >= castle-age)
	(goal gl-strategy-control HUSKS-PIKS)
	(building-type-count-total barracks > 5)
=>
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-wood-gatherer-percentage 28)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 4)
	(disable-self)
)

(defrule
	(goal gl-strategy gothic-boom)
	(food-amount > 500)
	(food-amount < 1200)
	(wood-amount > 500)
	(building-type-count-total barracks > 7)
	(strategic-number sn-food-gatherer-percentage != 54)
=>
	(set-strategic-number sn-food-gatherer-percentage 54)
	(set-strategic-number sn-wood-gatherer-percentage 24)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)

(defrule
	(goal gl-strategy gothic-boom)
	(or	(and	(food-amount > 1200)
			(wood-amount > 500))
		(and	(food-amount > 600)
			(and	(food-amount < 1200)
				(wood-amount < 250))))
	(building-type-count-total barracks > 7)
	(strategic-number sn-food-gatherer-percentage != 50)
=>
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-wood-gatherer-percentage 28)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)

(defrule
	(goal gl-strategy gothic-boom)
	(game-time > 1800)
	(food-amount > 1200)
	(wood-amount < 250)
	(strategic-number sn-food-gatherer-percentage != 44)
=>
	(set-strategic-number sn-food-gatherer-percentage 44)
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)

(defrule
	(goal gl-strategy gothic-boom)
	(game-time > 1800)
	(food-amount < 500)
	(wood-amount > 450)
	(strategic-number sn-food-gatherer-percentage != 60)
=>
	(set-strategic-number sn-food-gatherer-percentage 60)
	(set-strategic-number sn-wood-gatherer-percentage 18)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)

(defrule
	(goal gl-strategy gothic-boom)
	(game-time > 1800)
	(food-amount > 1500)
	(wood-amount > 1200)
	(strategic-number sn-food-gatherer-percentage != 54)
=>
	(set-strategic-number sn-food-gatherer-percentage 54)
	(set-strategic-number sn-wood-gatherer-percentage 24)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)

; ============== THREAT LEVEL - HUSKS

(defrule
	(goal gl-strategy-control HUSKS)
	(unit-type-count-total huskarl-line > 0)
	(players-current-age every-enemy <= feudal-age)
=>
	(set-strategic-number sn-threat-level -2)
	(disable-self)
)

(defrule
	(goal gl-strategy-control HUSKS)
	(players-current-age every-enemy <= feudal-age)
	(research-completed ri-scale-mail)
=>
	(set-strategic-number sn-threat-level -4)
	(disable-self)
)

(defrule
	(goal gl-strategy-control HUSKS)
	(players-current-age every-enemy >= castle-age)
=>
	(set-strategic-number sn-threat-level 0)
	(disable-self)
)

(defrule
	(goal gl-strategy-control HUSKS)
	(players-current-age every-enemy >= castle-age)
	(players-unit-type-count every-enemy militiaman-line > 2)
=>
	(set-strategic-number sn-threat-level -1)
	(disable-self)
)

(defrule
	(goal gl-strategy-control HUSKS)
	(players-current-age every-enemy >= castle-age)
	(strategic-number sn-threat-level == 0)
	(players-unit-type-count every-enemy knight-line < 2)
	(players-building-type-count every-enemy stable == 0)
	(players-building-type-count every-enemy archery-range > 0)
=>
	(set-strategic-number sn-threat-level -2)
	(disable-self)
)

(defrule
	(goal gl-strategy-control HUSKS)
	(players-current-age every-enemy >= castle-age)
	(strategic-number sn-threat-level > -2)
	(players-unit-type-count every-enemy eagle-warrior-line > 2)
=>
	(set-strategic-number sn-threat-level -2)
	(disable-self)
)

(defrule
	(goal gl-strategy-control HUSKS)
	(players-current-age every-enemy >= castle-age)
	(strategic-number sn-threat-level > -4)
	(or	(players-unit-type-count every-enemy archer-line > 2)
		(players-unit-type-count every-enemy cavalry-archer-line > 2))
	(players-unit-type-count every-enemy knight-line < 2)
	(players-unit-type-count every-enemy scout-cavalry-line < 3)
	(players-unit-type-count every-enemy militiaman-line < 3)
	(players-unit-type-count every-enemy jaguar-man-line < 3)
	(players-unit-type-count every-enemy teutonic-knight-line < 3)
=>
	(set-strategic-number sn-threat-level -4)
)

(defrule
	(goal gl-strategy-control HUSKS)
	(players-current-age every-enemy >= castle-age)
	(strategic-number sn-threat-level < 0)
	(unit-type-count-total monk < 5)
	(players-unit-type-count every-enemy knight-line > 1)
	(players-unit-type-count every-enemy archer-line < 3)
	(players-unit-type-count every-enemy cavalry-archer-line < 3)
=>
	(set-strategic-number sn-threat-level 0)
)

(defrule
	(goal gl-strategy-control HUSKS)
	(players-current-age every-enemy >= castle-age)
	(strategic-number sn-threat-level != -1)
	(players-unit-type-count every-enemy knight-line > 1)
	(or	(players-unit-type-count every-enemy archer-line > 2)
		(or	(players-unit-type-count every-enemy cavalry-archer-line > 2)
			(unit-type-count-total monk > 4)))
=>
	(set-strategic-number sn-threat-level -1)
)

(defrule
	(goal gl-strategy-control HUSKS)
	(players-current-age every-enemy >= castle-age)
	(strategic-number sn-threat-level == -2)
	(players-unit-type-count every-enemy scout-cavalry-line > 2)
=>
	(set-strategic-number sn-threat-level -1)
	(disable-self)
)

; ============= OTHER THREAT LEVELS

(defrule
	(goal gl-strategy gothic-boom)
	(not	(goal gl-strategy-control HUSKS))
	(game-time > 1700)
=>
	(set-strategic-number sn-threat-level -2)
	(disable-self)
)

(defrule
	(goal gl-strategy gothic-boom)
	(not	(goal gl-strategy-control HUSKS))
	(current-age == castle-age)
	(players-current-age every-enemy == imperial-age)
	(game-time > 1700)
=>
	(set-strategic-number sn-threat-level 1)
	(disable-self)
)

(defrule
	(goal gl-strategy gothic-boom)
	(current-age == imperial-age)
	(players-current-age every-enemy <= castle-age)
	(nand	(goal gl-strategy-control HUSKS-PIKS)
		(research-available ri-halberdier))
	(nand	(goal gl-strategy-control CHAMPS)
		(research-available ri-champion))
	(nand	(not	(goal gl-strategy-control CHAMPS))
		(research-available my-unique-unit-upgrade))
	(game-time > 1700)
=>
	(set-strategic-number sn-threat-level -4)
	(disable-self)
)

(defrule
	(goal gl-strategy gothic-boom)
	(not	(goal gl-strategy-control HUSKS))
	(current-age == imperial-age)
	(players-current-age every-enemy == imperial-age)
	(game-time > 1700)
=>
	(set-strategic-number sn-threat-level -2)
	(disable-self)
)

(defrule
	(goal SCOUTS YES)
	(strategic-number sn-threat-level != 2)
	(current-age == castle-age)
=>
	(set-strategic-number sn-threat-level 2)
)

; ============== STRATEGY

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal gl-current-age >= gv-dark-up)
=>
	(set-goal gl-strategy-control HUSKS)
	(set-goal RAM 0)
	(set-goal D-TSA 0)
	(set-strategic-number sn-threat-level 0)
	(set-strategic-number sn-build-towers-at-home 0)
	(set-goal strategy-selection-control YES)
	(disable-self)
)

(defrule
	(goal gl-strategy gothic-boom)
	(goal strategy-selection-control YES)
	(game-time < 2100)
	(or	(players-current-age target-player == imperial-age)
		(players-current-age focus-player == imperial-age))
=>
	(set-goal gl-strategy-control PICK-A-STRATEGY)
	(chat-to-player my-player-number "1Pick a strategy")
	(set-goal strategy-selection-control NO)
	(disable-self)
)

(defrule
	(goal gl-strategy gothic-boom)
	(goal strategy-selection-control YES)
	(or	(game-time > 1800)
		(goal SLING 3))
	(or	(up-compare-goal gl-current-age >= gv-castle-up)
		(or	(and	(timer-triggered 9)
				(town-under-attack))
			(goal MILITARY 1)))
=>
	(set-goal gl-strategy-control PICK-A-STRATEGY)
	(chat-to-player my-player-number "1Pick a strategy")
	(set-goal strategy-selection-control NO)
	(disable-self)
)

(defrule
	(goal gl-strategy-control PICK-A-STRATEGY)
	(or	(players-civ focus-player gothic)
		(or	(players-civ focus-player aztec)
			(or	(players-civ focus-player japanese)
				(or	(players-civ focus-player briton)
					(players-civ focus-player viking)))))
=>
	(set-goal gl-strategy-control HUSKS-CHAMPS)
	(chat-to-player my-player-number "=> Husk+champ")
	(disable-self)
)

(defrule
	(goal gl-strategy-control HUSKS-CHAMPS)
	(or	(players-civ focus-player gothic)
		(or	(players-civ focus-player aztec)
			(players-civ focus-player japanese)))
	(or	(players-unit-type-count focus-player samurai-line > 6)
		(or	(players-unit-type-count focus-player jaguar-man-line > 6)
			(players-unit-type-count focus-player militiaman-line > 10)))
	(players-unit-type-count focus-player archer-line < 5)
	(players-unit-type-count focus-player hand-cannoneer < 4)
=>
	(set-goal gl-strategy-control CHAMPS)
	(chat-to-player my-player-number "=> Champ")
)

(defrule
	(goal gl-strategy-control CHAMPS)
	(or	(players-civ focus-player gothic)
		(or	(players-civ focus-player aztec)
			(players-civ focus-player japanese)))
	(or	(players-unit-type-count focus-player samurai-line > 6)
		(or	(players-unit-type-count focus-player jaguar-man-line > 6)
			(players-unit-type-count focus-player militiaman-line > 10)))
	(or	(players-unit-type-count focus-player archer-line > 4)
		(players-unit-type-count focus-player hand-cannoneer > 3))
=>
	(set-goal gl-strategy-control HUSKS-CHAMPS)
	(chat-to-player my-player-number "=> Husk+champ")
)

(defrule
	(goal gl-strategy-control PICK-A-STRATEGY)
	(nor	(players-civ focus-player gothic)
		(or	(players-civ focus-player aztec)
			(or	(players-civ focus-player japanese)
				(or	(players-civ focus-player mayan)
					(or	(players-civ focus-player briton)
						(players-civ focus-player viking))))))
=>
	(set-goal gl-strategy-control HUSKS-PIKS)
	(chat-to-player my-player-number "=> Husk+pik")
)

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal civ-comparison c:!= 1)
	(nor	(players-civ focus-player gothic)
		(or	(players-civ focus-player aztec)
			(or	(players-civ focus-player japanese)
				(or	(players-civ focus-player mayan)
					(or	(players-civ focus-player briton)
						(players-civ focus-player viking))))))
=>
	(set-goal civ-comparison 1)
)

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal civ-comparison c:!= 0)
	(or	(players-civ focus-player gothic)
		(or	(players-civ focus-player aztec)
			(or	(players-civ focus-player japanese)
				(or	(players-civ focus-player mayan)
					(or	(players-civ focus-player briton)
						(players-civ focus-player viking))))))
=>
	(set-goal civ-comparison 0)
)

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal gl-strategy-control c:!= HUSKS)
	(up-compare-goal gl-strategy-control c:!= PICK-A-STRATEGY)
	(up-compare-goal gl-strategy-control c:!= HUSKS-PIKS)
	(goal civ-comparison 1)
	(players-unit-type-count focus-player militiaman-line < 9)
=>
	(set-goal gl-strategy-control PICK-A-STRATEGY)
)

(defrule
	(goal gl-strategy-control PICK-A-STRATEGY)
	(players-civ focus-player mayan)
=>
	(set-goal gl-strategy-control FULL-HUSKS)
	(chat-to-player my-player-number "=> Husk")
	(disable-self)
)

(defrule
	(or	(goal gl-strategy-control FULL-HUSKS)
		(and	(players-unit-type-count focus-player militiaman-line > 8)
			(goal gl-strategy-control HUSKS-PIKS)))
	(or	(players-unit-type-count focus-player militiaman-line > 8)
		(and	(players-unit-type-count focus-player eagle-warrior-line > 5)
			(players-current-age focus-player == imperial-age)))
=>
	(set-goal gl-strategy-control HUSKS-CHAMPS)
	(chat-to-player my-player-number "=> Husk+champ")
)

(defrule
	(goal gl-strategy-control HUSKS-PIKS)
	(or	(players-civ focus-player gothic)
		(or	(players-civ focus-player aztec)
			(or	(players-civ focus-player japanese)
				(or	(players-civ focus-player briton)
					(players-civ focus-player viking)))))
=>
	(set-goal gl-strategy-control HUSKS-CHAMPS)
	(chat-to-player my-player-number "=> Husk+champ")
)

(defrule
	(goal gl-strategy gothic-boom)
	(building-type-count-total town-center > 1)
	(or	(players-unit-type-count focus-player monk > 8)
		(game-time > 4000))
=>
	(set-goal SCOUTS YES)
	(chat-to-player my-player-number "Add scouts!")
	(disable-self)
)

; ============== VILLAGERS

(defrule
	(goal gl-strategy gothic-boom)
	(goal gl-strategy-control HUSKS); Needs priority
	(nand	(goal SCOUTS YES)
		(or	(research-available ri-light-cavalry)
			(unit-type-count-total scout-cavalry-line < 10)))
	(unit-type-count-total huskarl-line < 1)
	(can-train huskarl-line)
=>
	(train huskarl-line)
)

(defrule
	(building-type-count-total castle == 0)
	(current-age == dark-age)
	(unit-type-count-total villager < 31)
	(goal gl-strategy castle-drop)
	(can-train villager)
=>
	(train villager)
	(enable-timer 2 22)
)

(defrule
	(goal gl-strategy gothic-boom)
	(current-age == castle-age)
	(unit-type-count-total villager < 100)
	(nand	(can-research-with-escrow ri-hand-cart)
		(unit-type-count-total villager > 50))
	(nor	(can-research-with-escrow imperial-age)
		(can-research-with-escrow ri-wheel-barrow))
	(can-train-with-escrow villager)
=>
	(train villager)
)

; ======== BUILDINGS - HIGH PRIORITY

(defrule
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(goal gl-strategy gothic-boom)
	(up-pending-objects c: house < 2)
	(building-type-count-total town-center > 1)
	(or	(housing-headroom < 8)
		(and	(building-type-count-total town-center > 2)
			(housing-headroom < 25)))
	(population-headroom > 4)
	(can-build house)
=>
	(build house)
)

(defrule
	(goal gl-strategy gothic-boom)
	(building-type-count-total market < 1)
	(can-build market)
=>
	(build market)
)

(defrule
	(goal gl-strategy gothic-boom)
	(building-type-count-total market > 0)
	(building-type-count-total blacksmith < 1)
	(can-build blacksmith)
=>
	(build blacksmith)
)

(defrule
	(goal gl-strategy gothic-boom)
	(or	(building-type-count-total castle > 0)
		(stone-amount >= 750))
	(or	(building-type-count-total town-center < 3)
		(nand	(current-age == imperial-age)
			(game-time < 600)))
	(building-type-count-total town-center < 4)
	(can-build town-center)
=>
	(build town-center)
	(chat-to-player my-player-number "Town center")
)

(defrule
	(goal gl-strategy gothic-boom)
	(current-age < castle-age)
	(or	(up-pending-objects c: mining-camp < 1)
		(strategic-number sn-defer-dropsite-update == 0))
	(strategic-number sn-gold-gatherer-percentage > 0)
	(building-type-count-total mining-camp < 6)
	(building-type-count-total lumber-camp > 0)
	(dropsite-min-distance gold > 3)
	(resource-found gold)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(set-strategic-number sn-dropsite-separation-distance 6)
	(set-strategic-number sn-camp-max-distance 16)
	(build mining-camp)
)

(defrule
	(up-pending-objects c: mining-camp < 1)
	(goal gl-strategy gothic-boom)
	(building-type-count-total castle < 1)
	(strategic-number sn-gold-gatherer-percentage > 0)
	(building-type-count-total lumber-camp > 0)
	(dropsite-min-distance stone > 3)
	(or	(resource-found stone)
		(building-type-count-total mining-camp < 3))
	(dropsite-min-distance gold < 4)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(set-strategic-number sn-dropsite-separation-distance 6)
	(set-strategic-number sn-camp-max-distance 24)
	(build mining-camp)
)

(defrule
	(goal gl-strategy gothic-boom)
	(dropsite-min-distance stone < 4)
	(strategic-number sn-dropsite-separation-distance == 6)
=>
	(set-strategic-number sn-dropsite-separation-distance 3)
)

(defrule
	(up-pending-objects c: mining-camp < 1)
	(goal gl-strategy gothic-boom)
	(current-age >= castle-age)
	(or	(and	(dropsite-min-distance stone > 4)
			(cc-players-unit-type-count 0 stone-mine > 0))
		(and	(dropsite-min-distance gold > 4)
			(cc-players-unit-type-count 0 gold-mine > 0)))
	(dropsite-min-distance stone < 255)
	(dropsite-min-distance gold < 255)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(build mining-camp)
)

(defrule
	(up-pending-objects c: mining-camp < 1)
	(goal gl-strategy gothic-boom)
	(current-age >= castle-age)
	(building-type-count-total barracks > 2)
	(building-type-count-total mining-camp < 5)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(build mining-camp)
)

; ======== RESEARCHES - ECONOMY - HIGH PRIORITY

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal gl-current-age >= gv-feudal-up)
	(or	(can-research ri-horse-collar)
		(or	(can-research ri-double-bit-axe)
			(can-research-with-escrow ri-heavy-plow)))
=>
	(release-escrow food)
	(release-escrow wood)
  	(research ri-double-bit-axe)
  	(research ri-horse-collar)
	(research ri-heavy-plow)
)

; ======== RESEARCHES - UNIT UPGRADES

(defrule
	(goal gl-strategy gothic-boom)
	(not	(goal gl-strategy-control CHAMPS))
	(unit-type-count-total my-unique-unit-line > 15)
	(research-available my-unique-unit-upgrade)
=>
	(set-escrow-percentage food 70)
	(set-escrow-percentage gold 50)
)

(defrule
	(goal gl-strategy gothic-boom)
	(not	(goal gl-strategy-control CHAMPS))
	(can-research-with-escrow my-unique-unit-upgrade)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
 	(research my-unique-unit-upgrade)
)

(defrule
	(goal gl-strategy gothic-boom)
	(goal gl-strategy-control HUSKS-PIKS)
	(unit-type-count-total spearman-line > 5)
	(building-type-count-total barracks > 0)
	(research-available ri-halberdier)
=>
	(set-escrow-percentage food 60)
	(set-escrow-percentage gold 60)
)

(defrule
	(goal gl-strategy gothic-boom)
	(goal gl-strategy-control HUSKS-PIKS)
	(or	(can-research-with-escrow ri-pikeman)
		(can-research-with-escrow ri-halberdier))
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-pikeman)
	(research ri-halberdier)
)

(defrule
	(goal gl-strategy gothic-boom)
	(or	(goal gl-strategy-control HUSKS-CHAMPS)
		(goal gl-strategy-control CHAMPS))
	(or	(can-research-with-escrow ri-man-at-arms)
		(can-research-with-escrow ri-long-swordsman))
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-man-at-arms)
	(research ri-long-swordsman)
)

(defrule
	(goal gl-strategy gothic-boom)
	(or	(goal gl-strategy-control HUSKS-CHAMPS)
		(goal gl-strategy-control CHAMPS))
	(can-research-with-escrow ri-two-handed-swordsman)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-two-handed-swordsman)
)

(defrule
	(goal gl-strategy gothic-boom)
	(or	(goal gl-strategy-control HUSKS-CHAMPS)
		(goal gl-strategy-control CHAMPS))
	(can-research-with-escrow ri-champion)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-champion)
)

(defrule
;	(goal gl-strategy gothic-boom)
	(or	(town-under-attack)
		(or	(game-time > 1500)
			(or	(up-compare-goal POSITION != POCKET)
				(goal MILITARY 1))))
	(unit-type-count-total huskarl-line > 0)
	(or	(can-research ri-scale-mail)
		(or	(can-research ri-chain-mail)
			(can-research ri-squires)))
=>
	(research ri-scale-mail)
	(research ri-chain-mail)
	(research ri-squires)
)

(defrule
	(goal gl-strategy gothic-boom)
	(or	(not	(goal gl-strategy-control HUSKS))
		(goal MILITARY 1))
	(or	(can-research ri-forging)
		(or	(can-research ri-iron-casting)
			(or	(can-research ri-blast-furnace)
				(can-research ri-tracking))))
=>
	(research ri-forging)
	(research ri-iron-casting)
	(research ri-blast-furnace)
	(research ri-tracking)
)

(defrule
	(goal gl-strategy gothic-boom)
	(not	(goal gl-strategy-control CHAMPS))
	(or	(up-compare-goal gl-current-age >= gv-castle-up)
		(goal gl-strategy-control FULL-HUSKS))
	(can-research ri-anarchy)
=>
	(research ri-anarchy)
)

(defrule
	(goal gl-strategy gothic-boom)
	(current-age-time > 300)
	(or	(can-research ri-conscription)
		(can-research ri-perfusion))
=>
	(research ri-conscription)
	(research ri-perfusion)
)

(defrule
	(goal gl-strategy gothic-boom)
	(or	(unit-type-count-total battering-ram-line > 1)
		(and	(unit-type-count-total battering-ram-line > 0)
			(population > 200)))
	(can-research ri-capped-ram)
=>
	(research ri-capped-ram)
)

(defrule
	(goal gl-strategy gothic-boom)
	(unit-type-count-total scout-cavalry-line > 4)
	(or	(can-research ri-scale-barding)
		(or	(can-research ri-chain-barding)
			(or	(can-research ri-forging)
				(can-research ri-iron-casting))))
=>
	(research ri-scale-barding)
	(research ri-chain-barding)
	(research ri-forging)
	(research ri-iron-casting)
)

(defrule
	(goal gl-strategy gothic-boom)
	(research-completed ri-light-cavalry)
	(unit-type-count-total scout-cavalry-line > 5)
	(or	(can-research ri-bloodlines)
		(can-research ri-husbandry))
=>
	(research ri-bloodlines)
	(research ri-husbandry)
)

(defrule
	(goal gl-strategy gothic-boom)
	(players-unit-type-count any-enemy monk > 3)
	(unit-type-count-total scout-cavalry-line > 1)
	(research-available ri-light-cavalry)
=>
	(set-escrow-percentage food 40)
	(set-escrow-percentage gold 40)
)

(defrule
	(goal gl-strategy gothic-boom)
	(or	(and	(players-unit-type-count any-enemy monk > 3)
			(unit-type-count-total scout-cavalry-line > 1))
		(unit-type-count-total scout-cavalry-line > 4))
	(can-research-with-escrow ri-light-cavalry)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-light-cavalry)
)

; ======== RESEARCHES - ECONOMY - LOW PRIORITY

(defrule
	(goal gl-strategy gothic-boom)
	(can-research ri-guilds)
=>
	(research ri-guilds)
)

; ======== BUILDINGS - CASTLE

(defrule
	(goal gl-strategy gothic-boom)
	(or	(nand	(goal SCOUTS YES)
			(and	(building-type-count-total stable < 2)
				(wood-amount < 235)))
		(building-type-count-total farm < 20))
	(research-available ri-heavy-plow)
	(nand	(up-compare-goal gl-strategy-control != HUSKS)
		(building-type-count-total barracks < 2))
	(current-age-time > 20)
	(idle-farm-count <= 1)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(goal gl-strategy gothic-boom)
	(nand	(goal SCOUTS YES)
		(and	(building-type-count-total stable < 2)
			(wood-amount < 235)))
	(research-completed ri-heavy-plow)
	(nand	(up-compare-goal gl-strategy-control != HUSKS)
		(and	(building-type-count-total barracks < 2)
			(wood-amount < 235)))
	(idle-farm-count <= 1)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(goal gl-strategy gothic-boom)
	(goal SCOUTS YES)
	(current-age >= castle-age)
	(or	(building-type-count-total stable < 2)
		(up-compare-goal gl-current-age >= gv-castle-up))
	(building-type-count-total stable < 3)
	(can-build stable)
=>
	(build stable)
)

(defrule
	(goal gl-strategy gothic-boom)
	(current-age >= castle-age)
	(or	(not	(goal gl-strategy-control HUSKS))
		(or	(and	(goal SCOUTS YES)
				(building-type-count-total barracks < 1))
			(up-compare-goal gl-current-age >= gv-castle-up)))
	(building-type-count-total barracks < 12)
	(can-build barracks)
=>
	(build barracks)
)

(defrule
	(goal gl-strategy gothic-boom)
	(strategic-number sn-add-rams-in-attack == 1)
	(building-type-count-total siege-workshop < 2)
	(or	(building-type-count-total siege-workshop < 1)
		(game-time > 3000))
	(can-build siege-workshop)
=>
	(build siege-workshop)
)

(defrule
	(goal gl-strategy gothic-boom)
	(or	(and	(research-completed my-unique-unit-upgrade)
			(or	(research-completed ri-halberdier)
				(or	(goal gl-strategy-control FULL-HUSKS)
					(research-completed ri-champion))))
		(and	(research-completed ri-champion)
			(goal gl-strategy-control CHAMPS)))
	(building-type-count-total archery-range < 3)
	(can-build archery-range)
=>
	(build archery-range)
)

; ======== UNITS - ARMY

(defrule
	(goal gl-strategy gothic-boom)
	(goal SCOUTS YES)
	(unit-type-count-total scout-cavalry-line < 30)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line)
)

(defrule
	(goal gl-strategy gothic-boom)
	(current-age >= castle-age)
	(game-time > 2100)
	(food-amount > 88)
	(or	(players-unit-type-count focus-player militiaman-line > 13)
		(players-unit-type-count target-player militiaman-line > 13))
	(or	(unit-type-count-total militiaman-line < 25)
		(up-compare-goal gl-current-age >= gv-castle-up))
	(nor	(research-available ri-long-swordsman)
		(research-available ri-chain-mail))
	(unit-type-count-total militiaman-line < 40)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(goal gl-strategy-control HUSKS)
	(not	(goal gl-petard-wall-break-status YES))
	(nand	(goal SCOUTS YES)
		(or	(research-available ri-light-cavalry)
			(unit-type-count-total scout-cavalry-line < 10)))
	(nand	(research-available ri-wheel-barrow)
		(and	(unit-type-count-total villager > 33)
			(unit-type-count-total huskarl-line > 5)))
	(unit-type-count-total huskarl-line < 30)
	(can-train huskarl-line)
=>
	(train huskarl-line)
)

(defrule
	(goal gl-strategy-control HUSKS)
	(goal gl-petard-wall-break-status YES)
	(unit-type-count-total petard > 2)
	(nand	(goal SCOUTS YES)
		(or	(research-available ri-light-cavalry)
			(unit-type-count-total scout-cavalry-line < 10)))
	(nand	(research-available ri-wheel-barrow)
		(and	(unit-type-count-total villager > 33)
			(unit-type-count-total huskarl-line > 5)))
	(unit-type-count-total huskarl-line < 30)
	(can-train huskarl-line)
=>
	(train huskarl-line)
)

(defrule
	(goal gl-strategy-control HUSKS-PIKS)
	(food-amount >= 52)
	(unit-type-count-total spearman-line < 70)
	(nand	(research-available ri-pikeman)
		(unit-type-count-total spearman-line > 15))
	(nand	(unit-type-count-total spearman-line > 40)
		(nor	(research-completed ri-elite-huskarl)
			(research-completed ri-halberdier)))
	(can-train spearman-line)
=>
	(train spearman-line)
)

(defrule
	(or	(goal gl-strategy-control CHAMPS)
		(and	(goal gl-strategy-control HUSKS-CHAMPS)
			(food-amount >= 80)))
	(nand	(unit-type-count-total militiaman-line > 40)
		(and	(not	(research-completed ri-elite-huskarl))
			(goal gl-strategy-control HUSKS-CHAMPS)))
	(unit-type-count-total militiaman-line < 70)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

(defrule
	(or	(goal gl-strategy-control HUSKS-CHAMPS)
		(goal gl-strategy-control HUSKS-PIKS))
	(nand	(research-available ri-pikeman)
		(and	(unit-type-count-total huskarl-line > 15)
			(goal gl-strategy-control HUSKS-PIKS)))
	(nand	(unit-type-count-total huskarl-line > 25)
		(not	(research-completed ri-elite-huskarl)))
	(unit-type-count-total huskarl-line < 50)
	(can-train huskarl-line)
=>
	(train huskarl-line)
)

(defrule
	(or	(goal gl-strategy-control HUSKS-CHAMPS)
		(goal gl-strategy-control HUSKS-PIKS))
	(or	(and	(unit-type-count-total huskarl2 < 10)
			(not	(research-completed ri-elite-huskarl)))
		(and	(unit-type-count-total elite-huskarl2 < 30)
			(research-completed ri-elite-huskarl)))
	(or	(can-train huskarl2)
		(can-train elite-huskarl2))
=>
	(train huskarl2)
	(train elite-huskarl2)
)

(defrule
	(goal gl-strategy-control FULL-HUSKS)
	(nand	(unit-type-count-total huskarl-line > 45)
		(research-available my-unique-unit-upgrade))
	(nand	(unit-type-count-total huskarl-line > 57)
		(not	(research-completed ri-elite-huskarl)))
	(unit-type-count-total huskarl-line < 100)
	(can-train huskarl-line)
=>
	(train huskarl-line)
)

(defrule
	(goal gl-strategy-control FULL-HUSKS)
	(or	(and	(unit-type-count-total huskarl2 < 15)
			(not	(research-completed ri-elite-huskarl)))
		(and	(unit-type-count-total elite-huskarl2 < 50)
			(research-completed ri-elite-huskarl)))
	(or	(can-train huskarl2)
		(can-train elite-huskarl2))
=>
	(train huskarl2)
	(train elite-huskarl2)
)

; ======== ATTACKING

(defrule
	(goal gl-strategy gothic-boom)
	(current-age >= feudal-age)
=>
	(enable-timer 1 0)
	(disable-self)
)

(defrule
	(goal gl-strategy gothic-boom)
	(or	(and	(players-building-type-count target-player stone-wall-line < 1)
			(building-type-count-total stone-wall-line < 1))
		(or	(players-military-population any-enemy > 4)
			(or	(goal gl-petard-wall-break-status DONE)
				(players-building-type-count target-player castle > 0))))
	(current-age >= castle-age)
=>
	(enable-timer 7 0)
	(set-goal gl-petard-wall-break-status NO)
	(disable-self)
)

; ========= MARKET - BALANCING THE RESOURCES

(defrule
	(goal gl-strategy gothic-boom)
	(current-age >= castle-age)
	(food-amount < 200)
	(gold-amount > 500)
	(commodity-buying-price food < 140)
	(can-buy-commodity food)
=>
	(buy-commodity food)
	(chat-to-player my-player-number "Buy food")
)

(defrule
	(current-age-time > 60)
	(current-age == imperial-age)
	(goal gl-strategy-control HUSKS-PIKS)
	(unit-type-count-total spearman-line > 8)
	(research-available ri-halberdier)
	(food-amount > 500)
	(gold-amount < 600)
	(can-sell-commodity food)
	(commodity-selling-price food >= 70)
=>
	(sell-commodity food)
	(chat-to-player my-player-number "Sell food for halbs")
)

(defrule
	(goal gl-strategy gothic-boom)
	(or	(current-age-time > 600)
		(current-age == imperial-age))
	(current-age-time > 60)
	(or	(and	(gold-amount < 50)
			(food-amount > 400))
		(food-amount > 1400))
	(gold-amount < 800)
	(can-sell-commodity food)
	(or	(commodity-selling-price food >= 50)
		(food-amount > 1700))
=>
	(sell-commodity food)
)

(defrule
	(goal gl-strategy gothic-boom)
	(up-compare-goal gl-current-age >= gv-castle-up)
	(gold-amount > 1000)
	(wood-amount < 150)
	(can-buy-commodity wood)
	(or	(commodity-buying-price wood <= 140)
		(gold-amount > 1500))
=>
	(buy-commodity wood)
	(chat-to-player my-player-number "Buy wood")
)

(defrule
	(goal gl-strategy gothic-boom)
	(current-age == castle-age)
	(building-type-count-total castle == 0)
	(stone-amount >= 450)
	(stone-amount < 650)
	(can-buy-commodity stone)
	(town-under-attack)
=>
	(buy-commodity stone)
	(chat-to-player my-player-number "Buy stone for castle")
)



